{"ast":null,"code":"var _jsxFileName = \"/home/abu/Documents/dev/JS/experiments/exp1/client/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport domain from \"../../util/domain\";\nimport ErrorMessage from \"../misc/ErrorMessage\";\nimport \"./AuthForm.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [formEmail, setFormEmail] = useState(\"\");\n  const [formPassword, setFormPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const {\n    getUser\n  } = useContext(UserContext);\n  const history = useHistory();\n\n  async function login(e) {\n    e.preventDefault();\n    const loginData = {\n      email: formEmail,\n      password: formPassword\n    };\n\n    try {\n      await Axios.post(`${domain}/auth/login`, loginData);\n    } catch (err) {\n      if (err.response) {\n        if (err.response.data.errorMessage) {\n          setErrorMessage(err.response.data.errorMessage);\n        }\n      }\n\n      return;\n    }\n\n    await getUser();\n    history.push(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessage,\n      clear: () => setErrorMessage(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"form-email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"form-email\",\n        type: \"email\",\n        value: formEmail,\n        onChange: e => setFormEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"form-password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"form-password\",\n        type: \"password\",\n        value: formPassword,\n        onChange: e => setFormPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-submit\",\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account yet? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"8a2pYfT/UkE30QDiIN5mA4CrkJU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/abu/Documents/dev/JS/experiments/exp1/client/src/components/auth/Login.js"],"names":["Axios","React","useContext","useState","Link","useHistory","UserContext","domain","ErrorMessage","Login","formEmail","setFormEmail","formPassword","setFormPassword","errorMessage","setErrorMessage","getUser","history","login","e","preventDefault","loginData","email","password","post","err","response","data","push","target","value"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport domain from \"../../util/domain\";\nimport ErrorMessage from \"../misc/ErrorMessage\";\nimport \"./AuthForm.scss\";\n\nfunction Login() {\n  const [formEmail, setFormEmail] = useState(\"\");\n  const [formPassword, setFormPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const { getUser } = useContext(UserContext);\n\n  const history = useHistory();\n\n  async function login(e) {\n    e.preventDefault();\n\n    const loginData = {\n      email: formEmail,\n      password: formPassword,\n    };\n\n    try {\n      await Axios.post(`${domain}/auth/login`, loginData);\n    } catch (err) {\n      if (err.response) {\n        if (err.response.data.errorMessage) {\n          setErrorMessage(err.response.data.errorMessage);\n        }\n      }\n      return;\n    }\n\n    await getUser();\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"auth-form\">\n      <h2>Log in</h2>\n      {errorMessage && (\n        <ErrorMessage\n          message={errorMessage}\n          clear={() => setErrorMessage(null)}\n        />\n      )}\n      <form className=\"form\" onSubmit={login}>\n        <label htmlFor=\"form-email\">Email</label>\n        <input\n          id=\"form-email\"\n          type=\"email\"\n          value={formEmail}\n          onChange={(e) => setFormEmail(e.target.value)}\n        />\n\n        <label htmlFor=\"form-password\">Password</label>\n        <input\n          id=\"form-password\"\n          type=\"password\"\n          value={formPassword}\n          onChange={(e) => setFormPassword(e.target.value)}\n        />\n\n        <button className=\"btn-submit\" type=\"submit\">\n          Log in\n        </button>\n      </form>\n      <p>\n        Don't have an account yet? <Link to=\"/register\">Register here.</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}