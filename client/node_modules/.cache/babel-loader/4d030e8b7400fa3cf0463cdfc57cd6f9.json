{"ast":null,"code":"import _regeneratorRuntime from\"/home/abu/Documents/dev/experiments/exp1/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/abu/Documents/dev/experiments/exp1/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/abu/Documents/dev/experiments/exp1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Axios from\"axios\";import React,{useContext,useState}from\"react\";import{Link,useHistory}from\"react-router-dom\";import UserContext from\"../../context/UserContext\";import domain from\"../../util/domain\";import ErrorMessage from\"../misc/ErrorMessage\";import\"./AuthForm.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Register(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),formEmail=_useState2[0],setFormEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),formPassword=_useState4[0],setFormPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),formPasswordVerify=_useState6[0],setFormPasswordVerify=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),errorMessage=_useState8[0],setErrorMessage=_useState8[1];var _useContext=useContext(UserContext),getUser=_useContext.getUser;var history=useHistory();function register(_x){return _register.apply(this,arguments);}function _register(){_register=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var registerData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();registerData={email:formEmail,password:formPassword,passwordVerify:formPasswordVerify};_context.prev=2;_context.next=5;return Axios.post(\"\".concat(domain,\"/auth/\"),registerData);case 5:_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](2);if(_context.t0.response){if(_context.t0.response.data.errorMessage){setErrorMessage(_context.t0.response.data.errorMessage);}}return _context.abrupt(\"return\");case 11:_context.next=13;return getUser();case 13:history.push(\"/\");case 14:case\"end\":return _context.stop();}}},_callee,null,[[2,7]]);}));return _register.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register a new account\"}),errorMessage&&/*#__PURE__*/_jsx(ErrorMessage,{message:errorMessage,clear:function clear(){return setErrorMessage(null);}}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:register,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"form-email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{id:\"form-email\",type:\"email\",value:formEmail,onChange:function onChange(e){return setFormEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"form-password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"form-password\",type:\"password\",value:formPassword,onChange:function onChange(e){return setFormPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"form-passwordVerify\",children:\"Verify password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"form-passwordVerify\",type:\"password\",value:formPasswordVerify,onChange:function onChange(e){return setFormPasswordVerify(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-submit\",type:\"submit\",children:\"Register\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login instead\"})]})]});}export default Register;","map":{"version":3,"sources":["/home/abu/Documents/dev/experiments/exp1/client/src/components/auth/Register.js"],"names":["Axios","React","useContext","useState","Link","useHistory","UserContext","domain","ErrorMessage","Register","formEmail","setFormEmail","formPassword","setFormPassword","formPasswordVerify","setFormPasswordVerify","errorMessage","setErrorMessage","getUser","history","register","e","preventDefault","registerData","email","password","passwordVerify","post","response","data","push","target","value"],"mappings":"mYAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,IAAT,CAAeC,UAAf,KAAiC,kBAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAO,iBAAP,C,wFAEA,QAASC,CAAAA,QAAT,EAAoB,CAClB,cAAkCN,QAAQ,CAAC,EAAD,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eACA,eAAwCR,QAAQ,CAAC,EAAD,CAAhD,yCAAOS,YAAP,eAAqBC,eAArB,eACA,eAAoDV,QAAQ,CAAC,EAAD,CAA5D,yCAAOW,kBAAP,eAA2BC,qBAA3B,eACA,eAAwCZ,QAAQ,CAAC,IAAD,CAAhD,yCAAOa,YAAP,eAAqBC,eAArB,eAEA,gBAAoBf,UAAU,CAACI,WAAD,CAA9B,CAAQY,OAAR,aAAQA,OAAR,CAEA,GAAMC,CAAAA,OAAO,CAAGd,UAAU,EAA1B,CARkB,QAUHe,CAAAA,QAVG,oIAUlB,iBAAwBC,CAAxB,mIACEA,CAAC,CAACC,cAAF,GAEMC,YAHR,CAGuB,CACnBC,KAAK,CAAEd,SADY,CAEnBe,QAAQ,CAAEb,YAFS,CAGnBc,cAAc,CAAEZ,kBAHG,CAHvB,uCAUUd,CAAAA,KAAK,CAAC2B,IAAN,WAAcpB,MAAd,WAA8BgB,YAA9B,CAVV,uFAYI,GAAI,YAAIK,QAAR,CAAkB,CAChB,GAAI,YAAIA,QAAJ,CAAaC,IAAb,CAAkBb,YAAtB,CAAoC,CAClCC,eAAe,CAAC,YAAIW,QAAJ,CAAaC,IAAb,CAAkBb,YAAnB,CAAf,CACD,CACF,CAhBL,gEAoBQE,CAAAA,OAAO,EApBf,SAqBEC,OAAO,CAACW,IAAR,CAAa,GAAb,EArBF,oEAVkB,2CAkClB,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,8CADF,CAEGd,YAAY,eACX,KAAC,YAAD,EACE,OAAO,CAAEA,YADX,CAEE,KAAK,CAAE,uBAAMC,CAAAA,eAAe,CAAC,IAAD,CAArB,EAFT,EAHJ,cAQE,cAAM,SAAS,CAAC,MAAhB,CAAuB,QAAQ,CAAEG,QAAjC,wBACE,cAAO,OAAO,CAAC,YAAf,mBADF,cAEE,cACE,EAAE,CAAC,YADL,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAEV,SAHT,CAIE,QAAQ,CAAE,kBAACW,CAAD,QAAOV,CAAAA,YAAY,CAACU,CAAC,CAACU,MAAF,CAASC,KAAV,CAAnB,EAJZ,EAFF,cASE,cAAO,OAAO,CAAC,eAAf,sBATF,cAUE,cACE,EAAE,CAAC,eADL,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEpB,YAHT,CAIE,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,eAAe,CAACQ,CAAC,CAACU,MAAF,CAASC,KAAV,CAAtB,EAJZ,EAVF,cAiBE,cAAO,OAAO,CAAC,qBAAf,6BAjBF,cAkBE,cACE,EAAE,CAAC,qBADL,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAElB,kBAHT,CAIE,QAAQ,CAAE,kBAACO,CAAD,QAAON,CAAAA,qBAAqB,CAACM,CAAC,CAACU,MAAF,CAASC,KAAV,CAA5B,EAJZ,EAlBF,cAyBE,eAAQ,SAAS,CAAC,YAAlB,CAA+B,IAAI,CAAC,QAApC,sBAzBF,GARF,cAqCE,8DAC2B,KAAC,IAAD,EAAM,EAAE,CAAC,QAAT,2BAD3B,GArCF,GADF,CA2CD,CAED,cAAevB,CAAAA,QAAf","sourcesContent":["import Axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport domain from \"../../util/domain\";\nimport ErrorMessage from \"../misc/ErrorMessage\";\nimport \"./AuthForm.scss\";\n\nfunction Register() {\n  const [formEmail, setFormEmail] = useState(\"\");\n  const [formPassword, setFormPassword] = useState(\"\");\n  const [formPasswordVerify, setFormPasswordVerify] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const { getUser } = useContext(UserContext);\n\n  const history = useHistory();\n\n  async function register(e) {\n    e.preventDefault();\n\n    const registerData = {\n      email: formEmail,\n      password: formPassword,\n      passwordVerify: formPasswordVerify,\n    };\n\n    try {\n      await Axios.post(`${domain}/auth/`, registerData);\n    } catch (err) {\n      if (err.response) {\n        if (err.response.data.errorMessage) {\n          setErrorMessage(err.response.data.errorMessage);\n        }\n      }\n      return;\n    }\n\n    await getUser();\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"auth-form\">\n      <h2>Register a new account</h2>\n      {errorMessage && (\n        <ErrorMessage\n          message={errorMessage}\n          clear={() => setErrorMessage(null)}\n        />\n      )}\n      <form className=\"form\" onSubmit={register}>\n        <label htmlFor=\"form-email\">Email</label>\n        <input\n          id=\"form-email\"\n          type=\"email\"\n          value={formEmail}\n          onChange={(e) => setFormEmail(e.target.value)}\n        />\n\n        <label htmlFor=\"form-password\">Password</label>\n        <input\n          id=\"form-password\"\n          type=\"password\"\n          value={formPassword}\n          onChange={(e) => setFormPassword(e.target.value)}\n        />\n\n        <label htmlFor=\"form-passwordVerify\">Verify password</label>\n        <input\n          id=\"form-passwordVerify\"\n          type=\"password\"\n          value={formPasswordVerify}\n          onChange={(e) => setFormPasswordVerify(e.target.value)}\n        />\n\n        <button className=\"btn-submit\" type=\"submit\">\n          Register\n        </button>\n      </form>\n      <p>\n        Already have an account? <Link to=\"/login\">Login instead</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}