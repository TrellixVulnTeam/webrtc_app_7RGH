{"ast":null,"code":"import adapter from 'webrtc-adapter';\nimport $ from \"jquery\";\nconst RTCRtpTransceiver = window.RTCRtpTransceiver; // List of sessions\n\nJanus.sessions = {};\n\nJanus.isExtensionEnabled = function () {\n  if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n    // No need for the extension, getDisplayMedia is supported\n    return true;\n  }\n\n  if (window.navigator.userAgent.match('Chrome')) {\n    var chromever = parseInt(window.navigator.userAgent.match(/Chrome\\/(.*) /)[1], 10);\n    var maxver = 33;\n    if (window.navigator.userAgent.match('Linux')) maxver = 35; // \"known\" crash in chrome 34 and 35 on linux\n\n    if (chromever >= 26 && chromever <= maxver) {\n      // Older versions of Chrome don't support this extension-based approach, so lie\n      return true;\n    }\n\n    return Janus.extension.isInstalled();\n  } else {\n    // Firefox and others, no need for the extension (but this doesn't mean it will work)\n    return true;\n  }\n};\n\nvar defaultExtension = {\n  // Screensharing Chrome Extension ID\n  extensionId: 'hapfgfdkleiggjjpfpenajgdnfckjpaj',\n  isInstalled: function () {\n    return document.querySelector('#janus-extension-installed') !== null;\n  },\n  getScreen: function (callback) {\n    var pending = window.setTimeout(function () {\n      var error = new Error('NavigatorUserMediaError');\n      error.name = 'The required Chrome extension is not installed: click <a href=\"#\">here</a> to install it. (NOTE: this will need you to refresh the page)';\n      return callback(error);\n    }, 1000);\n    this.cache[pending] = callback;\n    window.postMessage({\n      type: 'janusGetScreen',\n      id: pending\n    }, '*');\n  },\n  init: function () {\n    var cache = {};\n    this.cache = cache; // Wait for events from the Chrome Extension\n\n    window.addEventListener('message', function (event) {\n      if (event.origin != window.location.origin) return;\n\n      if (event.data.type == 'janusGotScreen' && cache[event.data.id]) {\n        var callback = cache[event.data.id];\n        delete cache[event.data.id];\n\n        if (event.data.sourceId === '') {\n          // user canceled\n          var error = new Error('NavigatorUserMediaError');\n          error.name = 'You cancelled the request for permission, giving up...';\n          callback(error);\n        } else {\n          callback(null, event.data.sourceId);\n        }\n      } else if (event.data.type == 'janusGetScreenPending') {\n        console.log('clearing ', event.data.id);\n        window.clearTimeout(event.data.id);\n      }\n    });\n  }\n};\n\nJanus.usageDefaultDependencies = function (deps) {\n  var f = deps && deps.fetch || fetch;\n  var p = deps && deps.Promise || Promise;\n  var socketCls = deps && deps.WebSocket || WebSocket;\n  return {\n    newWebSocket: function (server, proto) {\n      return new socketCls(server, proto);\n    },\n    extension: deps && deps.extension || defaultExtension,\n    isArray: function (arr) {\n      return Array.isArray(arr);\n    },\n    webRTCAdapter: deps && deps.adapter || adapter,\n    httpAPICall: function (url, options) {\n      var fetchOptions = {\n        method: options.verb,\n        headers: {\n          'Accept': 'application/json, text/plain, */*'\n        },\n        cache: 'no-cache'\n      };\n\n      if (options.verb === \"POST\") {\n        fetchOptions.headers['Content-Type'] = 'application/json';\n      }\n\n      if (options.withCredentials !== undefined) {\n        fetchOptions.credentials = options.withCredentials === true ? 'include' : options.withCredentials ? options.withCredentials : 'omit';\n      }\n\n      if (options.body) {\n        fetchOptions.body = JSON.stringify(options.body);\n      }\n\n      var fetching = f(url, fetchOptions).catch(function (error) {\n        return p.reject({\n          message: 'Probably a network error, is the server down?',\n          error: error\n        });\n      });\n      /*\n       * fetch() does not natively support timeouts.\n       * Work around this by starting a timeout manually, and racing it agains the fetch() to see which thing resolves first.\n       */\n\n      if (options.timeout) {\n        var timeout = new p(function (resolve, reject) {\n          var timerId = setTimeout(function () {\n            clearTimeout(timerId);\n            return reject({\n              message: 'Request timed out',\n              timeout: options.timeout\n            });\n          }, options.timeout);\n        });\n        fetching = p.race([fetching, timeout]);\n      }\n\n      fetching.then(function (response) {\n        if (response.ok) {\n          if (typeof options.success === typeof Janus.noop) {\n            return response.json().then(function (parsed) {\n              try {\n                options.success(parsed);\n              } catch (error) {\n                Janus.error('Unhandled httpAPICall success callback error', error);\n              }\n            }, function (error) {\n              return p.reject({\n                message: 'Failed to parse response body',\n                error: error,\n                response: response\n              });\n            });\n          }\n        } else {\n          return p.reject({\n            message: 'API call failed',\n            response: response\n          });\n        }\n      }).catch(function (error) {\n        if (typeof options.error === typeof Janus.noop) {\n          options.error(error.message || '<< internal error >>', error);\n        }\n      });\n      return fetching;\n    }\n  };\n};\n\nJanus.useOldDependencies = function (deps) {\n  var jq = deps && deps.$ || $;\n  var socketCls = deps && deps.WebSocket || WebSocket;\n  return {\n    newWebSocket: function (server, proto) {\n      return new socketCls(server, proto);\n    },\n    isArray: function (arr) {\n      return jq.isArray(arr);\n    },\n    extension: deps && deps.extension || defaultExtension,\n    webRTCAdapter: deps && deps.adapter || adapter,\n    httpAPICall: function (url, options) {\n      var payload = options.body !== undefined ? {\n        contentType: 'application/json',\n        data: JSON.stringify(options.body)\n      } : {};\n      var credentials = options.withCredentials !== undefined ? {\n        xhrFields: {\n          withCredentials: options.withCredentials\n        }\n      } : {};\n      return jq.ajax(jq.extend(payload, credentials, {\n        url: url,\n        type: options.verb,\n        cache: false,\n        dataType: 'json',\n        async: options.async,\n        timeout: options.timeout,\n        success: function (result) {\n          if (typeof options.success === typeof Janus.noop) {\n            options.success(result);\n          }\n        },\n        error: function (xhr, status, err) {\n          if (typeof options.error === typeof Janus.noop) {\n            options.error(status, err);\n          }\n        }\n      }));\n    }\n  };\n};\n\nJanus.noop = function () {};\n\nJanus.dataChanDefaultLabel = \"JanusDataChannel\"; // Note: in the future we may want to change this, e.g., as was\n// attempted in https://github.com/meetecho/janus-gateway/issues/1670\n\nJanus.endOfCandidates = null; // Stop all tracks from a given stream\n\nJanus.stopAllTracks = function (stream) {\n  try {\n    // Try a MediaStreamTrack.stop() for each track\n    var tracks = stream.getTracks();\n\n    for (var mst of tracks) {\n      Janus.log(mst);\n\n      if (mst) {\n        mst.stop();\n      }\n    }\n  } catch (e) {// Do nothing if this fails\n  }\n}; // Initialization\n\n\nJanus.init = function (options) {\n  options = options || {};\n  options.callback = typeof options.callback == \"function\" ? options.callback : Janus.noop;\n\n  if (Janus.initDone) {\n    // Already initialized\n    options.callback();\n  } else {\n    if (typeof console == \"undefined\" || typeof console.log == \"undefined\") {\n      console = {\n        log: function () {}\n      };\n    } // Console logging (all debugging disabled by default)\n\n\n    Janus.trace = Janus.noop;\n    Janus.debug = Janus.noop;\n    Janus.vdebug = Janus.noop;\n    Janus.log = Janus.noop;\n    Janus.warn = Janus.noop;\n    Janus.error = Janus.noop;\n\n    if (options.debug === true || options.debug === \"all\") {\n      // Enable all debugging levels\n      Janus.trace = console.trace.bind(console);\n      Janus.debug = console.debug.bind(console);\n      Janus.vdebug = console.debug.bind(console);\n      Janus.log = console.log.bind(console);\n      Janus.warn = console.warn.bind(console);\n      Janus.error = console.error.bind(console);\n    } else if (Array.isArray(options.debug)) {\n      for (var d of options.debug) {\n        switch (d) {\n          case \"trace\":\n            Janus.trace = console.trace.bind(console);\n            break;\n\n          case \"debug\":\n            Janus.debug = console.debug.bind(console);\n            break;\n\n          case \"vdebug\":\n            Janus.vdebug = console.debug.bind(console);\n            break;\n\n          case \"log\":\n            Janus.log = console.log.bind(console);\n            break;\n\n          case \"warn\":\n            Janus.warn = console.warn.bind(console);\n            break;\n\n          case \"error\":\n            Janus.error = console.error.bind(console);\n            break;\n\n          default:\n            console.error(\"Unknown debugging option '\" + d + \"' (supported: 'trace', 'debug', 'vdebug', 'log', warn', 'error')\");\n            break;\n        }\n      }\n    }\n\n    Janus.log(\"Initializing library\");\n    var usedDependencies = options.dependencies || Janus.usageDefaultDependencies();\n    Janus.isArray = usedDependencies.isArray;\n    Janus.webRTCAdapter = usedDependencies.webRTCAdapter;\n    Janus.httpAPICall = usedDependencies.httpAPICall;\n    Janus.newWebSocket = usedDependencies.newWebSocket;\n    Janus.extension = usedDependencies.extension;\n    Janus.extension.init(); // Helper method to enumerate devices\n\n    Janus.listDevices = function (callback, config) {\n      callback = typeof callback == \"function\" ? callback : Janus.noop;\n      if (config == null) config = {\n        audio: true,\n        video: true\n      };\n\n      if (Janus.isGetUserMediaAvailable()) {\n        navigator.mediaDevices.getUserMedia(config).then(function (stream) {\n          navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            Janus.debug(devices);\n            callback(devices); // Get rid of the now useless stream\n\n            Janus.stopAllTracks(stream);\n          });\n        }).catch(function (err) {\n          Janus.error(err);\n          callback([]);\n        });\n      } else {\n        Janus.warn(\"navigator.mediaDevices unavailable\");\n        callback([]);\n      }\n    }; // Helper methods to attach/reattach a stream to a video element (previously part of adapter.js)\n\n\n    Janus.attachMediaStream = function (element, stream) {\n      try {\n        element.srcObject = stream;\n      } catch (e) {\n        try {\n          element.src = URL.createObjectURL(stream);\n        } catch (e) {\n          Janus.error(\"Error attaching stream to element\");\n        }\n      }\n    };\n\n    Janus.reattachMediaStream = function (to, from) {\n      try {\n        to.srcObject = from.srcObject;\n      } catch (e) {\n        try {\n          to.src = from.src;\n        } catch (e) {\n          Janus.error(\"Error reattaching stream to element\");\n        }\n      }\n    }; // Detect tab close: make sure we don't loose existing onbeforeunload handlers\n    // (note: for iOS we need to subscribe to a different event, 'pagehide', see\n    // https://gist.github.com/thehunmonkgroup/6bee8941a49b86be31a787fe8f4b8cfe)\n\n\n    var iOS = ['iPad', 'iPhone', 'iPod'].indexOf(navigator.platform) >= 0;\n    var eventName = iOS ? 'pagehide' : 'beforeunload';\n    var oldOBF = window[\"on\" + eventName];\n    window.addEventListener(eventName, function (event) {\n      Janus.log(\"Closing window\");\n\n      for (var s in Janus.sessions) {\n        if (Janus.sessions[s] && Janus.sessions[s].destroyOnUnload) {\n          Janus.log(\"Destroying session \" + s);\n          Janus.sessions[s].destroy({\n            unload: true,\n            notifyDestroyed: false\n          });\n        }\n      }\n\n      if (oldOBF && typeof oldOBF == \"function\") {\n        oldOBF();\n      }\n    }); // If this is a Safari Technology Preview, check if VP8 is supported\n\n    Janus.safariVp8 = false;\n\n    if (Janus.webRTCAdapter.browserDetails.browser === 'safari' && Janus.webRTCAdapter.browserDetails.version >= 605) {\n      // Let's see if RTCRtpSender.getCapabilities() is there\n      if (RTCRtpSender && RTCRtpSender.getCapabilities && RTCRtpSender.getCapabilities(\"video\") && RTCRtpSender.getCapabilities(\"video\").codecs && RTCRtpSender.getCapabilities(\"video\").codecs.length) {\n        for (var codec of RTCRtpSender.getCapabilities(\"video\").codecs) {\n          if (codec && codec.mimeType && codec.mimeType.toLowerCase() === \"video/vp8\") {\n            Janus.safariVp8 = true;\n            break;\n          }\n        }\n\n        if (Janus.safariVp8) {\n          Janus.log(\"This version of Safari supports VP8\");\n        } else {\n          Janus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" + \"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n        }\n      } else {\n        // We do it in a very ugly way, as there's no alternative...\n        // We create a PeerConnection to see if VP8 is in an offer\n        var testpc = new RTCPeerConnection({});\n        testpc.createOffer({\n          offerToReceiveVideo: true\n        }).then(function (offer) {\n          Janus.safariVp8 = offer.sdp.indexOf(\"VP8\") !== -1;\n\n          if (Janus.safariVp8) {\n            Janus.log(\"This version of Safari supports VP8\");\n          } else {\n            Janus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" + \"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n          }\n\n          testpc.close();\n          testpc = null;\n        });\n      }\n    } // Check if this browser supports Unified Plan and transceivers\n    // Based on https://codepen.io/anon/pen/ZqLwWV?editors=0010\n\n\n    Janus.unifiedPlan = false;\n\n    if (Janus.webRTCAdapter.browserDetails.browser === 'firefox' && Janus.webRTCAdapter.browserDetails.version >= 59) {\n      // Firefox definitely does, starting from version 59\n      Janus.unifiedPlan = true;\n    } else if (Janus.webRTCAdapter.browserDetails.browser === 'chrome' && Janus.webRTCAdapter.browserDetails.version >= 72) {\n      // Chrome does, but it's only usable from version 72 on\n      Janus.unifiedPlan = true;\n    } else {\n      // Check if addTransceiver() throws an exception\n      var tempPc = new RTCPeerConnection();\n\n      try {\n        tempPc.addTransceiver('audio');\n        Janus.unifiedPlan = true;\n      } catch (e) {}\n\n      tempPc.close();\n    }\n\n    Janus.initDone = true;\n    options.callback();\n  }\n}; // Helper method to check whether WebRTC is supported by this browser\n\n\nJanus.isWebrtcSupported = function () {\n  return !!window.RTCPeerConnection;\n}; // Helper method to check whether devices can be accessed by this browser (e.g., not possible via plain HTTP)\n\n\nJanus.isGetUserMediaAvailable = function () {\n  return navigator.mediaDevices && navigator.mediaDevices.getUserMedia;\n}; // Helper method to create random identifiers (e.g., transaction)\n\n\nJanus.randomString = function (len) {\n  var charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var randomString = '';\n\n  for (var i = 0; i < len; i++) {\n    var randomPoz = Math.floor(Math.random() * charSet.length);\n    randomString += charSet.substring(randomPoz, randomPoz + 1);\n  }\n\n  return randomString;\n};\n\nfunction Janus(gatewayCallbacks) {\n  gatewayCallbacks = gatewayCallbacks || {};\n  gatewayCallbacks.success = typeof gatewayCallbacks.success == \"function\" ? gatewayCallbacks.success : Janus.noop;\n  gatewayCallbacks.error = typeof gatewayCallbacks.error == \"function\" ? gatewayCallbacks.error : Janus.noop;\n  gatewayCallbacks.destroyed = typeof gatewayCallbacks.destroyed == \"function\" ? gatewayCallbacks.destroyed : Janus.noop;\n\n  if (!Janus.initDone) {\n    gatewayCallbacks.error(\"Library not initialized\");\n    return {};\n  }\n\n  if (!Janus.isWebrtcSupported()) {\n    gatewayCallbacks.error(\"WebRTC not supported by this browser\");\n    return {};\n  }\n\n  Janus.log(\"Library initialized: \" + Janus.initDone);\n\n  if (!gatewayCallbacks.server) {\n    gatewayCallbacks.error(\"Invalid server url\");\n    return {};\n  }\n\n  var websockets = false;\n  var ws = null;\n  var wsHandlers = {};\n  var wsKeepaliveTimeoutId = null;\n  var servers = null;\n  var serversIndex = 0;\n  var server = \"/janusbase/janus\";\n\n  if (Janus.isArray(server)) {\n    Janus.log(\"Multiple servers provided (\" + server.length + \"), will use the first that works\");\n    server = null;\n    servers = gatewayCallbacks.server;\n    Janus.debug(servers);\n  } else {\n    if (server.indexOf(\"ws\") === 0) {\n      websockets = true;\n      Janus.log(\"Using WebSockets to contact Janus: \" + server);\n    } else {\n      websockets = false;\n      Janus.log(\"Using REST API to contact Janus: \" + server);\n    }\n  }\n\n  var iceServers = gatewayCallbacks.iceServers || [{\n    urls: \"stun:stun.l.google.com:19302\"\n  }];\n  var iceTransportPolicy = gatewayCallbacks.iceTransportPolicy;\n  var bundlePolicy = gatewayCallbacks.bundlePolicy; // Whether IPv6 candidates should be gathered\n\n  var ipv6Support = gatewayCallbacks.ipv6 === true; // Whether we should enable the withCredentials flag for XHR requests\n\n  var withCredentials = false;\n  if (gatewayCallbacks.withCredentials !== undefined && gatewayCallbacks.withCredentials !== null) withCredentials = gatewayCallbacks.withCredentials === true; // Optional max events\n\n  var maxev = 10;\n  if (gatewayCallbacks.max_poll_events !== undefined && gatewayCallbacks.max_poll_events !== null) maxev = gatewayCallbacks.max_poll_events;\n  if (maxev < 1) maxev = 1; // Token to use (only if the token based authentication mechanism is enabled)\n\n  var token = null;\n  if (gatewayCallbacks.token !== undefined && gatewayCallbacks.token !== null) token = gatewayCallbacks.token; // API secret to use (only if the shared API secret is enabled)\n\n  var apisecret = null;\n  if (gatewayCallbacks.apisecret !== undefined && gatewayCallbacks.apisecret !== null) apisecret = gatewayCallbacks.apisecret; // Whether we should destroy this session when onbeforeunload is called\n\n  this.destroyOnUnload = true;\n  if (gatewayCallbacks.destroyOnUnload !== undefined && gatewayCallbacks.destroyOnUnload !== null) this.destroyOnUnload = gatewayCallbacks.destroyOnUnload === true; // Some timeout-related values\n\n  var keepAlivePeriod = 25000;\n  if (gatewayCallbacks.keepAlivePeriod !== undefined && gatewayCallbacks.keepAlivePeriod !== null) keepAlivePeriod = gatewayCallbacks.keepAlivePeriod;\n  if (isNaN(keepAlivePeriod)) keepAlivePeriod = 25000;\n  var longPollTimeout = 60000;\n  if (gatewayCallbacks.longPollTimeout !== undefined && gatewayCallbacks.longPollTimeout !== null) longPollTimeout = gatewayCallbacks.longPollTimeout;\n  if (isNaN(longPollTimeout)) longPollTimeout = 60000; // overrides for default maxBitrate values for simulcasting\n\n  function getMaxBitrates(simulcastMaxBitrates) {\n    var maxBitrates = {\n      high: 900000,\n      medium: 300000,\n      low: 100000\n    };\n\n    if (simulcastMaxBitrates !== undefined && simulcastMaxBitrates !== null) {\n      if (simulcastMaxBitrates.high) maxBitrates.high = simulcastMaxBitrates.high;\n      if (simulcastMaxBitrates.medium) maxBitrates.medium = simulcastMaxBitrates.medium;\n      if (simulcastMaxBitrates.low) maxBitrates.low = simulcastMaxBitrates.low;\n    }\n\n    return maxBitrates;\n  }\n\n  var connected = false;\n  var sessionId = null;\n  var pluginHandles = {};\n  var that = this;\n  var retries = 0;\n  var transactions = {};\n  createSession(gatewayCallbacks); // Public methods\n\n  this.getServer = function () {\n    return server;\n  };\n\n  this.isConnected = function () {\n    return connected;\n  };\n\n  this.reconnect = function (callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    callbacks[\"reconnect\"] = true;\n    createSession(callbacks);\n  };\n\n  this.getSessionId = function () {\n    return sessionId;\n  };\n\n  this.getInfo = function (callbacks) {\n    getInfo(callbacks);\n  };\n\n  this.destroy = function (callbacks) {\n    destroySession(callbacks);\n  };\n\n  this.attach = function (callbacks) {\n    createHandle(callbacks);\n  };\n\n  function eventHandler() {\n    if (sessionId == null) return;\n    Janus.debug('Long poll...');\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var longpoll = server + \"/\" + sessionId + \"?rid=\" + new Date().getTime();\n    if (maxev) longpoll = longpoll + \"&maxev=\" + maxev;\n    if (token) longpoll = longpoll + \"&token=\" + encodeURIComponent(token);\n    if (apisecret) longpoll = longpoll + \"&apisecret=\" + encodeURIComponent(apisecret);\n    Janus.httpAPICall(longpoll, {\n      verb: 'GET',\n      withCredentials: withCredentials,\n      success: handleEvent,\n      timeout: longPollTimeout,\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown);\n        retries++;\n\n        if (retries > 3) {\n          // Did we just lose the server? :-(\n          connected = false;\n          gatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n          return;\n        }\n\n        eventHandler();\n      }\n    });\n  } // Private event handler: this will trigger plugin callbacks, if set\n\n\n  function handleEvent(json, skipTimeout) {\n    retries = 0;\n    if (!websockets && sessionId !== undefined && sessionId !== null && skipTimeout !== true) eventHandler();\n\n    if (!websockets && Janus.isArray(json)) {\n      // We got an array: it means we passed a maxev > 1, iterate on all objects\n      for (var i = 0; i < json.length; i++) {\n        handleEvent(json[i], true);\n      }\n\n      return;\n    }\n\n    if (json[\"janus\"] === \"keepalive\") {\n      // Nothing happened\n      Janus.vdebug(\"Got a keepalive on session \" + sessionId);\n      return;\n    } else if (json[\"janus\"] === \"server_info\") {\n      // Just info on the Janus instance\n      Janus.debug(\"Got info on the Janus instance\");\n      Janus.debug(json);\n      var transaction = json[\"transaction\"];\n\n      if (transaction) {\n        var reportSuccess = transactions[transaction];\n        if (reportSuccess) reportSuccess(json);\n        delete transactions[transaction];\n      }\n\n      return;\n    } else if (json[\"janus\"] === \"ack\") {\n      // Just an ack, we can probably ignore\n      Janus.debug(\"Got an ack on session \" + sessionId);\n      Janus.debug(json);\n      var transaction = json[\"transaction\"];\n\n      if (transaction) {\n        var reportSuccess = transactions[transaction];\n        if (reportSuccess) reportSuccess(json);\n        delete transactions[transaction];\n      }\n\n      return;\n    } else if (json[\"janus\"] === \"success\") {\n      // Success!\n      Janus.debug(\"Got a success on session \" + sessionId);\n      Janus.debug(json);\n      var transaction = json[\"transaction\"];\n\n      if (transaction) {\n        var reportSuccess = transactions[transaction];\n        if (reportSuccess) reportSuccess(json);\n        delete transactions[transaction];\n      }\n\n      return;\n    } else if (json[\"janus\"] === \"trickle\") {\n      // We got a trickle candidate from Janus\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      var candidate = json[\"candidate\"];\n      Janus.debug(\"Got a trickled candidate on session \" + sessionId);\n      Janus.debug(candidate);\n      var config = pluginHandle.webrtcStuff;\n\n      if (config.pc && config.remoteSdp) {\n        // Add candidate right now\n        Janus.debug(\"Adding remote candidate:\", candidate);\n\n        if (!candidate || candidate.completed === true) {\n          // end-of-candidates\n          config.pc.addIceCandidate(Janus.endOfCandidates);\n        } else {\n          // New candidate\n          config.pc.addIceCandidate(candidate);\n        }\n      } else {\n        // We didn't do setRemoteDescription (trickle got here before the offer?)\n        Janus.debug(\"We didn't do setRemoteDescription (trickle got here before the offer?), caching candidate\");\n        if (!config.candidates) config.candidates = [];\n        config.candidates.push(candidate);\n        Janus.debug(config.candidates);\n      }\n    } else if (json[\"janus\"] === \"webrtcup\") {\n      // The PeerConnection with the server is up! Notify this\n      Janus.debug(\"Got a webrtcup event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      pluginHandle.webrtcState(true);\n      return;\n    } else if (json[\"janus\"] === \"hangup\") {\n      // A plugin asked the core to hangup a PeerConnection on one of our handles\n      Janus.debug(\"Got a hangup event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      pluginHandle.webrtcState(false, json[\"reason\"]);\n      pluginHandle.hangup();\n    } else if (json[\"janus\"] === \"detached\") {\n      // A plugin asked the core to detach one of our handles\n      Janus.debug(\"Got a detached event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        // Don't warn here because destroyHandle causes this situation.\n        return;\n      }\n\n      pluginHandle.ondetached();\n      pluginHandle.detach();\n    } else if (json[\"janus\"] === \"media\") {\n      // Media started/stopped flowing\n      Janus.debug(\"Got a media event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      pluginHandle.mediaState(json[\"type\"], json[\"receiving\"]);\n    } else if (json[\"janus\"] === \"slowlink\") {\n      Janus.debug(\"Got a slowlink event on session \" + sessionId);\n      Janus.debug(json); // Trouble uplink or downlink\n\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      pluginHandle.slowLink(json[\"uplink\"], json[\"lost\"]);\n    } else if (json[\"janus\"] === \"error\") {\n      // Oops, something wrong happened\n      Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n      Janus.debug(json);\n      var transaction = json[\"transaction\"];\n\n      if (transaction) {\n        var reportSuccess = transactions[transaction];\n\n        if (reportSuccess) {\n          reportSuccess(json);\n        }\n\n        delete transactions[transaction];\n      }\n\n      return;\n    } else if (json[\"janus\"] === \"event\") {\n      Janus.debug(\"Got a plugin event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var plugindata = json[\"plugindata\"];\n\n      if (!plugindata) {\n        Janus.warn(\"Missing plugindata...\");\n        return;\n      }\n\n      Janus.debug(\"  -- Event is coming from \" + sender + \" (\" + plugindata[\"plugin\"] + \")\");\n      var data = plugindata[\"data\"];\n      Janus.debug(data);\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.warn(\"This handle is not attached to this session\");\n        return;\n      }\n\n      var jsep = json[\"jsep\"];\n\n      if (jsep) {\n        Janus.debug(\"Handling SDP as well...\");\n        Janus.debug(jsep);\n      }\n\n      var callback = pluginHandle.onmessage;\n\n      if (callback) {\n        Janus.debug(\"Notifying application...\"); // Send to callback specified when attaching plugin handle\n\n        callback(data, jsep);\n      } else {\n        // Send to generic callback (?)\n        Janus.debug(\"No provided notification callback\");\n      }\n    } else if (json[\"janus\"] === \"timeout\") {\n      Janus.error(\"Timeout on session \" + sessionId);\n      Janus.debug(json);\n\n      if (websockets) {\n        ws.close(3504, \"Gateway timeout\");\n      }\n\n      return;\n    } else {\n      Janus.warn(\"Unknown message/event  '\" + json[\"janus\"] + \"' on session \" + sessionId);\n      Janus.debug(json);\n    }\n  } // Private helper to send keep-alive messages on WebSockets\n\n\n  function keepAlive() {\n    if (!server || !websockets || !connected) return;\n    wsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n    var request = {\n      \"janus\": \"keepalive\",\n      \"session_id\": sessionId,\n      \"transaction\": Janus.randomString(12)\n    };\n    if (token) request[\"token\"] = token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n    ws.send(JSON.stringify(request));\n  } // Private method to create a session\n\n\n  function createSession(callbacks) {\n    var transaction = Janus.randomString(12);\n    var request = {\n      \"janus\": \"create\",\n      \"transaction\": transaction\n    };\n\n    if (callbacks[\"reconnect\"]) {\n      // We're reconnecting, claim the session\n      connected = false;\n      request[\"janus\"] = \"claim\";\n      request[\"session_id\"] = sessionId; // If we were using websockets, ignore the old connection\n\n      if (ws) {\n        ws.onopen = null;\n        ws.onerror = null;\n        ws.onclose = null;\n\n        if (wsKeepaliveTimeoutId) {\n          clearTimeout(wsKeepaliveTimeoutId);\n          wsKeepaliveTimeoutId = null;\n        }\n      }\n    }\n\n    if (token) request[\"token\"] = token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (!server && Janus.isArray(servers)) {\n      // We still need to find a working server from the list we were given\n      server = servers[serversIndex];\n\n      if (server.indexOf(\"ws\") === 0) {\n        websockets = true;\n        Janus.log(\"Server #\" + (serversIndex + 1) + \": trying WebSockets to contact Janus (\" + server + \")\");\n      } else {\n        websockets = false;\n        Janus.log(\"Server #\" + (serversIndex + 1) + \": trying REST API to contact Janus (\" + server + \")\");\n      }\n    }\n\n    if (websockets) {\n      ws = Janus.newWebSocket(server, 'janus-protocol');\n      wsHandlers = {\n        'error': function () {\n          Janus.error(\"Error connecting to the Janus WebSockets server... \" + server);\n\n          if (Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n            serversIndex++;\n\n            if (serversIndex === servers.length) {\n              // We tried all the servers the user gave us and they all failed\n              callbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n              return;\n            } // Let's try the next server\n\n\n            server = null;\n            setTimeout(function () {\n              createSession(callbacks);\n            }, 200);\n            return;\n          }\n\n          callbacks.error(\"Error connecting to the Janus WebSockets server: Is the server down?\");\n        },\n        'open': function () {\n          // We need to be notified about the success\n          transactions[transaction] = function (json) {\n            Janus.debug(json);\n\n            if (json[\"janus\"] !== \"success\") {\n              Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n              callbacks.error(json[\"error\"].reason);\n              return;\n            }\n\n            wsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n            connected = true;\n            sessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\n            if (callbacks[\"reconnect\"]) {\n              Janus.log(\"Claimed session: \" + sessionId);\n            } else {\n              Janus.log(\"Created session: \" + sessionId);\n            }\n\n            Janus.sessions[sessionId] = that;\n            callbacks.success();\n          };\n\n          ws.send(JSON.stringify(request));\n        },\n        'message': function (event) {\n          handleEvent(JSON.parse(event.data));\n        },\n        'close': function () {\n          if (!server || !connected) {\n            return;\n          }\n\n          connected = false; // FIXME What if this is called when the page is closed?\n\n          gatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n        }\n      };\n\n      for (var eventName in wsHandlers) {\n        ws.addEventListener(eventName, wsHandlers[eventName]);\n      }\n\n      return;\n    }\n\n    console.log(\"____________________ \", server);\n    Janus.httpAPICall(server, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n          callbacks.error(json[\"error\"].reason);\n          return;\n        }\n\n        connected = true;\n        sessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\n        if (callbacks[\"reconnect\"]) {\n          Janus.log(\"Claimed session: \" + sessionId);\n        } else {\n          Janus.log(\"Created session: \" + sessionId);\n        }\n\n        Janus.sessions[sessionId] = that;\n        eventHandler();\n        callbacks.success();\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n\n        if (Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n          serversIndex++;\n\n          if (serversIndex === servers.length) {\n            // We tried all the servers the user gave us and they all failed\n            callbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n            return;\n          } // Let's try the next server\n\n\n          server = null;\n          setTimeout(function () {\n            createSession(callbacks);\n          }, 200);\n          return;\n        }\n\n        if (errorThrown === \"\") callbacks.error(textStatus + \": Is the server down?\");else callbacks.error(textStatus + \": \" + errorThrown);\n      }\n    });\n  } // Private method to get info on the server\n\n\n  function getInfo(callbacks) {\n    callbacks = callbacks || {}; // FIXME This method triggers a success even when we fail\n\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    Janus.log(\"Getting info on Janus instance\");\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      callbacks.error(\"Is the server down? (connected=false)\");\n      return;\n    } // We just need to send an \"info\" request\n\n\n    var transaction = Janus.randomString(12);\n    var request = {\n      \"janus\": \"info\",\n      \"transaction\": transaction\n    };\n    if (token) request[\"token\"] = token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (websockets) {\n      transactions[transaction] = function (json) {\n        Janus.log(\"Server info:\");\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"server_info\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n        }\n\n        callbacks.success(json);\n      };\n\n      ws.send(JSON.stringify(request));\n      return;\n    }\n\n    Janus.httpAPICall(server, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.log(\"Server info:\");\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"server_info\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n        }\n\n        callbacks.success(json);\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n\n        if (errorThrown === \"\") callbacks.error(textStatus + \": Is the server down?\");else callbacks.error(textStatus + \": \" + errorThrown);\n      }\n    });\n  } // Private method to destroy a session\n\n\n  function destroySession(callbacks) {\n    callbacks = callbacks || {}; // FIXME This method triggers a success even when we fail\n\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var unload = callbacks.unload === true;\n    var notifyDestroyed = true;\n    if (callbacks.notifyDestroyed !== undefined && callbacks.notifyDestroyed !== null) notifyDestroyed = callbacks.notifyDestroyed === true;\n    var cleanupHandles = callbacks.cleanupHandles === true;\n    Janus.log(\"Destroying session \" + sessionId + \" (unload=\" + unload + \")\");\n\n    if (!sessionId) {\n      Janus.warn(\"No session to destroy\");\n      callbacks.success();\n      if (notifyDestroyed) gatewayCallbacks.destroyed();\n      return;\n    }\n\n    if (cleanupHandles) {\n      for (var handleId in pluginHandles) destroyHandle(handleId, {\n        noRequest: true\n      });\n    }\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      sessionId = null;\n      callbacks.success();\n      return;\n    } // No need to destroy all handles first, Janus will do that itself\n\n\n    var request = {\n      \"janus\": \"destroy\",\n      \"transaction\": Janus.randomString(12)\n    };\n    if (token) request[\"token\"] = token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (unload) {\n      // We're unloading the page: use sendBeacon for HTTP instead,\n      // or just close the WebSocket connection if we're using that\n      if (websockets) {\n        ws.onclose = null;\n        ws.close();\n        ws = null;\n      } else {\n        navigator.sendBeacon(server + \"/\" + sessionId, JSON.stringify(request));\n      }\n\n      Janus.log(\"Destroyed session:\");\n      sessionId = null;\n      connected = false;\n      callbacks.success();\n      if (notifyDestroyed) gatewayCallbacks.destroyed();\n      return;\n    }\n\n    if (websockets) {\n      request[\"session_id\"] = sessionId;\n\n      var unbindWebSocket = function () {\n        for (var eventName in wsHandlers) {\n          ws.removeEventListener(eventName, wsHandlers[eventName]);\n        }\n\n        ws.removeEventListener('message', onUnbindMessage);\n        ws.removeEventListener('error', onUnbindError);\n\n        if (wsKeepaliveTimeoutId) {\n          clearTimeout(wsKeepaliveTimeoutId);\n        }\n\n        ws.close();\n      };\n\n      var onUnbindMessage = function (event) {\n        var data = JSON.parse(event.data);\n\n        if (data.session_id == request.session_id && data.transaction == request.transaction) {\n          unbindWebSocket();\n          callbacks.success();\n          if (notifyDestroyed) gatewayCallbacks.destroyed();\n        }\n      };\n\n      var onUnbindError = function (event) {\n        unbindWebSocket();\n        callbacks.error(\"Failed to destroy the server: Is the server down?\");\n        if (notifyDestroyed) gatewayCallbacks.destroyed();\n      };\n\n      ws.addEventListener('message', onUnbindMessage);\n      ws.addEventListener('error', onUnbindError);\n\n      if (ws.readyState === 1) {\n        ws.send(JSON.stringify(request));\n      } else {\n        onUnbindError();\n      }\n\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.log(\"Destroyed session:\");\n        Janus.debug(json);\n        sessionId = null;\n        connected = false;\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n        }\n\n        callbacks.success();\n        if (notifyDestroyed) gatewayCallbacks.destroyed();\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n        // Reset everything anyway\n\n        sessionId = null;\n        connected = false;\n        callbacks.success();\n        if (notifyDestroyed) gatewayCallbacks.destroyed();\n      }\n    });\n  } // Private method to create a plugin handle\n\n\n  function createHandle(callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    callbacks.consentDialog = typeof callbacks.consentDialog == \"function\" ? callbacks.consentDialog : Janus.noop;\n    callbacks.iceState = typeof callbacks.iceState == \"function\" ? callbacks.iceState : Janus.noop;\n    callbacks.mediaState = typeof callbacks.mediaState == \"function\" ? callbacks.mediaState : Janus.noop;\n    callbacks.webrtcState = typeof callbacks.webrtcState == \"function\" ? callbacks.webrtcState : Janus.noop;\n    callbacks.slowLink = typeof callbacks.slowLink == \"function\" ? callbacks.slowLink : Janus.noop;\n    callbacks.onmessage = typeof callbacks.onmessage == \"function\" ? callbacks.onmessage : Janus.noop;\n    callbacks.onlocalstream = typeof callbacks.onlocalstream == \"function\" ? callbacks.onlocalstream : Janus.noop;\n    callbacks.onremotestream = typeof callbacks.onremotestream == \"function\" ? callbacks.onremotestream : Janus.noop;\n    callbacks.ondata = typeof callbacks.ondata == \"function\" ? callbacks.ondata : Janus.noop;\n    callbacks.ondataopen = typeof callbacks.ondataopen == \"function\" ? callbacks.ondataopen : Janus.noop;\n    callbacks.oncleanup = typeof callbacks.oncleanup == \"function\" ? callbacks.oncleanup : Janus.noop;\n    callbacks.ondetached = typeof callbacks.ondetached == \"function\" ? callbacks.ondetached : Janus.noop;\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      callbacks.error(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var plugin = callbacks.plugin;\n\n    if (!plugin) {\n      Janus.error(\"Invalid plugin\");\n      callbacks.error(\"Invalid plugin\");\n      return;\n    }\n\n    var opaqueId = callbacks.opaqueId;\n    var handleToken = callbacks.token ? callbacks.token : token;\n    var transaction = Janus.randomString(12);\n    var request = {\n      \"janus\": \"attach\",\n      \"plugin\": plugin,\n      \"opaque_id\": opaqueId,\n      \"transaction\": transaction\n    };\n    if (handleToken) request[\"token\"] = handleToken;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (websockets) {\n      transactions[transaction] = function (json) {\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n          callbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n          return;\n        }\n\n        var handleId = json.data[\"id\"];\n        Janus.log(\"Created handle: \" + handleId);\n        var pluginHandle = {\n          session: that,\n          plugin: plugin,\n          id: handleId,\n          token: handleToken,\n          detached: false,\n          webrtcStuff: {\n            started: false,\n            myStream: null,\n            streamExternal: false,\n            remoteStream: null,\n            mySdp: null,\n            mediaConstraints: null,\n            pc: null,\n            dataChannel: {},\n            dtmfSender: null,\n            trickle: true,\n            iceDone: false,\n            volume: {\n              value: null,\n              timer: null\n            },\n            bitrate: {\n              value: null,\n              bsnow: null,\n              bsbefore: null,\n              tsnow: null,\n              tsbefore: null,\n              timer: null\n            }\n          },\n          getId: function () {\n            return handleId;\n          },\n          getPlugin: function () {\n            return plugin;\n          },\n          getVolume: function () {\n            return getVolume(handleId, true);\n          },\n          getRemoteVolume: function () {\n            return getVolume(handleId, true);\n          },\n          getLocalVolume: function () {\n            return getVolume(handleId, false);\n          },\n          isAudioMuted: function () {\n            return isMuted(handleId, false);\n          },\n          muteAudio: function () {\n            return mute(handleId, false, true);\n          },\n          unmuteAudio: function () {\n            return mute(handleId, false, false);\n          },\n          isVideoMuted: function () {\n            return isMuted(handleId, true);\n          },\n          muteVideo: function () {\n            return mute(handleId, true, true);\n          },\n          unmuteVideo: function () {\n            return mute(handleId, true, false);\n          },\n          getBitrate: function () {\n            return getBitrate(handleId);\n          },\n          send: function (callbacks) {\n            sendMessage(handleId, callbacks);\n          },\n          data: function (callbacks) {\n            sendData(handleId, callbacks);\n          },\n          dtmf: function (callbacks) {\n            sendDtmf(handleId, callbacks);\n          },\n          consentDialog: callbacks.consentDialog,\n          iceState: callbacks.iceState,\n          mediaState: callbacks.mediaState,\n          webrtcState: callbacks.webrtcState,\n          slowLink: callbacks.slowLink,\n          onmessage: callbacks.onmessage,\n          createOffer: function (callbacks) {\n            prepareWebrtc(handleId, true, callbacks);\n          },\n          createAnswer: function (callbacks) {\n            prepareWebrtc(handleId, false, callbacks);\n          },\n          handleRemoteJsep: function (callbacks) {\n            prepareWebrtcPeer(handleId, callbacks);\n          },\n          onlocalstream: callbacks.onlocalstream,\n          onremotestream: callbacks.onremotestream,\n          ondata: callbacks.ondata,\n          ondataopen: callbacks.ondataopen,\n          oncleanup: callbacks.oncleanup,\n          ondetached: callbacks.ondetached,\n          hangup: function (sendRequest) {\n            cleanupWebrtc(handleId, sendRequest === true);\n          },\n          detach: function (callbacks) {\n            destroyHandle(handleId, callbacks);\n          }\n        };\n        pluginHandles[handleId] = pluginHandle;\n        callbacks.success(pluginHandle);\n      };\n\n      request[\"session_id\"] = sessionId;\n      ws.send(JSON.stringify(request));\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n          callbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n          return;\n        }\n\n        var handleId = json.data[\"id\"];\n        Janus.log(\"Created handle: \" + handleId);\n        var pluginHandle = {\n          session: that,\n          plugin: plugin,\n          id: handleId,\n          token: handleToken,\n          detached: false,\n          webrtcStuff: {\n            started: false,\n            myStream: null,\n            streamExternal: false,\n            remoteStream: null,\n            mySdp: null,\n            mediaConstraints: null,\n            pc: null,\n            dataChannel: {},\n            dtmfSender: null,\n            trickle: true,\n            iceDone: false,\n            volume: {\n              value: null,\n              timer: null\n            },\n            bitrate: {\n              value: null,\n              bsnow: null,\n              bsbefore: null,\n              tsnow: null,\n              tsbefore: null,\n              timer: null\n            }\n          },\n          getId: function () {\n            return handleId;\n          },\n          getPlugin: function () {\n            return plugin;\n          },\n          getVolume: function () {\n            return getVolume(handleId, true);\n          },\n          getRemoteVolume: function () {\n            return getVolume(handleId, true);\n          },\n          getLocalVolume: function () {\n            return getVolume(handleId, false);\n          },\n          isAudioMuted: function () {\n            return isMuted(handleId, false);\n          },\n          muteAudio: function () {\n            return mute(handleId, false, true);\n          },\n          unmuteAudio: function () {\n            return mute(handleId, false, false);\n          },\n          isVideoMuted: function () {\n            return isMuted(handleId, true);\n          },\n          muteVideo: function () {\n            return mute(handleId, true, true);\n          },\n          unmuteVideo: function () {\n            return mute(handleId, true, false);\n          },\n          getBitrate: function () {\n            return getBitrate(handleId);\n          },\n          send: function (callbacks) {\n            sendMessage(handleId, callbacks);\n          },\n          data: function (callbacks) {\n            sendData(handleId, callbacks);\n          },\n          dtmf: function (callbacks) {\n            sendDtmf(handleId, callbacks);\n          },\n          consentDialog: callbacks.consentDialog,\n          iceState: callbacks.iceState,\n          mediaState: callbacks.mediaState,\n          webrtcState: callbacks.webrtcState,\n          slowLink: callbacks.slowLink,\n          onmessage: callbacks.onmessage,\n          createOffer: function (callbacks) {\n            prepareWebrtc(handleId, true, callbacks);\n          },\n          createAnswer: function (callbacks) {\n            prepareWebrtc(handleId, false, callbacks);\n          },\n          handleRemoteJsep: function (callbacks) {\n            prepareWebrtcPeer(handleId, callbacks);\n          },\n          onlocalstream: callbacks.onlocalstream,\n          onremotestream: callbacks.onremotestream,\n          ondata: callbacks.ondata,\n          ondataopen: callbacks.ondataopen,\n          oncleanup: callbacks.oncleanup,\n          ondetached: callbacks.ondetached,\n          hangup: function (sendRequest) {\n            cleanupWebrtc(handleId, sendRequest === true);\n          },\n          detach: function (callbacks) {\n            destroyHandle(handleId, callbacks);\n          }\n        };\n        pluginHandles[handleId] = pluginHandle;\n        callbacks.success(pluginHandle);\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n\n        if (errorThrown === \"\") callbacks.error(textStatus + \": Is the server down?\");else callbacks.error(textStatus + \": \" + errorThrown);\n      }\n    });\n  } // Private method to send a message\n\n\n  function sendMessage(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      callbacks.error(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var message = callbacks.message;\n    var jsep = callbacks.jsep;\n    var transaction = Janus.randomString(12);\n    var request = {\n      \"janus\": \"message\",\n      \"body\": message,\n      \"transaction\": transaction\n    };\n    if (pluginHandle.token) request[\"token\"] = pluginHandle.token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (jsep) {\n      request.jsep = {\n        type: jsep.type,\n        sdp: jsep.sdp\n      };\n      if (jsep.e2ee) request.jsep.e2ee = true;\n      if (jsep.rid_order === \"hml\" || jsep.rid_order === \"lmh\") request.jsep.rid_order = jsep.rid_order;\n    }\n\n    Janus.debug(\"Sending message to plugin (handle=\" + handleId + \"):\");\n    Janus.debug(request);\n\n    if (websockets) {\n      request[\"session_id\"] = sessionId;\n      request[\"handle_id\"] = handleId;\n\n      transactions[transaction] = function (json) {\n        Janus.debug(\"Message sent!\");\n        Janus.debug(json);\n\n        if (json[\"janus\"] === \"success\") {\n          // We got a success, must have been a synchronous transaction\n          var plugindata = json[\"plugindata\"];\n\n          if (!plugindata) {\n            Janus.warn(\"Request succeeded, but missing plugindata...\");\n            callbacks.success();\n            return;\n          }\n\n          Janus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n          var data = plugindata[\"data\"];\n          Janus.debug(data);\n          callbacks.success(data);\n          return;\n        } else if (json[\"janus\"] !== \"ack\") {\n          // Not a success and not an ack, must be an error\n          if (json[\"error\"]) {\n            Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n            callbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n          } else {\n            Janus.error(\"Unknown error\"); // FIXME\n\n            callbacks.error(\"Unknown error\");\n          }\n\n          return;\n        } // If we got here, the plugin decided to handle the request asynchronously\n\n\n        callbacks.success();\n      };\n\n      ws.send(JSON.stringify(request));\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.debug(\"Message sent!\");\n        Janus.debug(json);\n\n        if (json[\"janus\"] === \"success\") {\n          // We got a success, must have been a synchronous transaction\n          var plugindata = json[\"plugindata\"];\n\n          if (!plugindata) {\n            Janus.warn(\"Request succeeded, but missing plugindata...\");\n            callbacks.success();\n            return;\n          }\n\n          Janus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n          var data = plugindata[\"data\"];\n          Janus.debug(data);\n          callbacks.success(data);\n          return;\n        } else if (json[\"janus\"] !== \"ack\") {\n          // Not a success and not an ack, must be an error\n          if (json[\"error\"]) {\n            Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n            callbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n          } else {\n            Janus.error(\"Unknown error\"); // FIXME\n\n            callbacks.error(\"Unknown error\");\n          }\n\n          return;\n        } // If we got here, the plugin decided to handle the request asynchronously\n\n\n        callbacks.success();\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n\n        callbacks.error(textStatus + \": \" + errorThrown);\n      }\n    });\n  } // Private method to send a trickle candidate\n\n\n  function sendTrickleCandidate(handleId, candidate) {\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return;\n    }\n\n    var request = {\n      \"janus\": \"trickle\",\n      \"candidate\": candidate,\n      \"transaction\": Janus.randomString(12)\n    };\n    if (pluginHandle.token) request[\"token\"] = pluginHandle.token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n    Janus.vdebug(\"Sending trickle candidate (handle=\" + handleId + \"):\");\n    Janus.vdebug(request);\n\n    if (websockets) {\n      request[\"session_id\"] = sessionId;\n      request[\"handle_id\"] = handleId;\n      ws.send(JSON.stringify(request));\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.vdebug(\"Candidate sent!\");\n        Janus.vdebug(json);\n\n        if (json[\"janus\"] !== \"ack\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n          return;\n        }\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n      }\n    });\n  } // Private method to create a data channel\n\n\n  function createDataChannel(handleId, dclabel, dcprotocol, incoming, pendingData) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (!config.pc) {\n      Janus.warn(\"Invalid PeerConnection\");\n      return;\n    }\n\n    var onDataChannelMessage = function (event) {\n      Janus.log('Received message on data channel:', event);\n      var label = event.target.label;\n      pluginHandle.ondata(event.data, label);\n    };\n\n    var onDataChannelStateChange = function (event) {\n      Janus.log('Received state change on data channel:', event);\n      var label = event.target.label;\n      var protocol = event.target.protocol;\n      var dcState = config.dataChannel[label] ? config.dataChannel[label].readyState : \"null\";\n      Janus.log('State change on <' + label + '> data channel: ' + dcState);\n\n      if (dcState === 'open') {\n        // Any pending messages to send?\n        if (config.dataChannel[label].pending && config.dataChannel[label].pending.length > 0) {\n          Janus.log(\"Sending pending messages on <\" + label + \">:\", config.dataChannel[label].pending.length);\n\n          for (var data of config.dataChannel[label].pending) {\n            Janus.log(\"Sending data on data channel <\" + label + \">\");\n            Janus.debug(data);\n            config.dataChannel[label].send(data);\n          }\n\n          config.dataChannel[label].pending = [];\n        } // Notify the open data channel\n\n\n        pluginHandle.ondataopen(label, protocol);\n      }\n    };\n\n    var onDataChannelError = function (error) {\n      Janus.error('Got error on data channel:', error); // TODO\n    };\n\n    if (!incoming) {\n      // FIXME Add options (ordered, maxRetransmits, etc.)\n      var dcoptions = {\n        ordered: true\n      };\n      if (dcprotocol) dcoptions.protocol = dcprotocol;\n      config.dataChannel[dclabel] = config.pc.createDataChannel(dclabel, dcoptions);\n    } else {\n      // The channel was created by Janus\n      config.dataChannel[dclabel] = incoming;\n    }\n\n    config.dataChannel[dclabel].onmessage = onDataChannelMessage;\n    config.dataChannel[dclabel].onopen = onDataChannelStateChange;\n    config.dataChannel[dclabel].onclose = onDataChannelStateChange;\n    config.dataChannel[dclabel].onerror = onDataChannelError;\n    config.dataChannel[dclabel].pending = [];\n    if (pendingData) config.dataChannel[dclabel].pending.push(pendingData);\n  } // Private method to send a data channel message\n\n\n  function sendData(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    var data = callbacks.text || callbacks.data;\n\n    if (!data) {\n      Janus.warn(\"Invalid data\");\n      callbacks.error(\"Invalid data\");\n      return;\n    }\n\n    var label = callbacks.label ? callbacks.label : Janus.dataChanDefaultLabel;\n\n    if (!config.dataChannel[label]) {\n      // Create new data channel and wait for it to open\n      createDataChannel(handleId, label, callbacks.protocol, false, data, callbacks.protocol);\n      callbacks.success();\n      return;\n    }\n\n    if (config.dataChannel[label].readyState !== \"open\") {\n      config.dataChannel[label].pending.push(data);\n      callbacks.success();\n      return;\n    }\n\n    Janus.log(\"Sending data on data channel <\" + label + \">\");\n    Janus.debug(data);\n    config.dataChannel[label].send(data);\n    callbacks.success();\n  } // Private method to send a DTMF tone\n\n\n  function sendDtmf(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (!config.dtmfSender) {\n      // Create the DTMF sender the proper way, if possible\n      if (config.pc) {\n        var senders = config.pc.getSenders();\n        var audioSender = senders.find(function (sender) {\n          return sender.track && sender.track.kind === 'audio';\n        });\n\n        if (!audioSender) {\n          Janus.warn(\"Invalid DTMF configuration (no audio track)\");\n          callbacks.error(\"Invalid DTMF configuration (no audio track)\");\n          return;\n        }\n\n        config.dtmfSender = audioSender.dtmf;\n\n        if (config.dtmfSender) {\n          Janus.log(\"Created DTMF Sender\");\n\n          config.dtmfSender.ontonechange = function (tone) {\n            Janus.debug(\"Sent DTMF tone: \" + tone.tone);\n          };\n        }\n      }\n\n      if (!config.dtmfSender) {\n        Janus.warn(\"Invalid DTMF configuration\");\n        callbacks.error(\"Invalid DTMF configuration\");\n        return;\n      }\n    }\n\n    var dtmf = callbacks.dtmf;\n\n    if (!dtmf) {\n      Janus.warn(\"Invalid DTMF parameters\");\n      callbacks.error(\"Invalid DTMF parameters\");\n      return;\n    }\n\n    var tones = dtmf.tones;\n\n    if (!tones) {\n      Janus.warn(\"Invalid DTMF string\");\n      callbacks.error(\"Invalid DTMF string\");\n      return;\n    }\n\n    var duration = typeof dtmf.duration === 'number' ? dtmf.duration : 500; // We choose 500ms as the default duration for a tone\n\n    var gap = typeof dtmf.gap === 'number' ? dtmf.gap : 50; // We choose 50ms as the default gap between tones\n\n    Janus.debug(\"Sending DTMF string \" + tones + \" (duration \" + duration + \"ms, gap \" + gap + \"ms)\");\n    config.dtmfSender.insertDTMF(tones, duration, gap);\n    callbacks.success();\n  } // Private method to destroy a plugin handle\n\n\n  function destroyHandle(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var noRequest = callbacks.noRequest === true;\n    Janus.log(\"Destroying handle \" + handleId + \" (only-locally=\" + noRequest + \")\");\n    cleanupWebrtc(handleId);\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || pluginHandle.detached) {\n      // Plugin was already detached by Janus, calling detach again will return a handle not found error, so just exit here\n      delete pluginHandles[handleId];\n      callbacks.success();\n      return;\n    }\n\n    pluginHandle.detached = true;\n\n    if (noRequest) {\n      // We're only removing the handle locally\n      delete pluginHandles[handleId];\n      callbacks.success();\n      return;\n    }\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      callbacks.error(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var request = {\n      \"janus\": \"detach\",\n      \"transaction\": Janus.randomString(12)\n    };\n    if (pluginHandle.token) request[\"token\"] = pluginHandle.token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (websockets) {\n      request[\"session_id\"] = sessionId;\n      request[\"handle_id\"] = handleId;\n      ws.send(JSON.stringify(request));\n      delete pluginHandles[handleId];\n      callbacks.success();\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.log(\"Destroyed handle:\");\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n        }\n\n        delete pluginHandles[handleId];\n        callbacks.success();\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n        // We cleanup anyway\n\n        delete pluginHandles[handleId];\n        callbacks.success();\n      }\n    });\n  } // WebRTC stuff\n\n\n  function streamsDone(handleId, jsep, media, callbacks, stream) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\"); // Close all tracks if the given stream has been created internally\n\n      if (!callbacks.stream) {\n        Janus.stopAllTracks(stream);\n      }\n\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    Janus.debug(\"streamsDone:\", stream);\n\n    if (stream) {\n      Janus.debug(\"  -- Audio tracks:\", stream.getAudioTracks());\n      Janus.debug(\"  -- Video tracks:\", stream.getVideoTracks());\n    } // We're now capturing the new stream: check if we're updating or if it's a new thing\n\n\n    var addTracks = false;\n\n    if (!config.myStream || !media.update || config.streamExternal && !media.replaceAudio && !media.replaceVideo) {\n      config.myStream = stream;\n      addTracks = true;\n    } else {\n      // We only need to update the existing stream\n      if ((!media.update && isAudioSendEnabled(media) || media.update && (media.addAudio || media.replaceAudio)) && stream.getAudioTracks() && stream.getAudioTracks().length) {\n        config.myStream.addTrack(stream.getAudioTracks()[0]);\n\n        if (Janus.unifiedPlan) {\n          // Use Transceivers\n          Janus.log((media.replaceAudio ? \"Replacing\" : \"Adding\") + \" audio track:\", stream.getAudioTracks()[0]);\n          var audioTransceiver = null;\n          var transceivers = config.pc.getTransceivers();\n\n          if (transceivers && transceivers.length > 0) {\n            for (var t of transceivers) {\n              if (t.sender && t.sender.track && t.sender.track.kind === \"audio\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\") {\n                audioTransceiver = t;\n                break;\n              }\n            }\n          }\n\n          if (audioTransceiver && audioTransceiver.sender) {\n            audioTransceiver.sender.replaceTrack(stream.getAudioTracks()[0]);\n          } else {\n            config.pc.addTrack(stream.getAudioTracks()[0], stream);\n          }\n        } else {\n          Janus.log((media.replaceAudio ? \"Replacing\" : \"Adding\") + \" audio track:\", stream.getAudioTracks()[0]);\n          config.pc.addTrack(stream.getAudioTracks()[0], stream);\n        }\n      }\n\n      if ((!media.update && isVideoSendEnabled(media) || media.update && (media.addVideo || media.replaceVideo)) && stream.getVideoTracks() && stream.getVideoTracks().length) {\n        config.myStream.addTrack(stream.getVideoTracks()[0]);\n\n        if (Janus.unifiedPlan) {\n          // Use Transceivers\n          Janus.log((media.replaceVideo ? \"Replacing\" : \"Adding\") + \" video track:\", stream.getVideoTracks()[0]);\n          var videoTransceiver = null;\n          var transceivers = config.pc.getTransceivers();\n\n          if (transceivers && transceivers.length > 0) {\n            for (var t of transceivers) {\n              if (t.sender && t.sender.track && t.sender.track.kind === \"video\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"video\") {\n                videoTransceiver = t;\n                break;\n              }\n            }\n          }\n\n          if (videoTransceiver && videoTransceiver.sender) {\n            videoTransceiver.sender.replaceTrack(stream.getVideoTracks()[0]);\n          } else {\n            config.pc.addTrack(stream.getVideoTracks()[0], stream);\n          }\n        } else {\n          Janus.log((media.replaceVideo ? \"Replacing\" : \"Adding\") + \" video track:\", stream.getVideoTracks()[0]);\n          config.pc.addTrack(stream.getVideoTracks()[0], stream);\n        }\n      }\n    } // If we still need to create a PeerConnection, let's do that\n\n\n    if (!config.pc) {\n      var pc_config = {\n        \"iceServers\": iceServers,\n        \"iceTransportPolicy\": iceTransportPolicy,\n        \"bundlePolicy\": bundlePolicy\n      };\n\n      if (Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n        // For Chrome versions before 72, we force a plan-b semantic, and unified-plan otherwise\n        pc_config[\"sdpSemantics\"] = Janus.webRTCAdapter.browserDetails.version < 72 ? \"plan-b\" : \"unified-plan\";\n      }\n\n      var pc_constraints = {\n        \"optional\": [{\n          \"DtlsSrtpKeyAgreement\": true\n        }]\n      };\n\n      if (ipv6Support) {\n        pc_constraints.optional.push({\n          \"googIPv6\": true\n        });\n      } // Any custom constraint to add?\n\n\n      if (callbacks.rtcConstraints && typeof callbacks.rtcConstraints === 'object') {\n        Janus.debug(\"Adding custom PeerConnection constraints:\", callbacks.rtcConstraints);\n\n        for (var i in callbacks.rtcConstraints) {\n          pc_constraints.optional.push(callbacks.rtcConstraints[i]);\n        }\n      }\n\n      if (Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n        // This is Edge, enable BUNDLE explicitly\n        pc_config.bundlePolicy = \"max-bundle\";\n      } // Check if a sender or receiver transform has been provided\n\n\n      if (RTCRtpSender && (RTCRtpSender.prototype.createEncodedStreams || RTCRtpSender.prototype.createEncodedAudioStreams && RTCRtpSender.prototype.createEncodedVideoStreams) && (callbacks.senderTransforms || callbacks.receiverTransforms)) {\n        config.senderTransforms = callbacks.senderTransforms;\n        config.receiverTransforms = callbacks.receiverTransforms;\n        pc_config[\"forceEncodedAudioInsertableStreams\"] = true;\n        pc_config[\"forceEncodedVideoInsertableStreams\"] = true;\n        pc_config[\"encodedInsertableStreams\"] = true;\n      }\n\n      Janus.log(\"Creating PeerConnection\");\n      Janus.debug(pc_constraints);\n      config.pc = new RTCPeerConnection(pc_config, pc_constraints);\n      Janus.debug(config.pc);\n\n      if (config.pc.getStats) {\n        // FIXME\n        config.volume = {};\n        config.bitrate.value = \"0 kbits/sec\";\n      }\n\n      Janus.log(\"Preparing local SDP and gathering candidates (trickle=\" + config.trickle + \")\");\n\n      config.pc.oniceconnectionstatechange = function (e) {\n        if (config.pc) pluginHandle.iceState(config.pc.iceConnectionState);\n      };\n\n      config.pc.onicecandidate = function (event) {\n        if (!event.candidate || Janus.webRTCAdapter.browserDetails.browser === 'edge' && event.candidate.candidate.indexOf('endOfCandidates') > 0) {\n          Janus.log(\"End of candidates.\");\n          config.iceDone = true;\n\n          if (config.trickle === true) {\n            // Notify end of candidates\n            sendTrickleCandidate(handleId, {\n              \"completed\": true\n            });\n          } else {\n            // No trickle, time to send the complete SDP (including all candidates)\n            sendSDP(handleId, callbacks);\n          }\n        } else {\n          // JSON.stringify doesn't work on some WebRTC objects anymore\n          // See https://code.google.com/p/chromium/issues/detail?id=467366\n          var candidate = {\n            \"candidate\": event.candidate.candidate,\n            \"sdpMid\": event.candidate.sdpMid,\n            \"sdpMLineIndex\": event.candidate.sdpMLineIndex\n          };\n\n          if (config.trickle === true) {\n            // Send candidate\n            sendTrickleCandidate(handleId, candidate);\n          }\n        }\n      };\n\n      config.pc.ontrack = function (event) {\n        Janus.log(\"Handling Remote Track\");\n        Janus.debug(event);\n        if (!event.streams) return;\n        config.remoteStream = event.streams[0];\n        pluginHandle.onremotestream(config.remoteStream);\n        if (event.track.onended) return;\n\n        if (config.receiverTransforms) {\n          var receiverStreams = null;\n\n          if (RTCRtpSender.prototype.createEncodedStreams) {\n            receiverStreams = event.receiver.createEncodedStreams();\n          } else if (RTCRtpSender.prototype.createAudioEncodedStreams || RTCRtpSender.prototype.createEncodedVideoStreams) {\n            if (event.track.kind === \"audio\" && config.receiverTransforms[\"audio\"]) {\n              receiverStreams = event.receiver.createEncodedAudioStreams();\n            } else if (event.track.kind === \"video\" && config.receiverTransforms[\"video\"]) {\n              receiverStreams = event.receiver.createEncodedVideoStreams();\n            }\n          }\n\n          if (receiverStreams) {\n            console.log(receiverStreams);\n\n            if (receiverStreams.readableStream && receiverStreams.writableStream) {\n              receiverStreams.readableStream.pipeThrough(config.receiverTransforms[event.track.kind]).pipeTo(receiverStreams.writableStream);\n            } else if (receiverStreams.readable && receiverStreams.writable) {\n              receiverStreams.readable.pipeThrough(config.receiverTransforms[event.track.kind]).pipeTo(receiverStreams.writable);\n            }\n          }\n        }\n\n        var trackMutedTimeoutId = null;\n        Janus.log(\"Adding onended callback to track:\", event.track);\n\n        event.track.onended = function (ev) {\n          Janus.log(\"Remote track removed:\", ev);\n\n          if (config.remoteStream) {\n            clearTimeout(trackMutedTimeoutId);\n            config.remoteStream.removeTrack(ev.target);\n            pluginHandle.onremotestream(config.remoteStream);\n          }\n        };\n\n        event.track.onmute = function (ev) {\n          Janus.log(\"Remote track muted:\", ev);\n\n          if (config.remoteStream && trackMutedTimeoutId == null) {\n            trackMutedTimeoutId = setTimeout(function () {\n              Janus.log(\"Removing remote track\");\n\n              if (config.remoteStream) {\n                config.remoteStream.removeTrack(ev.target);\n                pluginHandle.onremotestream(config.remoteStream);\n              }\n\n              trackMutedTimeoutId = null; // Chrome seems to raise mute events only at multiples of 834ms;\n              // we set the timeout to three times this value (rounded to 840ms)\n            }, 3 * 840);\n          }\n        };\n\n        event.track.onunmute = function (ev) {\n          Janus.log(\"Remote track flowing again:\", ev);\n\n          if (trackMutedTimeoutId != null) {\n            clearTimeout(trackMutedTimeoutId);\n            trackMutedTimeoutId = null;\n          } else {\n            try {\n              config.remoteStream.addTrack(ev.target);\n              pluginHandle.onremotestream(config.remoteStream);\n            } catch (e) {\n              Janus.error(e);\n            }\n\n            ;\n          }\n        };\n      };\n    }\n\n    if (addTracks && stream) {\n      Janus.log('Adding local stream');\n      var simulcast2 = callbacks.simulcast2 === true;\n      stream.getTracks().forEach(function (track) {\n        Janus.log('Adding local track:', track);\n        var sender = null;\n\n        if (!simulcast2 || track.kind === 'audio') {\n          sender = config.pc.addTrack(track, stream);\n        } else {\n          Janus.log('Enabling rid-based simulcasting:', track);\n          var maxBitrates = getMaxBitrates(callbacks.simulcastMaxBitrates);\n          var tr = config.pc.addTransceiver(track, {\n            direction: \"sendrecv\",\n            streams: [stream],\n            sendEncodings: callbacks.sendEncodings || [{\n              rid: \"h\",\n              active: true,\n              maxBitrate: maxBitrates.high\n            }, {\n              rid: \"m\",\n              active: true,\n              maxBitrate: maxBitrates.medium,\n              scaleResolutionDownBy: 2\n            }, {\n              rid: \"l\",\n              active: true,\n              maxBitrate: maxBitrates.low,\n              scaleResolutionDownBy: 4\n            }]\n          });\n          if (tr) sender = tr.sender;\n        } // Check if insertable streams are involved\n\n\n        if (sender && config.senderTransforms) {\n          var senderStreams = null;\n\n          if (RTCRtpSender.prototype.createEncodedStreams) {\n            senderStreams = sender.createEncodedStreams();\n          } else if (RTCRtpSender.prototype.createAudioEncodedStreams || RTCRtpSender.prototype.createEncodedVideoStreams) {\n            if (sender.track.kind === \"audio\" && config.senderTransforms[\"audio\"]) {\n              senderStreams = sender.createEncodedAudioStreams();\n            } else if (sender.track.kind === \"video\" && config.senderTransforms[\"video\"]) {\n              senderStreams = sender.createEncodedVideoStreams();\n            }\n          }\n\n          if (senderStreams) {\n            console.log(senderStreams);\n\n            if (senderStreams.readableStream && senderStreams.writableStream) {\n              senderStreams.readableStream.pipeThrough(config.senderTransforms[sender.track.kind]).pipeTo(senderStreams.writableStream);\n            } else if (senderStreams.readable && senderStreams.writable) {\n              senderStreams.readable.pipeThrough(config.senderTransforms[sender.track.kind]).pipeTo(senderStreams.writable);\n            }\n          }\n        }\n      });\n    } // Any data channel to create?\n\n\n    if (isDataEnabled(media) && !config.dataChannel[Janus.dataChanDefaultLabel]) {\n      Janus.log(\"Creating default data channel\");\n      createDataChannel(handleId, Janus.dataChanDefaultLabel, null, false);\n\n      config.pc.ondatachannel = function (event) {\n        Janus.log(\"Data channel created by Janus:\", event);\n        createDataChannel(handleId, event.channel.label, event.channel.protocol, event.channel);\n      };\n    } // If there's a new local stream, let's notify the application\n\n\n    if (config.myStream) {\n      pluginHandle.onlocalstream(config.myStream);\n    } // Create offer/answer now\n\n\n    if (!jsep) {\n      createOffer(handleId, media, callbacks);\n    } else {\n      config.pc.setRemoteDescription(jsep).then(function () {\n        Janus.log(\"Remote description accepted!\");\n        config.remoteSdp = jsep.sdp; // Any trickle candidate we cached?\n\n        if (config.candidates && config.candidates.length > 0) {\n          for (var i = 0; i < config.candidates.length; i++) {\n            var candidate = config.candidates[i];\n            Janus.debug(\"Adding remote candidate:\", candidate);\n\n            if (!candidate || candidate.completed === true) {\n              // end-of-candidates\n              config.pc.addIceCandidate(Janus.endOfCandidates);\n            } else {\n              // New candidate\n              config.pc.addIceCandidate(candidate);\n            }\n          }\n\n          config.candidates = [];\n        } // Create the answer now\n\n\n        createAnswer(handleId, media, callbacks);\n      }, callbacks.error);\n    }\n  }\n\n  function prepareWebrtc(handleId, offer, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : webrtcError;\n    var jsep = callbacks.jsep;\n\n    if (offer && jsep) {\n      Janus.error(\"Provided a JSEP to a createOffer\");\n      callbacks.error(\"Provided a JSEP to a createOffer\");\n      return;\n    } else if (!offer && (!jsep || !jsep.type || !jsep.sdp)) {\n      Janus.error(\"A valid JSEP is required for createAnswer\");\n      callbacks.error(\"A valid JSEP is required for createAnswer\");\n      return;\n    }\n    /* Check that callbacks.media is a (not null) Object */\n\n\n    callbacks.media = typeof callbacks.media === 'object' && callbacks.media ? callbacks.media : {\n      audio: true,\n      video: true\n    };\n    var media = callbacks.media;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    config.trickle = isTrickleEnabled(callbacks.trickle); // Are we updating a session?\n\n    if (!config.pc) {\n      // Nope, new PeerConnection\n      media.update = false;\n      media.keepAudio = false;\n      media.keepVideo = false;\n    } else {\n      Janus.log(\"Updating existing media session\");\n      media.update = true; // Check if there's anything to add/remove/replace, or if we\n      // can go directly to preparing the new SDP offer or answer\n\n      if (callbacks.stream) {\n        // External stream: is this the same as the one we were using before?\n        if (callbacks.stream !== config.myStream) {\n          Janus.log(\"Renegotiation involves a new external stream\");\n        }\n      } else {\n        // Check if there are changes on audio\n        if (media.addAudio) {\n          media.keepAudio = false;\n          media.replaceAudio = false;\n          media.removeAudio = false;\n          media.audioSend = true;\n\n          if (config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n            Janus.error(\"Can't add audio stream, there already is one\");\n            callbacks.error(\"Can't add audio stream, there already is one\");\n            return;\n          }\n        } else if (media.removeAudio) {\n          media.keepAudio = false;\n          media.replaceAudio = false;\n          media.addAudio = false;\n          media.audioSend = false;\n        } else if (media.replaceAudio) {\n          media.keepAudio = false;\n          media.addAudio = false;\n          media.removeAudio = false;\n          media.audioSend = true;\n        }\n\n        if (!config.myStream) {\n          // No media stream: if we were asked to replace, it's actually an \"add\"\n          if (media.replaceAudio) {\n            media.keepAudio = false;\n            media.replaceAudio = false;\n            media.addAudio = true;\n            media.audioSend = true;\n          }\n\n          if (isAudioSendEnabled(media)) {\n            media.keepAudio = false;\n            media.addAudio = true;\n          }\n        } else {\n          if (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n            // No audio track: if we were asked to replace, it's actually an \"add\"\n            if (media.replaceAudio) {\n              media.keepAudio = false;\n              media.replaceAudio = false;\n              media.addAudio = true;\n              media.audioSend = true;\n            }\n\n            if (isAudioSendEnabled(media)) {\n              media.keepAudio = false;\n              media.addAudio = true;\n            }\n          } else {\n            // We have an audio track: should we keep it as it is?\n            if (isAudioSendEnabled(media) && !media.removeAudio && !media.replaceAudio) {\n              media.keepAudio = true;\n            }\n          }\n        } // Check if there are changes on video\n\n\n        if (media.addVideo) {\n          media.keepVideo = false;\n          media.replaceVideo = false;\n          media.removeVideo = false;\n          media.videoSend = true;\n\n          if (config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n            Janus.error(\"Can't add video stream, there already is one\");\n            callbacks.error(\"Can't add video stream, there already is one\");\n            return;\n          }\n        } else if (media.removeVideo) {\n          media.keepVideo = false;\n          media.replaceVideo = false;\n          media.addVideo = false;\n          media.videoSend = false;\n        } else if (media.replaceVideo) {\n          media.keepVideo = false;\n          media.addVideo = false;\n          media.removeVideo = false;\n          media.videoSend = true;\n        }\n\n        if (!config.myStream) {\n          // No media stream: if we were asked to replace, it's actually an \"add\"\n          if (media.replaceVideo) {\n            media.keepVideo = false;\n            media.replaceVideo = false;\n            media.addVideo = true;\n            media.videoSend = true;\n          }\n\n          if (isVideoSendEnabled(media)) {\n            media.keepVideo = false;\n            media.addVideo = true;\n          }\n        } else {\n          if (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n            // No video track: if we were asked to replace, it's actually an \"add\"\n            if (media.replaceVideo) {\n              media.keepVideo = false;\n              media.replaceVideo = false;\n              media.addVideo = true;\n              media.videoSend = true;\n            }\n\n            if (isVideoSendEnabled(media)) {\n              media.keepVideo = false;\n              media.addVideo = true;\n            }\n          } else {\n            // We have a video track: should we keep it as it is?\n            if (isVideoSendEnabled(media) && !media.removeVideo && !media.replaceVideo) {\n              media.keepVideo = true;\n            }\n          }\n        } // Data channels can only be added\n\n\n        if (media.addData) {\n          media.data = true;\n        }\n      } // If we're updating and keeping all tracks, let's skip the getUserMedia part\n\n\n      if (isAudioSendEnabled(media) && media.keepAudio && isVideoSendEnabled(media) && media.keepVideo) {\n        pluginHandle.consentDialog(false);\n        streamsDone(handleId, jsep, media, callbacks, config.myStream);\n        return;\n      }\n    } // If we're updating, check if we need to remove/replace one of the tracks\n\n\n    if (media.update && (!config.streamExternal || config.streamExternal && (media.replaceAudio || media.replaceVideo))) {\n      if (media.removeAudio || media.replaceAudio) {\n        if (config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n          var at = config.myStream.getAudioTracks()[0];\n          Janus.log(\"Removing audio track:\", at);\n          config.myStream.removeTrack(at);\n\n          try {\n            at.stop();\n          } catch (e) {}\n        }\n\n        if (config.pc.getSenders() && config.pc.getSenders().length) {\n          var ra = true;\n\n          if (media.replaceAudio && Janus.unifiedPlan) {\n            // We can use replaceTrack\n            ra = false;\n          }\n\n          if (ra) {\n            for (var asnd of config.pc.getSenders()) {\n              if (asnd && asnd.track && asnd.track.kind === \"audio\") {\n                Janus.log(\"Removing audio sender:\", asnd);\n                config.pc.removeTrack(asnd);\n              }\n            }\n          }\n        }\n      }\n\n      if (media.removeVideo || media.replaceVideo) {\n        if (config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n          var vt = config.myStream.getVideoTracks()[0];\n          Janus.log(\"Removing video track:\", vt);\n          config.myStream.removeTrack(vt);\n\n          try {\n            vt.stop();\n          } catch (e) {}\n        }\n\n        if (config.pc.getSenders() && config.pc.getSenders().length) {\n          var rv = true;\n\n          if (media.replaceVideo && Janus.unifiedPlan) {\n            // We can use replaceTrack\n            rv = false;\n          }\n\n          if (rv) {\n            for (var vsnd of config.pc.getSenders()) {\n              if (vsnd && vsnd.track && vsnd.track.kind === \"video\") {\n                Janus.log(\"Removing video sender:\", vsnd);\n                config.pc.removeTrack(vsnd);\n              }\n            }\n          }\n        }\n      }\n    } // Was a MediaStream object passed, or do we need to take care of that?\n\n\n    if (callbacks.stream) {\n      var stream = callbacks.stream;\n      Janus.log(\"MediaStream provided by the application\");\n      Janus.debug(stream); // If this is an update, let's check if we need to release the previous stream\n\n      if (media.update && config.myStream && config.myStream !== callbacks.stream && !config.streamExternal && !media.replaceAudio && !media.replaceVideo) {\n        // We're replacing a stream we captured ourselves with an external one\n        Janus.stopAllTracks(config.myStream);\n        config.myStream = null;\n      } // Skip the getUserMedia part\n\n\n      config.streamExternal = true;\n      pluginHandle.consentDialog(false);\n      streamsDone(handleId, jsep, media, callbacks, stream);\n      return;\n    }\n\n    if (isAudioSendEnabled(media) || isVideoSendEnabled(media)) {\n      if (!Janus.isGetUserMediaAvailable()) {\n        callbacks.error(\"getUserMedia not available\");\n        return;\n      }\n\n      var constraints = {\n        mandatory: {},\n        optional: []\n      };\n      pluginHandle.consentDialog(true);\n      var audioSupport = isAudioSendEnabled(media);\n      if (audioSupport && media && typeof media.audio === 'object') audioSupport = media.audio;\n      var videoSupport = isVideoSendEnabled(media);\n\n      if (videoSupport && media) {\n        var simulcast = callbacks.simulcast === true;\n        var simulcast2 = callbacks.simulcast2 === true;\n        if ((simulcast || simulcast2) && !jsep && !media.video) media.video = \"hires\";\n\n        if (media.video && media.video != 'screen' && media.video != 'window') {\n          if (typeof media.video === 'object') {\n            videoSupport = media.video;\n          } else {\n            var width = 0;\n            var height = 0,\n                maxHeight = 0;\n\n            if (media.video === 'lowres') {\n              // Small resolution, 4:3\n              height = 240;\n              maxHeight = 240;\n              width = 320;\n            } else if (media.video === 'lowres-16:9') {\n              // Small resolution, 16:9\n              height = 180;\n              maxHeight = 180;\n              width = 320;\n            } else if (media.video === 'hires' || media.video === 'hires-16:9' || media.video === 'hdres') {\n              // High(HD) resolution is only 16:9\n              height = 720;\n              maxHeight = 720;\n              width = 1280;\n            } else if (media.video === 'fhdres') {\n              // Full HD resolution is only 16:9\n              height = 1080;\n              maxHeight = 1080;\n              width = 1920;\n            } else if (media.video === '4kres') {\n              // 4K resolution is only 16:9\n              height = 2160;\n              maxHeight = 2160;\n              width = 3840;\n            } else if (media.video === 'stdres') {\n              // Normal resolution, 4:3\n              height = 480;\n              maxHeight = 480;\n              width = 640;\n            } else if (media.video === 'stdres-16:9') {\n              // Normal resolution, 16:9\n              height = 360;\n              maxHeight = 360;\n              width = 640;\n            } else {\n              Janus.log(\"Default video setting is stdres 4:3\");\n              height = 480;\n              maxHeight = 480;\n              width = 640;\n            }\n\n            Janus.log(\"Adding media constraint:\", media.video);\n            videoSupport = {\n              'height': {\n                'ideal': height\n              },\n              'width': {\n                'ideal': width\n              }\n            };\n            Janus.log(\"Adding video constraint:\", videoSupport);\n          }\n        } else if (media.video === 'screen' || media.video === 'window') {\n          if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n            // The new experimental getDisplayMedia API is available, let's use that\n            // https://groups.google.com/forum/#!topic/discuss-webrtc/Uf0SrR4uxzk\n            // https://webrtchacks.com/chrome-screensharing-getdisplaymedia/\n            constraints.video = {};\n\n            if (media.screenshareFrameRate) {\n              constraints.video.frameRate = media.screenshareFrameRate;\n            }\n\n            if (media.screenshareHeight) {\n              constraints.video.height = media.screenshareHeight;\n            }\n\n            if (media.screenshareWidth) {\n              constraints.video.width = media.screenshareWidth;\n            }\n\n            constraints.audio = media.captureDesktopAudio;\n            navigator.mediaDevices.getDisplayMedia(constraints).then(function (stream) {\n              pluginHandle.consentDialog(false);\n\n              if (isAudioSendEnabled(media) && !media.keepAudio) {\n                navigator.mediaDevices.getUserMedia({\n                  audio: true,\n                  video: false\n                }).then(function (audioStream) {\n                  stream.addTrack(audioStream.getAudioTracks()[0]);\n                  streamsDone(handleId, jsep, media, callbacks, stream);\n                });\n              } else {\n                streamsDone(handleId, jsep, media, callbacks, stream);\n              }\n            }, function (error) {\n              pluginHandle.consentDialog(false);\n              callbacks.error(error);\n            });\n            return;\n          } // We're going to try and use the extension for Chrome 34+, the old approach\n          // for older versions of Chrome, or the experimental support in Firefox 33+\n\n\n          function callbackUserMedia(error, stream) {\n            pluginHandle.consentDialog(false);\n\n            if (error) {\n              callbacks.error(error);\n            } else {\n              streamsDone(handleId, jsep, media, callbacks, stream);\n            }\n          }\n\n          function getScreenMedia(constraints, gsmCallback, useAudio) {\n            Janus.log(\"Adding media constraint (screen capture)\");\n            Janus.debug(constraints);\n            navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n              if (useAudio) {\n                navigator.mediaDevices.getUserMedia({\n                  audio: true,\n                  video: false\n                }).then(function (audioStream) {\n                  stream.addTrack(audioStream.getAudioTracks()[0]);\n                  gsmCallback(null, stream);\n                });\n              } else {\n                gsmCallback(null, stream);\n              }\n            }).catch(function (error) {\n              pluginHandle.consentDialog(false);\n              gsmCallback(error);\n            });\n          }\n\n          if (Janus.webRTCAdapter.browserDetails.browser === 'chrome') {\n            var chromever = Janus.webRTCAdapter.browserDetails.version;\n            var maxver = 33;\n            if (window.navigator.userAgent.match('Linux')) maxver = 35; // \"known\" crash in chrome 34 and 35 on linux\n\n            if (chromever >= 26 && chromever <= maxver) {\n              // Chrome 26->33 requires some awkward chrome://flags manipulation\n              constraints = {\n                video: {\n                  mandatory: {\n                    googLeakyBucket: true,\n                    maxWidth: window.screen.width,\n                    maxHeight: window.screen.height,\n                    minFrameRate: media.screenshareFrameRate,\n                    maxFrameRate: media.screenshareFrameRate,\n                    chromeMediaSource: 'screen'\n                  }\n                },\n                audio: isAudioSendEnabled(media) && !media.keepAudio\n              };\n              getScreenMedia(constraints, callbackUserMedia);\n            } else {\n              // Chrome 34+ requires an extension\n              Janus.extension.getScreen(function (error, sourceId) {\n                if (error) {\n                  pluginHandle.consentDialog(false);\n                  return callbacks.error(error);\n                }\n\n                constraints = {\n                  audio: false,\n                  video: {\n                    mandatory: {\n                      chromeMediaSource: 'desktop',\n                      maxWidth: window.screen.width,\n                      maxHeight: window.screen.height,\n                      minFrameRate: media.screenshareFrameRate,\n                      maxFrameRate: media.screenshareFrameRate\n                    },\n                    optional: [{\n                      googLeakyBucket: true\n                    }, {\n                      googTemporalLayeredScreencast: true\n                    }]\n                  }\n                };\n                constraints.video.mandatory.chromeMediaSourceId = sourceId;\n                getScreenMedia(constraints, callbackUserMedia, isAudioSendEnabled(media) && !media.keepAudio);\n              });\n            }\n          } else if (Janus.webRTCAdapter.browserDetails.browser === 'firefox') {\n            if (Janus.webRTCAdapter.browserDetails.version >= 33) {\n              // Firefox 33+ has experimental support for screen sharing\n              constraints = {\n                video: {\n                  mozMediaSource: media.video,\n                  mediaSource: media.video\n                },\n                audio: isAudioSendEnabled(media) && !media.keepAudio\n              };\n              getScreenMedia(constraints, function (err, stream) {\n                callbackUserMedia(err, stream); // Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=1045810\n\n                if (!err) {\n                  var lastTime = stream.currentTime;\n                  var polly = window.setInterval(function () {\n                    if (!stream) window.clearInterval(polly);\n\n                    if (stream.currentTime == lastTime) {\n                      window.clearInterval(polly);\n\n                      if (stream.onended) {\n                        stream.onended();\n                      }\n                    }\n\n                    lastTime = stream.currentTime;\n                  }, 500);\n                }\n              });\n            } else {\n              var error = new Error('NavigatorUserMediaError');\n              error.name = 'Your version of Firefox does not support screen sharing, please install Firefox 33 (or more recent versions)';\n              pluginHandle.consentDialog(false);\n              callbacks.error(error);\n              return;\n            }\n          }\n\n          return;\n        }\n      } // If we got here, we're not screensharing\n\n\n      if (!media || media.video !== 'screen') {\n        // Check whether all media sources are actually available or not\n        navigator.mediaDevices.enumerateDevices().then(function (devices) {\n          var audioExist = devices.some(function (device) {\n            return device.kind === 'audioinput';\n          }),\n              videoExist = isScreenSendEnabled(media) || devices.some(function (device) {\n            return device.kind === 'videoinput';\n          }); // Check whether a missing device is really a problem\n\n          var audioSend = isAudioSendEnabled(media);\n          var videoSend = isVideoSendEnabled(media);\n          var needAudioDevice = isAudioSendRequired(media);\n          var needVideoDevice = isVideoSendRequired(media);\n\n          if (audioSend || videoSend || needAudioDevice || needVideoDevice) {\n            // We need to send either audio or video\n            var haveAudioDevice = audioSend ? audioExist : false;\n            var haveVideoDevice = videoSend ? videoExist : false;\n\n            if (!haveAudioDevice && !haveVideoDevice) {\n              // FIXME Should we really give up, or just assume recvonly for both?\n              pluginHandle.consentDialog(false);\n              callbacks.error('No capture device found');\n              return false;\n            } else if (!haveAudioDevice && needAudioDevice) {\n              pluginHandle.consentDialog(false);\n              callbacks.error('Audio capture is required, but no capture device found');\n              return false;\n            } else if (!haveVideoDevice && needVideoDevice) {\n              pluginHandle.consentDialog(false);\n              callbacks.error('Video capture is required, but no capture device found');\n              return false;\n            }\n          }\n\n          var gumConstraints = {\n            audio: audioExist && !media.keepAudio ? audioSupport : false,\n            video: videoExist && !media.keepVideo ? videoSupport : false\n          };\n          Janus.debug(\"getUserMedia constraints\", gumConstraints);\n\n          if (!gumConstraints.audio && !gumConstraints.video) {\n            pluginHandle.consentDialog(false);\n            streamsDone(handleId, jsep, media, callbacks, stream);\n          } else {\n            navigator.mediaDevices.getUserMedia(gumConstraints).then(function (stream) {\n              pluginHandle.consentDialog(false);\n              streamsDone(handleId, jsep, media, callbacks, stream);\n            }).catch(function (error) {\n              pluginHandle.consentDialog(false);\n              callbacks.error({\n                code: error.code,\n                name: error.name,\n                message: error.message\n              });\n            });\n          }\n        }).catch(function (error) {\n          pluginHandle.consentDialog(false);\n          callbacks.error(error);\n        });\n      }\n    } else {\n      // No need to do a getUserMedia, create offer/answer right away\n      streamsDone(handleId, jsep, media, callbacks);\n    }\n  }\n\n  function prepareWebrtcPeer(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : webrtcError;\n    callbacks.customizeSdp = typeof callbacks.customizeSdp == \"function\" ? callbacks.customizeSdp : Janus.noop;\n    var jsep = callbacks.jsep;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (jsep) {\n      if (!config.pc) {\n        Janus.warn(\"Wait, no PeerConnection?? if this is an answer, use createAnswer and not handleRemoteJsep\");\n        callbacks.error(\"No PeerConnection: if this is an answer, use createAnswer and not handleRemoteJsep\");\n        return;\n      }\n\n      callbacks.customizeSdp(jsep);\n      config.pc.setRemoteDescription(jsep).then(function () {\n        Janus.log(\"Remote description accepted!\");\n        config.remoteSdp = jsep.sdp; // Any trickle candidate we cached?\n\n        if (config.candidates && config.candidates.length > 0) {\n          for (var i = 0; i < config.candidates.length; i++) {\n            var candidate = config.candidates[i];\n            Janus.debug(\"Adding remote candidate:\", candidate);\n\n            if (!candidate || candidate.completed === true) {\n              // end-of-candidates\n              config.pc.addIceCandidate(Janus.endOfCandidates);\n            } else {\n              // New candidate\n              config.pc.addIceCandidate(candidate);\n            }\n          }\n\n          config.candidates = [];\n        } // Done\n\n\n        callbacks.success();\n      }, callbacks.error);\n    } else {\n      callbacks.error(\"Invalid JSEP\");\n    }\n  }\n\n  function createOffer(handleId, media, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    callbacks.customizeSdp = typeof callbacks.customizeSdp == \"function\" ? callbacks.customizeSdp : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    var simulcast = callbacks.simulcast === true;\n\n    if (!simulcast) {\n      Janus.log(\"Creating offer (iceDone=\" + config.iceDone + \")\");\n    } else {\n      Janus.log(\"Creating offer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n    } // https://code.google.com/p/webrtc/issues/detail?id=3508\n\n\n    var mediaConstraints = {};\n\n    if (Janus.unifiedPlan) {\n      // We can use Transceivers\n      var audioTransceiver = null,\n          videoTransceiver = null;\n      var transceivers = config.pc.getTransceivers();\n\n      if (transceivers && transceivers.length > 0) {\n        for (var t of transceivers) {\n          if (t.sender && t.sender.track && t.sender.track.kind === \"audio\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\") {\n            if (!audioTransceiver) {\n              audioTransceiver = t;\n            }\n\n            continue;\n          }\n\n          if (t.sender && t.sender.track && t.sender.track.kind === \"video\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"video\") {\n            if (!videoTransceiver) {\n              videoTransceiver = t;\n            }\n\n            continue;\n          }\n        }\n      } // Handle audio (and related changes, if any)\n\n\n      var audioSend = isAudioSendEnabled(media);\n      var audioRecv = isAudioRecvEnabled(media);\n\n      if (!audioSend && !audioRecv) {\n        // Audio disabled: have we removed it?\n        if (media.removeAudio && audioTransceiver) {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection(\"inactive\");\n          } else {\n            audioTransceiver.direction = \"inactive\";\n          }\n\n          Janus.log(\"Setting audio transceiver to inactive:\", audioTransceiver);\n        }\n      } else {\n        // Take care of audio m-line\n        if (audioSend && audioRecv) {\n          if (audioTransceiver) {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection(\"sendrecv\");\n            } else {\n              audioTransceiver.direction = \"sendrecv\";\n            }\n\n            Janus.log(\"Setting audio transceiver to sendrecv:\", audioTransceiver);\n          }\n        } else if (audioSend && !audioRecv) {\n          if (audioTransceiver) {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection(\"sendonly\");\n            } else {\n              audioTransceiver.direction = \"sendonly\";\n            }\n\n            Janus.log(\"Setting audio transceiver to sendonly:\", audioTransceiver);\n          }\n        } else if (!audioSend && audioRecv) {\n          if (audioTransceiver) {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection(\"recvonly\");\n            } else {\n              audioTransceiver.direction = \"recvonly\";\n            }\n\n            Janus.log(\"Setting audio transceiver to recvonly:\", audioTransceiver);\n          } else {\n            // In theory, this is the only case where we might not have a transceiver yet\n            audioTransceiver = config.pc.addTransceiver(\"audio\", {\n              direction: \"recvonly\"\n            });\n            Janus.log(\"Adding recvonly audio transceiver:\", audioTransceiver);\n          }\n        }\n      } // Handle video (and related changes, if any)\n\n\n      var videoSend = isVideoSendEnabled(media);\n      var videoRecv = isVideoRecvEnabled(media);\n\n      if (!videoSend && !videoRecv) {\n        // Video disabled: have we removed it?\n        if (media.removeVideo && videoTransceiver) {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection(\"inactive\");\n          } else {\n            videoTransceiver.direction = \"inactive\";\n          }\n\n          Janus.log(\"Setting video transceiver to inactive:\", videoTransceiver);\n        }\n      } else {\n        // Take care of video m-line\n        if (videoSend && videoRecv) {\n          if (videoTransceiver) {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection(\"sendrecv\");\n            } else {\n              videoTransceiver.direction = \"sendrecv\";\n            }\n\n            Janus.log(\"Setting video transceiver to sendrecv:\", videoTransceiver);\n          }\n        } else if (videoSend && !videoRecv) {\n          if (videoTransceiver) {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection(\"sendonly\");\n            } else {\n              videoTransceiver.direction = \"sendonly\";\n            }\n\n            Janus.log(\"Setting video transceiver to sendonly:\", videoTransceiver);\n          }\n        } else if (!videoSend && videoRecv) {\n          if (videoTransceiver) {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection(\"recvonly\");\n            } else {\n              videoTransceiver.direction = \"recvonly\";\n            }\n\n            Janus.log(\"Setting video transceiver to recvonly:\", videoTransceiver);\n          } else {\n            // In theory, this is the only case where we might not have a transceiver yet\n            videoTransceiver = config.pc.addTransceiver(\"video\", {\n              direction: \"recvonly\"\n            });\n            Janus.log(\"Adding recvonly video transceiver:\", videoTransceiver);\n          }\n        }\n      }\n    } else {\n      mediaConstraints[\"offerToReceiveAudio\"] = isAudioRecvEnabled(media);\n      mediaConstraints[\"offerToReceiveVideo\"] = isVideoRecvEnabled(media);\n    }\n\n    var iceRestart = callbacks.iceRestart === true;\n\n    if (iceRestart) {\n      mediaConstraints[\"iceRestart\"] = true;\n    }\n\n    Janus.debug(mediaConstraints); // Check if this is Firefox and we've been asked to do simulcasting\n\n    var sendVideo = isVideoSendEnabled(media);\n\n    if (sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n      // FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n      Janus.log(\"Enabling Simulcasting for Firefox (RID)\");\n      var sender = config.pc.getSenders().find(function (s) {\n        return s.track && s.track.kind === \"video\";\n      });\n\n      if (sender) {\n        var parameters = sender.getParameters();\n\n        if (!parameters) {\n          parameters = {};\n        }\n\n        var maxBitrates = getMaxBitrates(callbacks.simulcastMaxBitrates);\n        parameters.encodings = callbacks.sendEncodings || [{\n          rid: \"h\",\n          active: true,\n          maxBitrate: maxBitrates.high\n        }, {\n          rid: \"m\",\n          active: true,\n          maxBitrate: maxBitrates.medium,\n          scaleResolutionDownBy: 2\n        }, {\n          rid: \"l\",\n          active: true,\n          maxBitrate: maxBitrates.low,\n          scaleResolutionDownBy: 4\n        }];\n        sender.setParameters(parameters);\n      }\n    }\n\n    config.pc.createOffer(mediaConstraints).then(function (offer) {\n      Janus.debug(offer); // JSON.stringify doesn't work on some WebRTC objects anymore\n      // See https://code.google.com/p/chromium/issues/detail?id=467366\n\n      var jsep = {\n        \"type\": offer.type,\n        \"sdp\": offer.sdp\n      };\n      callbacks.customizeSdp(jsep);\n      offer.sdp = jsep.sdp;\n      Janus.log(\"Setting local description\");\n\n      if (sendVideo && simulcast) {\n        // This SDP munging only works with Chrome (Safari STP may support it too)\n        if (Janus.webRTCAdapter.browserDetails.browser === \"chrome\" || Janus.webRTCAdapter.browserDetails.browser === \"safari\") {\n          Janus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n          offer.sdp = mungeSdpForSimulcasting(offer.sdp);\n        } else if (Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n          Janus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n        }\n      }\n\n      config.mySdp = {\n        type: \"offer\",\n        sdp: offer.sdp\n      };\n      config.pc.setLocalDescription(offer).catch(callbacks.error);\n      config.mediaConstraints = mediaConstraints;\n\n      if (!config.iceDone && !config.trickle) {\n        // Don't do anything until we have all candidates\n        Janus.log(\"Waiting for all candidates...\");\n        return;\n      } // If transforms are present, notify Janus that the media is end-to-end encrypted\n\n\n      if (config.senderTransforms || config.receiverTransforms) {\n        offer[\"e2ee\"] = true;\n      }\n\n      callbacks.success(offer);\n    }, callbacks.error);\n  }\n\n  function createAnswer(handleId, media, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    callbacks.customizeSdp = typeof callbacks.customizeSdp == \"function\" ? callbacks.customizeSdp : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    var simulcast = callbacks.simulcast === true;\n\n    if (!simulcast) {\n      Janus.log(\"Creating answer (iceDone=\" + config.iceDone + \")\");\n    } else {\n      Janus.log(\"Creating answer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n    }\n\n    var mediaConstraints = null;\n\n    if (Janus.unifiedPlan) {\n      // We can use Transceivers\n      mediaConstraints = {};\n      var audioTransceiver = null,\n          videoTransceiver = null;\n      var transceivers = config.pc.getTransceivers();\n\n      if (transceivers && transceivers.length > 0) {\n        for (var t of transceivers) {\n          if (t.sender && t.sender.track && t.sender.track.kind === \"audio\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\") {\n            if (!audioTransceiver) audioTransceiver = t;\n            continue;\n          }\n\n          if (t.sender && t.sender.track && t.sender.track.kind === \"video\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"video\") {\n            if (!videoTransceiver) videoTransceiver = t;\n            continue;\n          }\n        }\n      } // Handle audio (and related changes, if any)\n\n\n      var audioSend = isAudioSendEnabled(media);\n      var audioRecv = isAudioRecvEnabled(media);\n\n      if (!audioSend && !audioRecv) {\n        // Audio disabled: have we removed it?\n        if (media.removeAudio && audioTransceiver) {\n          try {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection(\"inactive\");\n            } else {\n              audioTransceiver.direction = \"inactive\";\n            }\n\n            Janus.log(\"Setting audio transceiver to inactive:\", audioTransceiver);\n          } catch (e) {\n            Janus.error(e);\n          }\n        }\n      } else {\n        // Take care of audio m-line\n        if (audioSend && audioRecv) {\n          if (audioTransceiver) {\n            try {\n              if (audioTransceiver.setDirection) {\n                audioTransceiver.setDirection(\"sendrecv\");\n              } else {\n                audioTransceiver.direction = \"sendrecv\";\n              }\n\n              Janus.log(\"Setting audio transceiver to sendrecv:\", audioTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          }\n        } else if (audioSend && !audioRecv) {\n          try {\n            if (audioTransceiver) {\n              if (audioTransceiver.setDirection) {\n                audioTransceiver.setDirection(\"sendonly\");\n              } else {\n                audioTransceiver.direction = \"sendonly\";\n              }\n\n              Janus.log(\"Setting audio transceiver to sendonly:\", audioTransceiver);\n            }\n          } catch (e) {\n            Janus.error(e);\n          }\n        } else if (!audioSend && audioRecv) {\n          if (audioTransceiver) {\n            try {\n              if (audioTransceiver.setDirection) {\n                audioTransceiver.setDirection(\"recvonly\");\n              } else {\n                audioTransceiver.direction = \"recvonly\";\n              }\n\n              Janus.log(\"Setting audio transceiver to recvonly:\", audioTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          } else {\n            // In theory, this is the only case where we might not have a transceiver yet\n            audioTransceiver = config.pc.addTransceiver(\"audio\", {\n              direction: \"recvonly\"\n            });\n            Janus.log(\"Adding recvonly audio transceiver:\", audioTransceiver);\n          }\n        }\n      } // Handle video (and related changes, if any)\n\n\n      var videoSend = isVideoSendEnabled(media);\n      var videoRecv = isVideoRecvEnabled(media);\n\n      if (!videoSend && !videoRecv) {\n        // Video disabled: have we removed it?\n        if (media.removeVideo && videoTransceiver) {\n          try {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection(\"inactive\");\n            } else {\n              videoTransceiver.direction = \"inactive\";\n            }\n\n            Janus.log(\"Setting video transceiver to inactive:\", videoTransceiver);\n          } catch (e) {\n            Janus.error(e);\n          }\n        }\n      } else {\n        // Take care of video m-line\n        if (videoSend && videoRecv) {\n          if (videoTransceiver) {\n            try {\n              if (videoTransceiver.setDirection) {\n                videoTransceiver.setDirection(\"sendrecv\");\n              } else {\n                videoTransceiver.direction = \"sendrecv\";\n              }\n\n              Janus.log(\"Setting video transceiver to sendrecv:\", videoTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          }\n        } else if (videoSend && !videoRecv) {\n          if (videoTransceiver) {\n            try {\n              if (videoTransceiver.setDirection) {\n                videoTransceiver.setDirection(\"sendonly\");\n              } else {\n                videoTransceiver.direction = \"sendonly\";\n              }\n\n              Janus.log(\"Setting video transceiver to sendonly:\", videoTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          }\n        } else if (!videoSend && videoRecv) {\n          if (videoTransceiver) {\n            try {\n              if (videoTransceiver.setDirection) {\n                videoTransceiver.setDirection(\"recvonly\");\n              } else {\n                videoTransceiver.direction = \"recvonly\";\n              }\n\n              Janus.log(\"Setting video transceiver to recvonly:\", videoTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          } else {\n            // In theory, this is the only case where we might not have a transceiver yet\n            videoTransceiver = config.pc.addTransceiver(\"video\", {\n              direction: \"recvonly\"\n            });\n            Janus.log(\"Adding recvonly video transceiver:\", videoTransceiver);\n          }\n        }\n      }\n    } else {\n      if (Janus.webRTCAdapter.browserDetails.browser === \"firefox\" || Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n        mediaConstraints = {\n          offerToReceiveAudio: isAudioRecvEnabled(media),\n          offerToReceiveVideo: isVideoRecvEnabled(media)\n        };\n      } else {\n        mediaConstraints = {\n          mandatory: {\n            OfferToReceiveAudio: isAudioRecvEnabled(media),\n            OfferToReceiveVideo: isVideoRecvEnabled(media)\n          }\n        };\n      }\n    }\n\n    Janus.debug(mediaConstraints); // Check if this is Firefox and we've been asked to do simulcasting\n\n    var sendVideo = isVideoSendEnabled(media);\n\n    if (sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n      // FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n      Janus.log(\"Enabling Simulcasting for Firefox (RID)\");\n      var sender = config.pc.getSenders()[1];\n      Janus.log(sender);\n      var parameters = sender.getParameters();\n      Janus.log(parameters);\n      var maxBitrates = getMaxBitrates(callbacks.simulcastMaxBitrates);\n      sender.setParameters({\n        encodings: callbacks.sendEncodings || [{\n          rid: \"h\",\n          active: true,\n          maxBitrate: maxBitrates.high\n        }, {\n          rid: \"m\",\n          active: true,\n          maxBitrate: maxBitrates.medium,\n          scaleResolutionDownBy: 2\n        }, {\n          rid: \"l\",\n          active: true,\n          maxBitrate: maxBitrates.low,\n          scaleResolutionDownBy: 4\n        }]\n      });\n    }\n\n    config.pc.createAnswer(mediaConstraints).then(function (answer) {\n      Janus.debug(answer); // JSON.stringify doesn't work on some WebRTC objects anymore\n      // See https://code.google.com/p/chromium/issues/detail?id=467366\n\n      var jsep = {\n        \"type\": answer.type,\n        \"sdp\": answer.sdp\n      };\n      callbacks.customizeSdp(jsep);\n      answer.sdp = jsep.sdp;\n      Janus.log(\"Setting local description\");\n\n      if (sendVideo && simulcast) {\n        // This SDP munging only works with Chrome\n        if (Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n          // FIXME Apparently trying to simulcast when answering breaks video in Chrome...\n          //~ Janus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n          //~ answer.sdp = mungeSdpForSimulcasting(answer.sdp);\n          Janus.warn(\"simulcast=true, but this is an answer, and video breaks in Chrome if we enable it\");\n        } else if (Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n          Janus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n        }\n      }\n\n      config.mySdp = {\n        type: \"answer\",\n        sdp: answer.sdp\n      };\n      config.pc.setLocalDescription(answer).catch(callbacks.error);\n      config.mediaConstraints = mediaConstraints;\n\n      if (!config.iceDone && !config.trickle) {\n        // Don't do anything until we have all candidates\n        Janus.log(\"Waiting for all candidates...\");\n        return;\n      } // If transforms are present, notify Janus that the media is end-to-end encrypted\n\n\n      if (config.senderTransforms || config.receiverTransforms) {\n        answer[\"e2ee\"] = true;\n      }\n\n      callbacks.success(answer);\n    }, callbacks.error);\n  }\n\n  function sendSDP(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle, not sending anything\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    Janus.log(\"Sending offer/answer SDP...\");\n\n    if (!config.mySdp) {\n      Janus.warn(\"Local SDP instance is invalid, not sending anything...\");\n      return;\n    }\n\n    config.mySdp = {\n      \"type\": config.pc.localDescription.type,\n      \"sdp\": config.pc.localDescription.sdp\n    };\n    if (config.trickle === false) config.mySdp[\"trickle\"] = false;\n    Janus.debug(callbacks);\n    config.sdpSent = true;\n    callbacks.success(config.mySdp);\n  }\n\n  function getVolume(handleId, remote) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return 0;\n    }\n\n    var stream = remote ? \"remote\" : \"local\";\n    var config = pluginHandle.webrtcStuff;\n    if (!config.volume[stream]) config.volume[stream] = {\n      value: 0\n    }; // Start getting the volume, if audioLevel in getStats is supported (apparently\n    // they're only available in Chrome/Safari right now: https://webrtc-stats.callstats.io/)\n\n    if (config.pc.getStats && (Janus.webRTCAdapter.browserDetails.browser === \"chrome\" || Janus.webRTCAdapter.browserDetails.browser === \"safari\")) {\n      if (remote && !config.remoteStream) {\n        Janus.warn(\"Remote stream unavailable\");\n        return 0;\n      } else if (!remote && !config.myStream) {\n        Janus.warn(\"Local stream unavailable\");\n        return 0;\n      }\n\n      if (!config.volume[stream].timer) {\n        Janus.log(\"Starting \" + stream + \" volume monitor\");\n        config.volume[stream].timer = setInterval(function () {\n          config.pc.getStats().then(function (stats) {\n            stats.forEach(function (res) {\n              if (!res || res.kind !== \"audio\") return;\n              if (remote && !res.remoteSource || !remote && res.type !== \"media-source\") return;\n              config.volume[stream].value = res.audioLevel ? res.audioLevel : 0;\n            });\n          });\n        }, 200);\n        return 0; // We don't have a volume to return yet\n      }\n\n      return config.volume[stream].value;\n    } else {\n      // audioInputLevel and audioOutputLevel seem only available in Chrome? audioLevel\n      // seems to be available on Chrome and Firefox, but they don't seem to work\n      Janus.warn(\"Getting the \" + stream + \" volume unsupported by browser\");\n      return 0;\n    }\n  }\n\n  function isMuted(handleId, video) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return true;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (!config.pc) {\n      Janus.warn(\"Invalid PeerConnection\");\n      return true;\n    }\n\n    if (!config.myStream) {\n      Janus.warn(\"Invalid local MediaStream\");\n      return true;\n    }\n\n    if (video) {\n      // Check video track\n      if (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n        Janus.warn(\"No video track\");\n        return true;\n      }\n\n      return !config.myStream.getVideoTracks()[0].enabled;\n    } else {\n      // Check audio track\n      if (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n        Janus.warn(\"No audio track\");\n        return true;\n      }\n\n      return !config.myStream.getAudioTracks()[0].enabled;\n    }\n  }\n\n  function mute(handleId, video, mute) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return false;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (!config.pc) {\n      Janus.warn(\"Invalid PeerConnection\");\n      return false;\n    }\n\n    if (!config.myStream) {\n      Janus.warn(\"Invalid local MediaStream\");\n      return false;\n    }\n\n    if (video) {\n      // Mute/unmute video track\n      if (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n        Janus.warn(\"No video track\");\n        return false;\n      }\n\n      config.myStream.getVideoTracks()[0].enabled = !mute;\n      return true;\n    } else {\n      // Mute/unmute audio track\n      if (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n        Janus.warn(\"No audio track\");\n        return false;\n      }\n\n      config.myStream.getAudioTracks()[0].enabled = !mute;\n      return true;\n    }\n  }\n\n  function getBitrate(handleId) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return \"Invalid handle\";\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    if (!config.pc) return \"Invalid PeerConnection\"; // Start getting the bitrate, if getStats is supported\n\n    if (config.pc.getStats) {\n      if (!config.bitrate.timer) {\n        Janus.log(\"Starting bitrate timer (via getStats)\");\n        config.bitrate.timer = setInterval(function () {\n          config.pc.getStats().then(function (stats) {\n            stats.forEach(function (res) {\n              if (!res) return;\n              var inStats = false; // Check if these are statistics on incoming media\n\n              if ((res.mediaType === \"video\" || res.id.toLowerCase().indexOf(\"video\") > -1) && res.type === \"inbound-rtp\" && res.id.indexOf(\"rtcp\") < 0) {\n                // New stats\n                inStats = true;\n              } else if (res.type == 'ssrc' && res.bytesReceived && (res.googCodecName === \"VP8\" || res.googCodecName === \"\")) {\n                // Older Chromer versions\n                inStats = true;\n              } // Parse stats now\n\n\n              if (inStats) {\n                config.bitrate.bsnow = res.bytesReceived;\n                config.bitrate.tsnow = res.timestamp;\n\n                if (config.bitrate.bsbefore === null || config.bitrate.tsbefore === null) {\n                  // Skip this round\n                  config.bitrate.bsbefore = config.bitrate.bsnow;\n                  config.bitrate.tsbefore = config.bitrate.tsnow;\n                } else {\n                  // Calculate bitrate\n                  var timePassed = config.bitrate.tsnow - config.bitrate.tsbefore;\n                  if (Janus.webRTCAdapter.browserDetails.browser === \"safari\") timePassed = timePassed / 1000; // Apparently the timestamp is in microseconds, in Safari\n\n                  var bitRate = Math.round((config.bitrate.bsnow - config.bitrate.bsbefore) * 8 / timePassed);\n                  if (Janus.webRTCAdapter.browserDetails.browser === \"safari\") bitRate = parseInt(bitRate / 1000);\n                  config.bitrate.value = bitRate + ' kbits/sec'; //~ Janus.log(\"Estimated bitrate is \" + config.bitrate.value);\n\n                  config.bitrate.bsbefore = config.bitrate.bsnow;\n                  config.bitrate.tsbefore = config.bitrate.tsnow;\n                }\n              }\n            });\n          });\n        }, 1000);\n        return \"0 kbits/sec\"; // We don't have a bitrate value yet\n      }\n\n      return config.bitrate.value;\n    } else {\n      Janus.warn(\"Getting the video bitrate unsupported by browser\");\n      return \"Feature unsupported by browser\";\n    }\n  }\n\n  function webrtcError(error) {\n    Janus.error(\"WebRTC error:\", error);\n  }\n\n  function cleanupWebrtc(handleId, hangupRequest) {\n    Janus.log(\"Cleaning WebRTC stuff\");\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle) {\n      // Nothing to clean\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (config) {\n      if (hangupRequest === true) {\n        // Send a hangup request (we don't really care about the response)\n        var request = {\n          \"janus\": \"hangup\",\n          \"transaction\": Janus.randomString(12)\n        };\n        if (pluginHandle.token) request[\"token\"] = pluginHandle.token;\n        if (apisecret) request[\"apisecret\"] = apisecret;\n        Janus.debug(\"Sending hangup request (handle=\" + handleId + \"):\");\n        Janus.debug(request);\n\n        if (websockets) {\n          request[\"session_id\"] = sessionId;\n          request[\"handle_id\"] = handleId;\n          ws.send(JSON.stringify(request));\n        } else {\n          Janus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n            verb: 'POST',\n            withCredentials: withCredentials,\n            body: request\n          });\n        }\n      } // Cleanup stack\n\n\n      config.remoteStream = null;\n\n      if (config.volume) {\n        if (config.volume[\"local\"] && config.volume[\"local\"].timer) clearInterval(config.volume[\"local\"].timer);\n        if (config.volume[\"remote\"] && config.volume[\"remote\"].timer) clearInterval(config.volume[\"remote\"].timer);\n      }\n\n      config.volume = {};\n      if (config.bitrate.timer) clearInterval(config.bitrate.timer);\n      config.bitrate.timer = null;\n      config.bitrate.bsnow = null;\n      config.bitrate.bsbefore = null;\n      config.bitrate.tsnow = null;\n      config.bitrate.tsbefore = null;\n      config.bitrate.value = null;\n\n      if (!config.streamExternal && config.myStream) {\n        Janus.log(\"Stopping local stream tracks\");\n        Janus.stopAllTracks(config.myStream);\n      }\n\n      config.streamExternal = false;\n      config.myStream = null; // Close PeerConnection\n\n      try {\n        config.pc.close();\n      } catch (e) {// Do nothing\n      }\n\n      config.pc = null;\n      config.candidates = null;\n      config.mySdp = null;\n      config.remoteSdp = null;\n      config.iceDone = false;\n      config.dataChannel = {};\n      config.dtmfSender = null;\n      config.senderTransforms = null;\n      config.receiverTransforms = null;\n    }\n\n    pluginHandle.oncleanup();\n  } // Helper method to munge an SDP to enable simulcasting (Chrome only)\n\n\n  function mungeSdpForSimulcasting(sdp) {\n    // Let's munge the SDP to add the attributes for enabling simulcasting\n    // (based on https://gist.github.com/ggarber/a19b4c33510028b9c657)\n    var lines = sdp.split(\"\\r\\n\");\n    var video = false;\n    var ssrc = [-1],\n        ssrc_fid = [-1];\n    var cname = null,\n        msid = null,\n        mslabel = null,\n        label = null;\n    var insertAt = -1;\n\n    for (var i = 0; i < lines.length; i++) {\n      var mline = lines[i].match(/m=(\\w+) */);\n\n      if (mline) {\n        var medium = mline[1];\n\n        if (medium === \"video\") {\n          // New video m-line: make sure it's the first one\n          if (ssrc[0] < 0) {\n            video = true;\n          } else {\n            // We're done, let's add the new attributes here\n            insertAt = i;\n            break;\n          }\n        } else {\n          // New non-video m-line: do we have what we were looking for?\n          if (ssrc[0] > -1) {\n            // We're done, let's add the new attributes here\n            insertAt = i;\n            break;\n          }\n        }\n\n        continue;\n      }\n\n      if (!video) continue;\n      var sim = lines[i].match(/a=ssrc-group:SIM (\\d+) (\\d+) (\\d+)/);\n\n      if (sim) {\n        Janus.warn(\"The SDP already contains a SIM attribute, munging will be skipped\");\n        return sdp;\n      }\n\n      var fid = lines[i].match(/a=ssrc-group:FID (\\d+) (\\d+)/);\n\n      if (fid) {\n        ssrc[0] = fid[1];\n        ssrc_fid[0] = fid[2];\n        lines.splice(i, 1);\n        i--;\n        continue;\n      }\n\n      if (ssrc[0]) {\n        var match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)');\n\n        if (match) {\n          cname = match[1];\n        }\n\n        match = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)');\n\n        if (match) {\n          msid = match[1];\n        }\n\n        match = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)');\n\n        if (match) {\n          mslabel = match[1];\n        }\n\n        match = lines[i].match('a=ssrc:' + ssrc[0] + ' label:(.+)');\n\n        if (match) {\n          label = match[1];\n        }\n\n        if (lines[i].indexOf('a=ssrc:' + ssrc_fid[0]) === 0) {\n          lines.splice(i, 1);\n          i--;\n          continue;\n        }\n\n        if (lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n          lines.splice(i, 1);\n          i--;\n          continue;\n        }\n      }\n\n      if (lines[i].length == 0) {\n        lines.splice(i, 1);\n        i--;\n        continue;\n      }\n    }\n\n    if (ssrc[0] < 0) {\n      // Couldn't find a FID attribute, let's just take the first video SSRC we find\n      insertAt = -1;\n      video = false;\n\n      for (var i = 0; i < lines.length; i++) {\n        var mline = lines[i].match(/m=(\\w+) */);\n\n        if (mline) {\n          var medium = mline[1];\n\n          if (medium === \"video\") {\n            // New video m-line: make sure it's the first one\n            if (ssrc[0] < 0) {\n              video = true;\n            } else {\n              // We're done, let's add the new attributes here\n              insertAt = i;\n              break;\n            }\n          } else {\n            // New non-video m-line: do we have what we were looking for?\n            if (ssrc[0] > -1) {\n              // We're done, let's add the new attributes here\n              insertAt = i;\n              break;\n            }\n          }\n\n          continue;\n        }\n\n        if (!video) continue;\n\n        if (ssrc[0] < 0) {\n          var value = lines[i].match(/a=ssrc:(\\d+)/);\n\n          if (value) {\n            ssrc[0] = value[1];\n            lines.splice(i, 1);\n            i--;\n            continue;\n          }\n        } else {\n          var match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)');\n\n          if (match) {\n            cname = match[1];\n          }\n\n          match = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)');\n\n          if (match) {\n            msid = match[1];\n          }\n\n          match = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)');\n\n          if (match) {\n            mslabel = match[1];\n          }\n\n          match = lines[i].match('a=ssrc:' + ssrc[0] + ' label:(.+)');\n\n          if (match) {\n            label = match[1];\n          }\n\n          if (lines[i].indexOf('a=ssrc:' + ssrc_fid[0]) === 0) {\n            lines.splice(i, 1);\n            i--;\n            continue;\n          }\n\n          if (lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n            lines.splice(i, 1);\n            i--;\n            continue;\n          }\n        }\n\n        if (lines[i].length === 0) {\n          lines.splice(i, 1);\n          i--;\n          continue;\n        }\n      }\n    }\n\n    if (ssrc[0] < 0) {\n      // Still nothing, let's just return the SDP we were asked to munge\n      Janus.warn(\"Couldn't find the video SSRC, simulcasting NOT enabled\");\n      return sdp;\n    }\n\n    if (insertAt < 0) {\n      // Append at the end\n      insertAt = lines.length;\n    } // Generate a couple of SSRCs (for retransmissions too)\n    // Note: should we check if there are conflicts, here?\n\n\n    ssrc[1] = Math.floor(Math.random() * 0xFFFFFFFF);\n    ssrc[2] = Math.floor(Math.random() * 0xFFFFFFFF);\n    ssrc_fid[1] = Math.floor(Math.random() * 0xFFFFFFFF);\n    ssrc_fid[2] = Math.floor(Math.random() * 0xFFFFFFFF); // Add attributes to the SDP\n\n    for (var i = 0; i < ssrc.length; i++) {\n      if (cname) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' cname:' + cname);\n        insertAt++;\n      }\n\n      if (msid) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' msid:' + msid);\n        insertAt++;\n      }\n\n      if (mslabel) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' mslabel:' + mslabel);\n        insertAt++;\n      }\n\n      if (label) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' label:' + label);\n        insertAt++;\n      } // Add the same info for the retransmission SSRC\n\n\n      if (cname) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' cname:' + cname);\n        insertAt++;\n      }\n\n      if (msid) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' msid:' + msid);\n        insertAt++;\n      }\n\n      if (mslabel) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' mslabel:' + mslabel);\n        insertAt++;\n      }\n\n      if (label) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' label:' + label);\n        insertAt++;\n      }\n    }\n\n    lines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[2] + ' ' + ssrc_fid[2]);\n    lines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[1] + ' ' + ssrc_fid[1]);\n    lines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[0] + ' ' + ssrc_fid[0]);\n    lines.splice(insertAt, 0, 'a=ssrc-group:SIM ' + ssrc[0] + ' ' + ssrc[1] + ' ' + ssrc[2]);\n    sdp = lines.join(\"\\r\\n\");\n    if (!sdp.endsWith(\"\\r\\n\")) sdp += \"\\r\\n\";\n    return sdp;\n  } // Helper methods to parse a media object\n\n\n  function isAudioSendEnabled(media) {\n    Janus.debug(\"isAudioSendEnabled:\", media);\n    if (!media) return true; // Default\n\n    if (media.audio === false) return false; // Generic audio has precedence\n\n    if (media.audioSend === undefined || media.audioSend === null) return true; // Default\n\n    return media.audioSend === true;\n  }\n\n  function isAudioSendRequired(media) {\n    Janus.debug(\"isAudioSendRequired:\", media);\n    if (!media) return false; // Default\n\n    if (media.audio === false || media.audioSend === false) return false; // If we're not asking to capture audio, it's not required\n\n    if (media.failIfNoAudio === undefined || media.failIfNoAudio === null) return false; // Default\n\n    return media.failIfNoAudio === true;\n  }\n\n  function isAudioRecvEnabled(media) {\n    Janus.debug(\"isAudioRecvEnabled:\", media);\n    if (!media) return true; // Default\n\n    if (media.audio === false) return false; // Generic audio has precedence\n\n    if (media.audioRecv === undefined || media.audioRecv === null) return true; // Default\n\n    return media.audioRecv === true;\n  }\n\n  function isVideoSendEnabled(media) {\n    Janus.debug(\"isVideoSendEnabled:\", media);\n    if (!media) return true; // Default\n\n    if (media.video === false) return false; // Generic video has precedence\n\n    if (media.videoSend === undefined || media.videoSend === null) return true; // Default\n\n    return media.videoSend === true;\n  }\n\n  function isVideoSendRequired(media) {\n    Janus.debug(\"isVideoSendRequired:\", media);\n    if (!media) return false; // Default\n\n    if (media.video === false || media.videoSend === false) return false; // If we're not asking to capture video, it's not required\n\n    if (media.failIfNoVideo === undefined || media.failIfNoVideo === null) return false; // Default\n\n    return media.failIfNoVideo === true;\n  }\n\n  function isVideoRecvEnabled(media) {\n    Janus.debug(\"isVideoRecvEnabled:\", media);\n    if (!media) return true; // Default\n\n    if (media.video === false) return false; // Generic video has precedence\n\n    if (media.videoRecv === undefined || media.videoRecv === null) return true; // Default\n\n    return media.videoRecv === true;\n  }\n\n  function isScreenSendEnabled(media) {\n    Janus.debug(\"isScreenSendEnabled:\", media);\n    if (!media) return false;\n    if (typeof media.video !== 'object' || typeof media.video.mandatory !== 'object') return false;\n    var constraints = media.video.mandatory;\n    if (constraints.chromeMediaSource) return constraints.chromeMediaSource === 'desktop' || constraints.chromeMediaSource === 'screen';else if (constraints.mozMediaSource) return constraints.mozMediaSource === 'window' || constraints.mozMediaSource === 'screen';else if (constraints.mediaSource) return constraints.mediaSource === 'window' || constraints.mediaSource === 'screen';\n    return false;\n  }\n\n  function isDataEnabled(media) {\n    Janus.debug(\"isDataEnabled:\", media);\n\n    if (Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n      Janus.warn(\"Edge doesn't support data channels yet\");\n      return false;\n    }\n\n    if (media === undefined || media === null) return false; // Default\n\n    return media.data === true;\n  }\n\n  function isTrickleEnabled(trickle) {\n    Janus.debug(\"isTrickleEnabled:\", trickle);\n    return trickle === false ? false : true;\n  }\n}\n\n_c = Janus;\nexport default Janus;\n\nvar _c;\n\n$RefreshReg$(_c, \"Janus\");","map":{"version":3,"sources":["/home/abu/Documents/dev/experiments/exp1/client/src/components/home/janus.js"],"names":["adapter","$","RTCRtpTransceiver","window","Janus","sessions","isExtensionEnabled","navigator","mediaDevices","getDisplayMedia","userAgent","match","chromever","parseInt","maxver","extension","isInstalled","defaultExtension","extensionId","document","querySelector","getScreen","callback","pending","setTimeout","error","Error","name","cache","postMessage","type","id","init","addEventListener","event","origin","location","data","sourceId","console","log","clearTimeout","usageDefaultDependencies","deps","f","fetch","p","Promise","socketCls","WebSocket","newWebSocket","server","proto","isArray","arr","Array","webRTCAdapter","httpAPICall","url","options","fetchOptions","method","verb","headers","withCredentials","undefined","credentials","body","JSON","stringify","fetching","catch","reject","message","timeout","resolve","timerId","race","then","response","ok","success","noop","json","parsed","useOldDependencies","jq","payload","contentType","xhrFields","ajax","extend","dataType","async","result","xhr","status","err","dataChanDefaultLabel","endOfCandidates","stopAllTracks","stream","tracks","getTracks","mst","stop","e","initDone","trace","debug","vdebug","warn","bind","d","usedDependencies","dependencies","listDevices","config","audio","video","isGetUserMediaAvailable","getUserMedia","enumerateDevices","devices","attachMediaStream","element","srcObject","src","URL","createObjectURL","reattachMediaStream","to","from","iOS","indexOf","platform","eventName","oldOBF","s","destroyOnUnload","destroy","unload","notifyDestroyed","safariVp8","browserDetails","browser","version","RTCRtpSender","getCapabilities","codecs","length","codec","mimeType","toLowerCase","testpc","RTCPeerConnection","createOffer","offerToReceiveVideo","offer","sdp","close","unifiedPlan","tempPc","addTransceiver","isWebrtcSupported","randomString","len","charSet","i","randomPoz","Math","floor","random","substring","gatewayCallbacks","destroyed","websockets","ws","wsHandlers","wsKeepaliveTimeoutId","servers","serversIndex","iceServers","urls","iceTransportPolicy","bundlePolicy","ipv6Support","ipv6","maxev","max_poll_events","token","apisecret","keepAlivePeriod","isNaN","longPollTimeout","getMaxBitrates","simulcastMaxBitrates","maxBitrates","high","medium","low","connected","sessionId","pluginHandles","that","retries","transactions","createSession","getServer","isConnected","reconnect","callbacks","getSessionId","getInfo","destroySession","attach","createHandle","eventHandler","longpoll","Date","getTime","encodeURIComponent","handleEvent","textStatus","errorThrown","skipTimeout","transaction","reportSuccess","sender","pluginHandle","candidate","webrtcStuff","pc","remoteSdp","completed","addIceCandidate","candidates","push","webrtcState","hangup","ondetached","detach","mediaState","slowLink","code","reason","plugindata","jsep","onmessage","keepAlive","request","send","onopen","onerror","onclose","parse","cleanupHandles","handleId","destroyHandle","noRequest","sendBeacon","unbindWebSocket","removeEventListener","onUnbindMessage","onUnbindError","session_id","readyState","consentDialog","iceState","onlocalstream","onremotestream","ondata","ondataopen","oncleanup","plugin","opaqueId","handleToken","session","detached","started","myStream","streamExternal","remoteStream","mySdp","mediaConstraints","dataChannel","dtmfSender","trickle","iceDone","volume","value","timer","bitrate","bsnow","bsbefore","tsnow","tsbefore","getId","getPlugin","getVolume","getRemoteVolume","getLocalVolume","isAudioMuted","isMuted","muteAudio","mute","unmuteAudio","isVideoMuted","muteVideo","unmuteVideo","getBitrate","sendMessage","sendData","dtmf","sendDtmf","prepareWebrtc","createAnswer","handleRemoteJsep","prepareWebrtcPeer","sendRequest","cleanupWebrtc","e2ee","rid_order","sendTrickleCandidate","createDataChannel","dclabel","dcprotocol","incoming","pendingData","onDataChannelMessage","label","target","onDataChannelStateChange","protocol","dcState","onDataChannelError","dcoptions","ordered","text","senders","getSenders","audioSender","find","track","kind","ontonechange","tone","tones","duration","gap","insertDTMF","streamsDone","media","getAudioTracks","getVideoTracks","addTracks","update","replaceAudio","replaceVideo","isAudioSendEnabled","addAudio","addTrack","audioTransceiver","transceivers","getTransceivers","t","receiver","replaceTrack","isVideoSendEnabled","addVideo","videoTransceiver","pc_config","pc_constraints","optional","rtcConstraints","prototype","createEncodedStreams","createEncodedAudioStreams","createEncodedVideoStreams","senderTransforms","receiverTransforms","getStats","oniceconnectionstatechange","iceConnectionState","onicecandidate","sendSDP","sdpMid","sdpMLineIndex","ontrack","streams","onended","receiverStreams","createAudioEncodedStreams","readableStream","writableStream","pipeThrough","pipeTo","readable","writable","trackMutedTimeoutId","ev","removeTrack","onmute","onunmute","simulcast2","forEach","tr","direction","sendEncodings","rid","active","maxBitrate","scaleResolutionDownBy","senderStreams","isDataEnabled","ondatachannel","channel","setRemoteDescription","webrtcError","isTrickleEnabled","keepAudio","keepVideo","removeAudio","audioSend","removeVideo","videoSend","addData","at","ra","asnd","vt","rv","vsnd","constraints","mandatory","audioSupport","videoSupport","simulcast","width","height","maxHeight","screenshareFrameRate","frameRate","screenshareHeight","screenshareWidth","captureDesktopAudio","audioStream","callbackUserMedia","getScreenMedia","gsmCallback","useAudio","googLeakyBucket","maxWidth","screen","minFrameRate","maxFrameRate","chromeMediaSource","googTemporalLayeredScreencast","chromeMediaSourceId","mozMediaSource","mediaSource","lastTime","currentTime","polly","setInterval","clearInterval","audioExist","some","device","videoExist","isScreenSendEnabled","needAudioDevice","isAudioSendRequired","needVideoDevice","isVideoSendRequired","haveAudioDevice","haveVideoDevice","gumConstraints","customizeSdp","audioRecv","isAudioRecvEnabled","setDirection","videoRecv","isVideoRecvEnabled","iceRestart","sendVideo","parameters","getParameters","encodings","setParameters","mungeSdpForSimulcasting","setLocalDescription","offerToReceiveAudio","OfferToReceiveAudio","OfferToReceiveVideo","answer","localDescription","sdpSent","remote","stats","res","remoteSource","audioLevel","enabled","inStats","mediaType","bytesReceived","googCodecName","timestamp","timePassed","bitRate","round","hangupRequest","lines","split","ssrc","ssrc_fid","cname","msid","mslabel","insertAt","mline","sim","fid","splice","join","endsWith","failIfNoAudio","failIfNoVideo"],"mappings":"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","sourcesContent":["import adapter from 'webrtc-adapter';\nimport $ from \"jquery\";\n\nconst RTCRtpTransceiver = window.RTCRtpTransceiver;\n\n// List of sessions\nJanus.sessions = {};\n\nJanus.isExtensionEnabled = function () {\n\tif (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n\t\t// No need for the extension, getDisplayMedia is supported\n\t\treturn true;\n\t}\n\tif (window.navigator.userAgent.match('Chrome')) {\n\t\tvar chromever = parseInt(window.navigator.userAgent.match(/Chrome\\/(.*) /)[1], 10);\n\t\tvar maxver = 33;\n\t\tif (window.navigator.userAgent.match('Linux'))\n\t\t\tmaxver = 35;\t// \"known\" crash in chrome 34 and 35 on linux\n\t\tif (chromever >= 26 && chromever <= maxver) {\n\t\t\t// Older versions of Chrome don't support this extension-based approach, so lie\n\t\t\treturn true;\n\t\t}\n\t\treturn Janus.extension.isInstalled();\n\t} else {\n\t\t// Firefox and others, no need for the extension (but this doesn't mean it will work)\n\t\treturn true;\n\t}\n};\n\nvar defaultExtension = {\n\t// Screensharing Chrome Extension ID\n\textensionId: 'hapfgfdkleiggjjpfpenajgdnfckjpaj',\n\tisInstalled: function () { return document.querySelector('#janus-extension-installed') !== null; },\n\tgetScreen: function (callback) {\n\t\tvar pending = window.setTimeout(function () {\n\t\t\tvar error = new Error('NavigatorUserMediaError');\n\t\t\terror.name = 'The required Chrome extension is not installed: click <a href=\"#\">here</a> to install it. (NOTE: this will need you to refresh the page)';\n\t\t\treturn callback(error);\n\t\t}, 1000);\n\t\tthis.cache[pending] = callback;\n\t\twindow.postMessage({ type: 'janusGetScreen', id: pending }, '*');\n\t},\n\tinit: function () {\n\t\tvar cache = {};\n\t\tthis.cache = cache;\n\t\t// Wait for events from the Chrome Extension\n\t\twindow.addEventListener('message', function (event) {\n\t\t\tif (event.origin != window.location.origin)\n\t\t\t\treturn;\n\t\t\tif (event.data.type == 'janusGotScreen' && cache[event.data.id]) {\n\t\t\t\tvar callback = cache[event.data.id];\n\t\t\t\tdelete cache[event.data.id];\n\n\t\t\t\tif (event.data.sourceId === '') {\n\t\t\t\t\t// user canceled\n\t\t\t\t\tvar error = new Error('NavigatorUserMediaError');\n\t\t\t\t\terror.name = 'You cancelled the request for permission, giving up...';\n\t\t\t\t\tcallback(error);\n\t\t\t\t} else {\n\t\t\t\t\tcallback(null, event.data.sourceId);\n\t\t\t\t}\n\t\t\t} else if (event.data.type == 'janusGetScreenPending') {\n\t\t\t\tconsole.log('clearing ', event.data.id);\n\t\t\t\twindow.clearTimeout(event.data.id);\n\t\t\t}\n\t\t});\n\t}\n};\n\nJanus.usageDefaultDependencies = function (deps) {\n\tvar f = (deps && deps.fetch) || fetch;\n\tvar p = (deps && deps.Promise) || Promise;\n\tvar socketCls = (deps && deps.WebSocket) || WebSocket;\n\n\treturn {\n\t\tnewWebSocket: function (server, proto) { return new socketCls(server, proto); },\n\t\textension: (deps && deps.extension) || defaultExtension,\n\t\tisArray: function (arr) { return Array.isArray(arr); },\n\t\twebRTCAdapter: (deps && deps.adapter) || adapter,\n\t\thttpAPICall: function (url, options) {\n\t\t\tvar fetchOptions = {\n\t\t\t\tmethod: options.verb,\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json, text/plain, */*'\n\t\t\t\t},\n\t\t\t\tcache: 'no-cache'\n\t\t\t};\n\t\t\tif (options.verb === \"POST\") {\n\t\t\t\tfetchOptions.headers['Content-Type'] = 'application/json';\n\t\t\t}\n\t\t\tif (options.withCredentials !== undefined) {\n\t\t\t\tfetchOptions.credentials = options.withCredentials === true ? 'include' : (options.withCredentials ? options.withCredentials : 'omit');\n\t\t\t}\n\t\t\tif (options.body) {\n\t\t\t\tfetchOptions.body = JSON.stringify(options.body);\n\t\t\t}\n\n\t\t\tvar fetching = f(url, fetchOptions).catch(function (error) {\n\t\t\t\treturn p.reject({ message: 'Probably a network error, is the server down?', error: error });\n\t\t\t});\n\n\t\t\t/*\n\t\t\t * fetch() does not natively support timeouts.\n\t\t\t * Work around this by starting a timeout manually, and racing it agains the fetch() to see which thing resolves first.\n\t\t\t */\n\n\t\t\tif (options.timeout) {\n\t\t\t\tvar timeout = new p(function (resolve, reject) {\n\t\t\t\t\tvar timerId = setTimeout(function () {\n\t\t\t\t\t\tclearTimeout(timerId);\n\t\t\t\t\t\treturn reject({ message: 'Request timed out', timeout: options.timeout });\n\t\t\t\t\t}, options.timeout);\n\t\t\t\t});\n\t\t\t\tfetching = p.race([fetching, timeout]);\n\t\t\t}\n\n\t\t\tfetching.then(function (response) {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tif (typeof (options.success) === typeof (Janus.noop)) {\n\t\t\t\t\t\treturn response.json().then(function (parsed) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\toptions.success(parsed);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tJanus.error('Unhandled httpAPICall success callback error', error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\treturn p.reject({ message: 'Failed to parse response body', error: error, response: response });\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn p.reject({ message: 'API call failed', response: response });\n\t\t\t\t}\n\t\t\t}).catch(function (error) {\n\t\t\t\tif (typeof (options.error) === typeof (Janus.noop)) {\n\t\t\t\t\toptions.error(error.message || '<< internal error >>', error);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn fetching;\n\t\t}\n\t}\n};\n\nJanus.useOldDependencies = function (deps) {\n\tvar jq = (deps && deps.$) || $;\n\tvar socketCls = (deps && deps.WebSocket) || WebSocket;\n\treturn {\n\t\tnewWebSocket: function (server, proto) { return new socketCls(server, proto); },\n\t\tisArray: function (arr) { return jq.isArray(arr); },\n\t\textension: (deps && deps.extension) || defaultExtension,\n\t\twebRTCAdapter: (deps && deps.adapter) || adapter,\n\t\thttpAPICall: function (url, options) {\n\t\t\tvar payload = options.body !== undefined ? {\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tdata: JSON.stringify(options.body)\n\t\t\t} : {};\n\t\t\tvar credentials = options.withCredentials !== undefined ? { xhrFields: { withCredentials: options.withCredentials } } : {};\n\n\t\t\treturn jq.ajax(jq.extend(payload, credentials, {\n\t\t\t\turl: url,\n\t\t\t\ttype: options.verb,\n\t\t\t\tcache: false,\n\t\t\t\tdataType: 'json',\n\t\t\t\tasync: options.async,\n\t\t\t\ttimeout: options.timeout,\n\t\t\t\tsuccess: function (result) {\n\t\t\t\t\tif (typeof (options.success) === typeof (Janus.noop)) {\n\t\t\t\t\t\toptions.success(result);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terror: function (xhr, status, err) {\n\t\t\t\t\tif (typeof (options.error) === typeof (Janus.noop)) {\n\t\t\t\t\t\toptions.error(status, err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t};\n};\n\nJanus.noop = function () { };\n\nJanus.dataChanDefaultLabel = \"JanusDataChannel\";\n\n// Note: in the future we may want to change this, e.g., as was\n// attempted in https://github.com/meetecho/janus-gateway/issues/1670\nJanus.endOfCandidates = null;\n\n// Stop all tracks from a given stream\nJanus.stopAllTracks = function (stream) {\n\ttry {\n\t\t// Try a MediaStreamTrack.stop() for each track\n\t\tvar tracks = stream.getTracks();\n\t\tfor (var mst of tracks) {\n\t\t\tJanus.log(mst);\n\t\t\tif (mst) {\n\t\t\t\tmst.stop();\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\t// Do nothing if this fails\n\t}\n}\n\n// Initialization\nJanus.init = function (options) {\n\toptions = options || {};\n\toptions.callback = (typeof options.callback == \"function\") ? options.callback : Janus.noop;\n\tif (Janus.initDone) {\n\t\t// Already initialized\n\t\toptions.callback();\n\t} else {\n\t\tif (typeof console == \"undefined\" || typeof console.log == \"undefined\") {\n\t\t\tconsole = { log: function () { } };\n\t\t}\n\t\t// Console logging (all debugging disabled by default)\n\t\tJanus.trace = Janus.noop;\n\t\tJanus.debug = Janus.noop;\n\t\tJanus.vdebug = Janus.noop;\n\t\tJanus.log = Janus.noop;\n\t\tJanus.warn = Janus.noop;\n\t\tJanus.error = Janus.noop;\n\t\tif (options.debug === true || options.debug === \"all\") {\n\t\t\t// Enable all debugging levels\n\t\t\tJanus.trace = console.trace.bind(console);\n\t\t\tJanus.debug = console.debug.bind(console);\n\t\t\tJanus.vdebug = console.debug.bind(console);\n\t\t\tJanus.log = console.log.bind(console);\n\t\t\tJanus.warn = console.warn.bind(console);\n\t\t\tJanus.error = console.error.bind(console);\n\t\t} else if (Array.isArray(options.debug)) {\n\t\t\tfor (var d of options.debug) {\n\t\t\t\tswitch (d) {\n\t\t\t\t\tcase \"trace\":\n\t\t\t\t\t\tJanus.trace = console.trace.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"debug\":\n\t\t\t\t\t\tJanus.debug = console.debug.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"vdebug\":\n\t\t\t\t\t\tJanus.vdebug = console.debug.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"log\":\n\t\t\t\t\t\tJanus.log = console.log.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"warn\":\n\t\t\t\t\t\tJanus.warn = console.warn.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"error\":\n\t\t\t\t\t\tJanus.error = console.error.bind(console);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error(\"Unknown debugging option '\" + d + \"' (supported: 'trace', 'debug', 'vdebug', 'log', warn', 'error')\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tJanus.log(\"Initializing library\");\n\n\t\tvar usedDependencies = options.dependencies || Janus.usageDefaultDependencies();\n\t\tJanus.isArray = usedDependencies.isArray;\n\t\tJanus.webRTCAdapter = usedDependencies.webRTCAdapter;\n\t\tJanus.httpAPICall = usedDependencies.httpAPICall;\n\t\tJanus.newWebSocket = usedDependencies.newWebSocket;\n\t\tJanus.extension = usedDependencies.extension;\n\t\tJanus.extension.init();\n\n\t\t// Helper method to enumerate devices\n\t\tJanus.listDevices = function (callback, config) {\n\t\t\tcallback = (typeof callback == \"function\") ? callback : Janus.noop;\n\t\t\tif (config == null) config = { audio: true, video: true };\n\t\t\tif (Janus.isGetUserMediaAvailable()) {\n\t\t\t\tnavigator.mediaDevices.getUserMedia(config)\n\t\t\t\t\t.then(function (stream) {\n\t\t\t\t\t\tnavigator.mediaDevices.enumerateDevices().then(function (devices) {\n\t\t\t\t\t\t\tJanus.debug(devices);\n\t\t\t\t\t\t\tcallback(devices);\n\t\t\t\t\t\t\t// Get rid of the now useless stream\n\t\t\t\t\t\t\tJanus.stopAllTracks(stream)\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (err) {\n\t\t\t\t\t\tJanus.error(err);\n\t\t\t\t\t\tcallback([]);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tJanus.warn(\"navigator.mediaDevices unavailable\");\n\t\t\t\tcallback([]);\n\t\t\t}\n\t\t};\n\t\t// Helper methods to attach/reattach a stream to a video element (previously part of adapter.js)\n\t\tJanus.attachMediaStream = function (element, stream) {\n\t\t\ttry {\n\t\t\t\telement.srcObject = stream;\n\t\t\t} catch (e) {\n\t\t\t\ttry {\n\t\t\t\t\telement.src = URL.createObjectURL(stream);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tJanus.error(\"Error attaching stream to element\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tJanus.reattachMediaStream = function (to, from) {\n\t\t\ttry {\n\t\t\t\tto.srcObject = from.srcObject;\n\t\t\t} catch (e) {\n\t\t\t\ttry {\n\t\t\t\t\tto.src = from.src;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tJanus.error(\"Error reattaching stream to element\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t// Detect tab close: make sure we don't loose existing onbeforeunload handlers\n\t\t// (note: for iOS we need to subscribe to a different event, 'pagehide', see\n\t\t// https://gist.github.com/thehunmonkgroup/6bee8941a49b86be31a787fe8f4b8cfe)\n\t\tvar iOS = ['iPad', 'iPhone', 'iPod'].indexOf(navigator.platform) >= 0;\n\t\tvar eventName = iOS ? 'pagehide' : 'beforeunload';\n\t\tvar oldOBF = window[\"on\" + eventName];\n\t\twindow.addEventListener(eventName, function (event) {\n\t\t\tJanus.log(\"Closing window\");\n\t\t\tfor (var s in Janus.sessions) {\n\t\t\t\tif (Janus.sessions[s] && Janus.sessions[s].destroyOnUnload) {\n\t\t\t\t\tJanus.log(\"Destroying session \" + s);\n\t\t\t\t\tJanus.sessions[s].destroy({ unload: true, notifyDestroyed: false });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (oldOBF && typeof oldOBF == \"function\") {\n\t\t\t\toldOBF();\n\t\t\t}\n\t\t});\n\t\t// If this is a Safari Technology Preview, check if VP8 is supported\n\t\tJanus.safariVp8 = false;\n\t\tif (Janus.webRTCAdapter.browserDetails.browser === 'safari' &&\n\t\t\tJanus.webRTCAdapter.browserDetails.version >= 605) {\n\t\t\t// Let's see if RTCRtpSender.getCapabilities() is there\n\t\t\tif (RTCRtpSender && RTCRtpSender.getCapabilities && RTCRtpSender.getCapabilities(\"video\") &&\n\t\t\t\tRTCRtpSender.getCapabilities(\"video\").codecs && RTCRtpSender.getCapabilities(\"video\").codecs.length) {\n\t\t\t\tfor (var codec of RTCRtpSender.getCapabilities(\"video\").codecs) {\n\t\t\t\t\tif (codec && codec.mimeType && codec.mimeType.toLowerCase() === \"video/vp8\") {\n\t\t\t\t\t\tJanus.safariVp8 = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Janus.safariVp8) {\n\t\t\t\t\tJanus.log(\"This version of Safari supports VP8\");\n\t\t\t\t} else {\n\t\t\t\t\tJanus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" +\n\t\t\t\t\t\t\"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We do it in a very ugly way, as there's no alternative...\n\t\t\t\t// We create a PeerConnection to see if VP8 is in an offer\n\t\t\t\tvar testpc = new RTCPeerConnection({});\n\t\t\t\ttestpc.createOffer({ offerToReceiveVideo: true }).then(function (offer) {\n\t\t\t\t\tJanus.safariVp8 = offer.sdp.indexOf(\"VP8\") !== -1;\n\t\t\t\t\tif (Janus.safariVp8) {\n\t\t\t\t\t\tJanus.log(\"This version of Safari supports VP8\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" +\n\t\t\t\t\t\t\t\"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n\t\t\t\t\t}\n\t\t\t\t\ttestpc.close();\n\t\t\t\t\ttestpc = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// Check if this browser supports Unified Plan and transceivers\n\t\t// Based on https://codepen.io/anon/pen/ZqLwWV?editors=0010\n\t\tJanus.unifiedPlan = false;\n\t\tif (Janus.webRTCAdapter.browserDetails.browser === 'firefox' &&\n\t\t\tJanus.webRTCAdapter.browserDetails.version >= 59) {\n\t\t\t// Firefox definitely does, starting from version 59\n\t\t\tJanus.unifiedPlan = true;\n\t\t} else if (Janus.webRTCAdapter.browserDetails.browser === 'chrome' &&\n\t\t\tJanus.webRTCAdapter.browserDetails.version >= 72) {\n\t\t\t// Chrome does, but it's only usable from version 72 on\n\t\t\tJanus.unifiedPlan = true;\n\t\t} else {\n\t\t\t// Check if addTransceiver() throws an exception\n\t\t\tvar tempPc = new RTCPeerConnection();\n\t\t\ttry {\n\t\t\t\ttempPc.addTransceiver('audio');\n\t\t\t\tJanus.unifiedPlan = true;\n\t\t\t} catch (e) { }\n\t\t\ttempPc.close();\n\t\t}\n\t\tJanus.initDone = true;\n\t\toptions.callback();\n\t}\n};\n\n// Helper method to check whether WebRTC is supported by this browser\nJanus.isWebrtcSupported = function () {\n\treturn !!window.RTCPeerConnection;\n};\n// Helper method to check whether devices can be accessed by this browser (e.g., not possible via plain HTTP)\nJanus.isGetUserMediaAvailable = function () {\n\treturn navigator.mediaDevices && navigator.mediaDevices.getUserMedia;\n};\n\n// Helper method to create random identifiers (e.g., transaction)\nJanus.randomString = function (len) {\n\tvar charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\tvar randomString = '';\n\tfor (var i = 0; i < len; i++) {\n\t\tvar randomPoz = Math.floor(Math.random() * charSet.length);\n\t\trandomString += charSet.substring(randomPoz, randomPoz + 1);\n\t}\n\treturn randomString;\n};\n\nfunction Janus(gatewayCallbacks) {\n\tgatewayCallbacks = gatewayCallbacks || {};\n\tgatewayCallbacks.success = (typeof gatewayCallbacks.success == \"function\") ? gatewayCallbacks.success : Janus.noop;\n\tgatewayCallbacks.error = (typeof gatewayCallbacks.error == \"function\") ? gatewayCallbacks.error : Janus.noop;\n\tgatewayCallbacks.destroyed = (typeof gatewayCallbacks.destroyed == \"function\") ? gatewayCallbacks.destroyed : Janus.noop;\n\tif (!Janus.initDone) {\n\t\tgatewayCallbacks.error(\"Library not initialized\");\n\t\treturn {};\n\t}\n\tif (!Janus.isWebrtcSupported()) {\n\t\tgatewayCallbacks.error(\"WebRTC not supported by this browser\");\n\t\treturn {};\n\t}\n\tJanus.log(\"Library initialized: \" + Janus.initDone);\n\tif (!gatewayCallbacks.server) {\n\t\tgatewayCallbacks.error(\"Invalid server url\");\n\t\treturn {};\n\t}\n\tvar websockets = false;\n\tvar ws = null;\n\tvar wsHandlers = {};\n\tvar wsKeepaliveTimeoutId = null;\n\tvar servers = null;\n\tvar serversIndex = 0;\n\tvar server = \"/janusbase/janus\";\n\tif (Janus.isArray(server)) {\n\t\tJanus.log(\"Multiple servers provided (\" + server.length + \"), will use the first that works\");\n\t\tserver = null;\n\t\tservers = gatewayCallbacks.server;\n\t\tJanus.debug(servers);\n\t} else {\n\t\tif (server.indexOf(\"ws\") === 0) {\n\t\t\twebsockets = true;\n\t\t\tJanus.log(\"Using WebSockets to contact Janus: \" + server);\n\t\t} else {\n\t\t\twebsockets = false;\n\t\t\tJanus.log(\"Using REST API to contact Janus: \" + server);\n\t\t}\n\t}\n\tvar iceServers = gatewayCallbacks.iceServers || [{ urls: \"stun:stun.l.google.com:19302\" }];\n\tvar iceTransportPolicy = gatewayCallbacks.iceTransportPolicy;\n\tvar bundlePolicy = gatewayCallbacks.bundlePolicy;\n\t// Whether IPv6 candidates should be gathered\n\tvar ipv6Support = (gatewayCallbacks.ipv6 === true);\n\t// Whether we should enable the withCredentials flag for XHR requests\n\tvar withCredentials = false;\n\tif (gatewayCallbacks.withCredentials !== undefined && gatewayCallbacks.withCredentials !== null)\n\t\twithCredentials = gatewayCallbacks.withCredentials === true;\n\t// Optional max events\n\tvar maxev = 10;\n\tif (gatewayCallbacks.max_poll_events !== undefined && gatewayCallbacks.max_poll_events !== null)\n\t\tmaxev = gatewayCallbacks.max_poll_events;\n\tif (maxev < 1)\n\t\tmaxev = 1;\n\t// Token to use (only if the token based authentication mechanism is enabled)\n\tvar token = null;\n\tif (gatewayCallbacks.token !== undefined && gatewayCallbacks.token !== null)\n\t\ttoken = gatewayCallbacks.token;\n\t// API secret to use (only if the shared API secret is enabled)\n\tvar apisecret = null;\n\tif (gatewayCallbacks.apisecret !== undefined && gatewayCallbacks.apisecret !== null)\n\t\tapisecret = gatewayCallbacks.apisecret;\n\t// Whether we should destroy this session when onbeforeunload is called\n\tthis.destroyOnUnload = true;\n\tif (gatewayCallbacks.destroyOnUnload !== undefined && gatewayCallbacks.destroyOnUnload !== null)\n\t\tthis.destroyOnUnload = (gatewayCallbacks.destroyOnUnload === true);\n\t// Some timeout-related values\n\tvar keepAlivePeriod = 25000;\n\tif (gatewayCallbacks.keepAlivePeriod !== undefined && gatewayCallbacks.keepAlivePeriod !== null)\n\t\tkeepAlivePeriod = gatewayCallbacks.keepAlivePeriod;\n\tif (isNaN(keepAlivePeriod))\n\t\tkeepAlivePeriod = 25000;\n\tvar longPollTimeout = 60000;\n\tif (gatewayCallbacks.longPollTimeout !== undefined && gatewayCallbacks.longPollTimeout !== null)\n\t\tlongPollTimeout = gatewayCallbacks.longPollTimeout;\n\tif (isNaN(longPollTimeout))\n\t\tlongPollTimeout = 60000;\n\n\t// overrides for default maxBitrate values for simulcasting\n\tfunction getMaxBitrates(simulcastMaxBitrates) {\n\t\tvar maxBitrates = {\n\t\t\thigh: 900000,\n\t\t\tmedium: 300000,\n\t\t\tlow: 100000,\n\t\t};\n\n\t\tif (simulcastMaxBitrates !== undefined && simulcastMaxBitrates !== null) {\n\t\t\tif (simulcastMaxBitrates.high)\n\t\t\t\tmaxBitrates.high = simulcastMaxBitrates.high;\n\t\t\tif (simulcastMaxBitrates.medium)\n\t\t\t\tmaxBitrates.medium = simulcastMaxBitrates.medium;\n\t\t\tif (simulcastMaxBitrates.low)\n\t\t\t\tmaxBitrates.low = simulcastMaxBitrates.low;\n\t\t}\n\n\t\treturn maxBitrates;\n\t}\n\n\tvar connected = false;\n\tvar sessionId = null;\n\tvar pluginHandles = {};\n\tvar that = this;\n\tvar retries = 0;\n\tvar transactions = {};\n\tcreateSession(gatewayCallbacks);\n\n\t// Public methods\n\tthis.getServer = function () { return server; };\n\tthis.isConnected = function () { return connected; };\n\tthis.reconnect = function (callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks[\"reconnect\"] = true;\n\t\tcreateSession(callbacks);\n\t};\n\tthis.getSessionId = function () { return sessionId; };\n\tthis.getInfo = function (callbacks) { getInfo(callbacks); };\n\tthis.destroy = function (callbacks) { destroySession(callbacks); };\n\tthis.attach = function (callbacks) { createHandle(callbacks); };\n\n\tfunction eventHandler() {\n\t\tif (sessionId == null)\n\t\t\treturn;\n\t\tJanus.debug('Long poll...');\n\t\tif (!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar longpoll = server + \"/\" + sessionId + \"?rid=\" + new Date().getTime();\n\t\tif (maxev)\n\t\t\tlongpoll = longpoll + \"&maxev=\" + maxev;\n\t\tif (token)\n\t\t\tlongpoll = longpoll + \"&token=\" + encodeURIComponent(token);\n\t\tif (apisecret)\n\t\t\tlongpoll = longpoll + \"&apisecret=\" + encodeURIComponent(apisecret);\n\t\tJanus.httpAPICall(longpoll, {\n\t\t\tverb: 'GET',\n\t\t\twithCredentials: withCredentials,\n\t\t\tsuccess: handleEvent,\n\t\t\ttimeout: longPollTimeout,\n\t\t\terror: function (textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\n\t\t\t\tretries++;\n\t\t\t\tif (retries > 3) {\n\t\t\t\t\t// Did we just lose the server? :-(\n\t\t\t\t\tconnected = false;\n\t\t\t\t\tgatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teventHandler();\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private event handler: this will trigger plugin callbacks, if set\n\tfunction handleEvent(json, skipTimeout) {\n\t\tretries = 0;\n\t\tif (!websockets && sessionId !== undefined && sessionId !== null && skipTimeout !== true)\n\t\t\teventHandler();\n\t\tif (!websockets && Janus.isArray(json)) {\n\t\t\t// We got an array: it means we passed a maxev > 1, iterate on all objects\n\t\t\tfor (var i = 0; i < json.length; i++) {\n\t\t\t\thandleEvent(json[i], true);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (json[\"janus\"] === \"keepalive\") {\n\t\t\t// Nothing happened\n\t\t\tJanus.vdebug(\"Got a keepalive on session \" + sessionId);\n\t\t\treturn;\n\t\t} else if (json[\"janus\"] === \"server_info\") {\n\t\t\t// Just info on the Janus instance\n\t\t\tJanus.debug(\"Got info on the Janus instance\");\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif (transaction) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif (reportSuccess)\n\t\t\t\t\treportSuccess(json);\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if (json[\"janus\"] === \"ack\") {\n\t\t\t// Just an ack, we can probably ignore\n\t\t\tJanus.debug(\"Got an ack on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif (transaction) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif (reportSuccess)\n\t\t\t\t\treportSuccess(json);\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if (json[\"janus\"] === \"success\") {\n\t\t\t// Success!\n\t\t\tJanus.debug(\"Got a success on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif (transaction) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif (reportSuccess)\n\t\t\t\t\treportSuccess(json);\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if (json[\"janus\"] === \"trickle\") {\n\t\t\t// We got a trickle candidate from Janus\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif (!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif (!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar candidate = json[\"candidate\"];\n\t\t\tJanus.debug(\"Got a trickled candidate on session \" + sessionId);\n\t\t\tJanus.debug(candidate);\n\t\t\tvar config = pluginHandle.webrtcStuff;\n\t\t\tif (config.pc && config.remoteSdp) {\n\t\t\t\t// Add candidate right now\n\t\t\t\tJanus.debug(\"Adding remote candidate:\", candidate);\n\t\t\t\tif (!candidate || candidate.completed === true) {\n\t\t\t\t\t// end-of-candidates\n\t\t\t\t\tconfig.pc.addIceCandidate(Janus.endOfCandidates);\n\t\t\t\t} else {\n\t\t\t\t\t// New candidate\n\t\t\t\t\tconfig.pc.addIceCandidate(candidate);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We didn't do setRemoteDescription (trickle got here before the offer?)\n\t\t\t\tJanus.debug(\"We didn't do setRemoteDescription (trickle got here before the offer?), caching candidate\");\n\t\t\t\tif (!config.candidates)\n\t\t\t\t\tconfig.candidates = [];\n\t\t\t\tconfig.candidates.push(candidate);\n\t\t\t\tJanus.debug(config.candidates);\n\t\t\t}\n\t\t} else if (json[\"janus\"] === \"webrtcup\") {\n\t\t\t// The PeerConnection with the server is up! Notify this\n\t\t\tJanus.debug(\"Got a webrtcup event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif (!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif (!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.webrtcState(true);\n\t\t\treturn;\n\t\t} else if (json[\"janus\"] === \"hangup\") {\n\t\t\t// A plugin asked the core to hangup a PeerConnection on one of our handles\n\t\t\tJanus.debug(\"Got a hangup event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif (!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif (!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.webrtcState(false, json[\"reason\"]);\n\t\t\tpluginHandle.hangup();\n\t\t} else if (json[\"janus\"] === \"detached\") {\n\t\t\t// A plugin asked the core to detach one of our handles\n\t\t\tJanus.debug(\"Got a detached event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif (!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif (!pluginHandle) {\n\t\t\t\t// Don't warn here because destroyHandle causes this situation.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.ondetached();\n\t\t\tpluginHandle.detach();\n\t\t} else if (json[\"janus\"] === \"media\") {\n\t\t\t// Media started/stopped flowing\n\t\t\tJanus.debug(\"Got a media event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif (!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif (!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.mediaState(json[\"type\"], json[\"receiving\"]);\n\t\t} else if (json[\"janus\"] === \"slowlink\") {\n\t\t\tJanus.debug(\"Got a slowlink event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\t// Trouble uplink or downlink\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif (!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif (!pluginHandle) {\n\t\t\t\tJanus.debug(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpluginHandle.slowLink(json[\"uplink\"], json[\"lost\"]);\n\t\t} else if (json[\"janus\"] === \"error\") {\n\t\t\t// Oops, something wrong happened\n\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\tJanus.debug(json);\n\t\t\tvar transaction = json[\"transaction\"];\n\t\t\tif (transaction) {\n\t\t\t\tvar reportSuccess = transactions[transaction];\n\t\t\t\tif (reportSuccess) {\n\t\t\t\t\treportSuccess(json);\n\t\t\t\t}\n\t\t\t\tdelete transactions[transaction];\n\t\t\t}\n\t\t\treturn;\n\t\t} else if (json[\"janus\"] === \"event\") {\n\t\t\tJanus.debug(\"Got a plugin event on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tvar sender = json[\"sender\"];\n\t\t\tif (!sender) {\n\t\t\t\tJanus.warn(\"Missing sender...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar plugindata = json[\"plugindata\"];\n\t\t\tif (!plugindata) {\n\t\t\t\tJanus.warn(\"Missing plugindata...\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tJanus.debug(\"  -- Event is coming from \" + sender + \" (\" + plugindata[\"plugin\"] + \")\");\n\t\t\tvar data = plugindata[\"data\"];\n\t\t\tJanus.debug(data);\n\t\t\tvar pluginHandle = pluginHandles[sender];\n\t\t\tif (!pluginHandle) {\n\t\t\t\tJanus.warn(\"This handle is not attached to this session\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar jsep = json[\"jsep\"];\n\t\t\tif (jsep) {\n\t\t\t\tJanus.debug(\"Handling SDP as well...\");\n\t\t\t\tJanus.debug(jsep);\n\t\t\t}\n\t\t\tvar callback = pluginHandle.onmessage;\n\t\t\tif (callback) {\n\t\t\t\tJanus.debug(\"Notifying application...\");\n\t\t\t\t// Send to callback specified when attaching plugin handle\n\t\t\t\tcallback(data, jsep);\n\t\t\t} else {\n\t\t\t\t// Send to generic callback (?)\n\t\t\t\tJanus.debug(\"No provided notification callback\");\n\t\t\t}\n\t\t} else if (json[\"janus\"] === \"timeout\") {\n\t\t\tJanus.error(\"Timeout on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t\tif (websockets) {\n\t\t\t\tws.close(3504, \"Gateway timeout\");\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\t\t\tJanus.warn(\"Unknown message/event  '\" + json[\"janus\"] + \"' on session \" + sessionId);\n\t\t\tJanus.debug(json);\n\t\t}\n\t}\n\n\t// Private helper to send keep-alive messages on WebSockets\n\tfunction keepAlive() {\n\t\tif (!server || !websockets || !connected)\n\t\t\treturn;\n\t\twsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n\t\tvar request = { \"janus\": \"keepalive\", \"session_id\": sessionId, \"transaction\": Janus.randomString(12) };\n\t\tif (token)\n\t\t\trequest[\"token\"] = token;\n\t\tif (apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tws.send(JSON.stringify(request));\n\t}\n\n\t// Private method to create a session\n\tfunction createSession(callbacks) {\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"create\", \"transaction\": transaction };\n\t\tif (callbacks[\"reconnect\"]) {\n\t\t\t// We're reconnecting, claim the session\n\t\t\tconnected = false;\n\t\t\trequest[\"janus\"] = \"claim\";\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\t// If we were using websockets, ignore the old connection\n\t\t\tif (ws) {\n\t\t\t\tws.onopen = null;\n\t\t\t\tws.onerror = null;\n\t\t\t\tws.onclose = null;\n\t\t\t\tif (wsKeepaliveTimeoutId) {\n\t\t\t\t\tclearTimeout(wsKeepaliveTimeoutId);\n\t\t\t\t\twsKeepaliveTimeoutId = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (token)\n\t\t\trequest[\"token\"] = token;\n\t\tif (apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif (!server && Janus.isArray(servers)) {\n\t\t\t// We still need to find a working server from the list we were given\n\t\t\tserver = servers[serversIndex];\n\t\t\tif (server.indexOf(\"ws\") === 0) {\n\t\t\t\twebsockets = true;\n\t\t\t\tJanus.log(\"Server #\" + (serversIndex + 1) + \": trying WebSockets to contact Janus (\" + server + \")\");\n\t\t\t} else {\n\t\t\t\twebsockets = false;\n\t\t\t\tJanus.log(\"Server #\" + (serversIndex + 1) + \": trying REST API to contact Janus (\" + server + \")\");\n\t\t\t}\n\t\t}\n\t\tif (websockets) {\n\t\t\tws = Janus.newWebSocket(server, 'janus-protocol');\n\t\t\twsHandlers = {\n\t\t\t\t'error': function () {\n\t\t\t\t\tJanus.error(\"Error connecting to the Janus WebSockets server... \" + server);\n\t\t\t\t\tif (Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n\t\t\t\t\t\tserversIndex++;\n\t\t\t\t\t\tif (serversIndex === servers.length) {\n\t\t\t\t\t\t\t// We tried all the servers the user gave us and they all failed\n\t\t\t\t\t\t\tcallbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Let's try the next server\n\t\t\t\t\t\tserver = null;\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tcreateSession(callbacks);\n\t\t\t\t\t\t}, 200);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallbacks.error(\"Error connecting to the Janus WebSockets server: Is the server down?\");\n\t\t\t\t},\n\n\t\t\t\t'open': function () {\n\t\t\t\t\t// We need to be notified about the success\n\t\t\t\t\ttransactions[transaction] = function (json) {\n\t\t\t\t\t\tJanus.debug(json);\n\t\t\t\t\t\tif (json[\"janus\"] !== \"success\") {\n\t\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\t\tcallbacks.error(json[\"error\"].reason);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\tsessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\t\t\t\t\t\tif (callbacks[\"reconnect\"]) {\n\t\t\t\t\t\t\tJanus.log(\"Claimed session: \" + sessionId);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tJanus.log(\"Created session: \" + sessionId);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.sessions[sessionId] = that;\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t};\n\t\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t\t},\n\n\t\t\t\t'message': function (event) {\n\t\t\t\t\thandleEvent(JSON.parse(event.data));\n\t\t\t\t},\n\n\t\t\t\t'close': function () {\n\t\t\t\t\tif (!server || !connected) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconnected = false;\n\t\t\t\t\t// FIXME What if this is called when the page is closed?\n\t\t\t\t\tgatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfor (var eventName in wsHandlers) {\n\t\t\t\tws.addEventListener(eventName, wsHandlers[eventName]);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(\"____________________ \", server);\n\n\t\tJanus.httpAPICall(server, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function (json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif (json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconnected = true;\n\t\t\t\tsessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\t\t\t\tif (callbacks[\"reconnect\"]) {\n\t\t\t\t\tJanus.log(\"Claimed session: \" + sessionId);\n\t\t\t\t} else {\n\t\t\t\t\tJanus.log(\"Created session: \" + sessionId);\n\t\t\t\t}\n\t\t\t\tJanus.sessions[sessionId] = that;\n\t\t\t\teventHandler();\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function (textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tif (Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n\t\t\t\t\tserversIndex++;\n\t\t\t\t\tif (serversIndex === servers.length) {\n\t\t\t\t\t\t// We tried all the servers the user gave us and they all failed\n\t\t\t\t\t\tcallbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Let's try the next server\n\t\t\t\t\tserver = null;\n\t\t\t\t\tsetTimeout(function () { createSession(callbacks); }, 200);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (errorThrown === \"\")\n\t\t\t\t\tcallbacks.error(textStatus + \": Is the server down?\");\n\t\t\t\telse\n\t\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to get info on the server\n\tfunction getInfo(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\t// FIXME This method triggers a success even when we fail\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tJanus.log(\"Getting info on Janus instance\");\n\t\tif (!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\t// We just need to send an \"info\" request\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"info\", \"transaction\": transaction };\n\t\tif (token)\n\t\t\trequest[\"token\"] = token;\n\t\tif (apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif (websockets) {\n\t\t\ttransactions[transaction] = function (json) {\n\t\t\t\tJanus.log(\"Server info:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif (json[\"janus\"] !== \"server_info\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tcallbacks.success(json);\n\t\t\t}\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function (json) {\n\t\t\t\tJanus.log(\"Server info:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif (json[\"janus\"] !== \"server_info\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tcallbacks.success(json);\n\t\t\t},\n\t\t\terror: function (textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tif (errorThrown === \"\")\n\t\t\t\t\tcallbacks.error(textStatus + \": Is the server down?\");\n\t\t\t\telse\n\t\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to destroy a session\n\tfunction destroySession(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\t// FIXME This method triggers a success even when we fail\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar unload = (callbacks.unload === true);\n\t\tvar notifyDestroyed = true;\n\t\tif (callbacks.notifyDestroyed !== undefined && callbacks.notifyDestroyed !== null)\n\t\t\tnotifyDestroyed = (callbacks.notifyDestroyed === true);\n\t\tvar cleanupHandles = (callbacks.cleanupHandles === true);\n\t\tJanus.log(\"Destroying session \" + sessionId + \" (unload=\" + unload + \")\");\n\t\tif (!sessionId) {\n\t\t\tJanus.warn(\"No session to destroy\");\n\t\t\tcallbacks.success();\n\t\t\tif (notifyDestroyed)\n\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\treturn;\n\t\t}\n\t\tif (cleanupHandles) {\n\t\t\tfor (var handleId in pluginHandles)\n\t\t\t\tdestroyHandle(handleId, { noRequest: true });\n\t\t}\n\t\tif (!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tsessionId = null;\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\t// No need to destroy all handles first, Janus will do that itself\n\t\tvar request = { \"janus\": \"destroy\", \"transaction\": Janus.randomString(12) };\n\t\tif (token)\n\t\t\trequest[\"token\"] = token;\n\t\tif (apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif (unload) {\n\t\t\t// We're unloading the page: use sendBeacon for HTTP instead,\n\t\t\t// or just close the WebSocket connection if we're using that\n\t\t\tif (websockets) {\n\t\t\t\tws.onclose = null;\n\t\t\t\tws.close();\n\t\t\t\tws = null;\n\t\t\t} else {\n\t\t\t\tnavigator.sendBeacon(server + \"/\" + sessionId, JSON.stringify(request));\n\t\t\t}\n\t\t\tJanus.log(\"Destroyed session:\");\n\t\t\tsessionId = null;\n\t\t\tconnected = false;\n\t\t\tcallbacks.success();\n\t\t\tif (notifyDestroyed)\n\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\treturn;\n\t\t}\n\t\tif (websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\n\t\t\tvar unbindWebSocket = function () {\n\t\t\t\tfor (var eventName in wsHandlers) {\n\t\t\t\t\tws.removeEventListener(eventName, wsHandlers[eventName]);\n\t\t\t\t}\n\t\t\t\tws.removeEventListener('message', onUnbindMessage);\n\t\t\t\tws.removeEventListener('error', onUnbindError);\n\t\t\t\tif (wsKeepaliveTimeoutId) {\n\t\t\t\t\tclearTimeout(wsKeepaliveTimeoutId);\n\t\t\t\t}\n\t\t\t\tws.close();\n\t\t\t};\n\n\t\t\tvar onUnbindMessage = function (event) {\n\t\t\t\tvar data = JSON.parse(event.data);\n\t\t\t\tif (data.session_id == request.session_id && data.transaction == request.transaction) {\n\t\t\t\t\tunbindWebSocket();\n\t\t\t\t\tcallbacks.success();\n\t\t\t\t\tif (notifyDestroyed)\n\t\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t\t}\n\t\t\t};\n\t\t\tvar onUnbindError = function (event) {\n\t\t\t\tunbindWebSocket();\n\t\t\t\tcallbacks.error(\"Failed to destroy the server: Is the server down?\");\n\t\t\t\tif (notifyDestroyed)\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t};\n\n\t\t\tws.addEventListener('message', onUnbindMessage);\n\t\t\tws.addEventListener('error', onUnbindError);\n\n\t\t\tif (ws.readyState === 1) {\n\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t} else {\n\t\t\t\tonUnbindError();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function (json) {\n\t\t\t\tJanus.log(\"Destroyed session:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tsessionId = null;\n\t\t\t\tconnected = false;\n\t\t\t\tif (json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tcallbacks.success();\n\t\t\t\tif (notifyDestroyed)\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t},\n\t\t\terror: function (textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\t// Reset everything anyway\n\t\t\t\tsessionId = null;\n\t\t\t\tconnected = false;\n\t\t\t\tcallbacks.success();\n\t\t\t\tif (notifyDestroyed)\n\t\t\t\t\tgatewayCallbacks.destroyed();\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to create a plugin handle\n\tfunction createHandle(callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks.consentDialog = (typeof callbacks.consentDialog == \"function\") ? callbacks.consentDialog : Janus.noop;\n\t\tcallbacks.iceState = (typeof callbacks.iceState == \"function\") ? callbacks.iceState : Janus.noop;\n\t\tcallbacks.mediaState = (typeof callbacks.mediaState == \"function\") ? callbacks.mediaState : Janus.noop;\n\t\tcallbacks.webrtcState = (typeof callbacks.webrtcState == \"function\") ? callbacks.webrtcState : Janus.noop;\n\t\tcallbacks.slowLink = (typeof callbacks.slowLink == \"function\") ? callbacks.slowLink : Janus.noop;\n\t\tcallbacks.onmessage = (typeof callbacks.onmessage == \"function\") ? callbacks.onmessage : Janus.noop;\n\t\tcallbacks.onlocalstream = (typeof callbacks.onlocalstream == \"function\") ? callbacks.onlocalstream : Janus.noop;\n\t\tcallbacks.onremotestream = (typeof callbacks.onremotestream == \"function\") ? callbacks.onremotestream : Janus.noop;\n\t\tcallbacks.ondata = (typeof callbacks.ondata == \"function\") ? callbacks.ondata : Janus.noop;\n\t\tcallbacks.ondataopen = (typeof callbacks.ondataopen == \"function\") ? callbacks.ondataopen : Janus.noop;\n\t\tcallbacks.oncleanup = (typeof callbacks.oncleanup == \"function\") ? callbacks.oncleanup : Janus.noop;\n\t\tcallbacks.ondetached = (typeof callbacks.ondetached == \"function\") ? callbacks.ondetached : Janus.noop;\n\t\tif (!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar plugin = callbacks.plugin;\n\t\tif (!plugin) {\n\t\t\tJanus.error(\"Invalid plugin\");\n\t\t\tcallbacks.error(\"Invalid plugin\");\n\t\t\treturn;\n\t\t}\n\t\tvar opaqueId = callbacks.opaqueId;\n\t\tvar handleToken = callbacks.token ? callbacks.token : token;\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"attach\", \"plugin\": plugin, \"opaque_id\": opaqueId, \"transaction\": transaction };\n\t\tif (handleToken)\n\t\t\trequest[\"token\"] = handleToken;\n\t\tif (apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif (websockets) {\n\t\t\ttransactions[transaction] = function (json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif (json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar handleId = json.data[\"id\"];\n\t\t\t\tJanus.log(\"Created handle: \" + handleId);\n\t\t\t\tvar pluginHandle =\n\t\t\t\t{\n\t\t\t\t\tsession: that,\n\t\t\t\t\tplugin: plugin,\n\t\t\t\t\tid: handleId,\n\t\t\t\t\ttoken: handleToken,\n\t\t\t\t\tdetached: false,\n\t\t\t\t\twebrtcStuff: {\n\t\t\t\t\t\tstarted: false,\n\t\t\t\t\t\tmyStream: null,\n\t\t\t\t\t\tstreamExternal: false,\n\t\t\t\t\t\tremoteStream: null,\n\t\t\t\t\t\tmySdp: null,\n\t\t\t\t\t\tmediaConstraints: null,\n\t\t\t\t\t\tpc: null,\n\t\t\t\t\t\tdataChannel: {},\n\t\t\t\t\t\tdtmfSender: null,\n\t\t\t\t\t\ttrickle: true,\n\t\t\t\t\t\ticeDone: false,\n\t\t\t\t\t\tvolume: {\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\ttimer: null\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbitrate: {\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tbsnow: null,\n\t\t\t\t\t\t\tbsbefore: null,\n\t\t\t\t\t\t\ttsnow: null,\n\t\t\t\t\t\t\ttsbefore: null,\n\t\t\t\t\t\t\ttimer: null\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tgetId: function () { return handleId; },\n\t\t\t\t\tgetPlugin: function () { return plugin; },\n\t\t\t\t\tgetVolume: function () { return getVolume(handleId, true); },\n\t\t\t\t\tgetRemoteVolume: function () { return getVolume(handleId, true); },\n\t\t\t\t\tgetLocalVolume: function () { return getVolume(handleId, false); },\n\t\t\t\t\tisAudioMuted: function () { return isMuted(handleId, false); },\n\t\t\t\t\tmuteAudio: function () { return mute(handleId, false, true); },\n\t\t\t\t\tunmuteAudio: function () { return mute(handleId, false, false); },\n\t\t\t\t\tisVideoMuted: function () { return isMuted(handleId, true); },\n\t\t\t\t\tmuteVideo: function () { return mute(handleId, true, true); },\n\t\t\t\t\tunmuteVideo: function () { return mute(handleId, true, false); },\n\t\t\t\t\tgetBitrate: function () { return getBitrate(handleId); },\n\t\t\t\t\tsend: function (callbacks) { sendMessage(handleId, callbacks); },\n\t\t\t\t\tdata: function (callbacks) { sendData(handleId, callbacks); },\n\t\t\t\t\tdtmf: function (callbacks) { sendDtmf(handleId, callbacks); },\n\t\t\t\t\tconsentDialog: callbacks.consentDialog,\n\t\t\t\t\ticeState: callbacks.iceState,\n\t\t\t\t\tmediaState: callbacks.mediaState,\n\t\t\t\t\twebrtcState: callbacks.webrtcState,\n\t\t\t\t\tslowLink: callbacks.slowLink,\n\t\t\t\t\tonmessage: callbacks.onmessage,\n\t\t\t\t\tcreateOffer: function (callbacks) { prepareWebrtc(handleId, true, callbacks); },\n\t\t\t\t\tcreateAnswer: function (callbacks) { prepareWebrtc(handleId, false, callbacks); },\n\t\t\t\t\thandleRemoteJsep: function (callbacks) { prepareWebrtcPeer(handleId, callbacks); },\n\t\t\t\t\tonlocalstream: callbacks.onlocalstream,\n\t\t\t\t\tonremotestream: callbacks.onremotestream,\n\t\t\t\t\tondata: callbacks.ondata,\n\t\t\t\t\tondataopen: callbacks.ondataopen,\n\t\t\t\t\toncleanup: callbacks.oncleanup,\n\t\t\t\t\tondetached: callbacks.ondetached,\n\t\t\t\t\thangup: function (sendRequest) { cleanupWebrtc(handleId, sendRequest === true); },\n\t\t\t\t\tdetach: function (callbacks) { destroyHandle(handleId, callbacks); }\n\t\t\t\t};\n\t\t\t\tpluginHandles[handleId] = pluginHandle;\n\t\t\t\tcallbacks.success(pluginHandle);\n\t\t\t};\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function (json) {\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif (json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\tcallbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar handleId = json.data[\"id\"];\n\t\t\t\tJanus.log(\"Created handle: \" + handleId);\n\t\t\t\tvar pluginHandle =\n\t\t\t\t{\n\t\t\t\t\tsession: that,\n\t\t\t\t\tplugin: plugin,\n\t\t\t\t\tid: handleId,\n\t\t\t\t\ttoken: handleToken,\n\t\t\t\t\tdetached: false,\n\t\t\t\t\twebrtcStuff: {\n\t\t\t\t\t\tstarted: false,\n\t\t\t\t\t\tmyStream: null,\n\t\t\t\t\t\tstreamExternal: false,\n\t\t\t\t\t\tremoteStream: null,\n\t\t\t\t\t\tmySdp: null,\n\t\t\t\t\t\tmediaConstraints: null,\n\t\t\t\t\t\tpc: null,\n\t\t\t\t\t\tdataChannel: {},\n\t\t\t\t\t\tdtmfSender: null,\n\t\t\t\t\t\ttrickle: true,\n\t\t\t\t\t\ticeDone: false,\n\t\t\t\t\t\tvolume: {\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\ttimer: null\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbitrate: {\n\t\t\t\t\t\t\tvalue: null,\n\t\t\t\t\t\t\tbsnow: null,\n\t\t\t\t\t\t\tbsbefore: null,\n\t\t\t\t\t\t\ttsnow: null,\n\t\t\t\t\t\t\ttsbefore: null,\n\t\t\t\t\t\t\ttimer: null\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tgetId: function () { return handleId; },\n\t\t\t\t\tgetPlugin: function () { return plugin; },\n\t\t\t\t\tgetVolume: function () { return getVolume(handleId, true); },\n\t\t\t\t\tgetRemoteVolume: function () { return getVolume(handleId, true); },\n\t\t\t\t\tgetLocalVolume: function () { return getVolume(handleId, false); },\n\t\t\t\t\tisAudioMuted: function () { return isMuted(handleId, false); },\n\t\t\t\t\tmuteAudio: function () { return mute(handleId, false, true); },\n\t\t\t\t\tunmuteAudio: function () { return mute(handleId, false, false); },\n\t\t\t\t\tisVideoMuted: function () { return isMuted(handleId, true); },\n\t\t\t\t\tmuteVideo: function () { return mute(handleId, true, true); },\n\t\t\t\t\tunmuteVideo: function () { return mute(handleId, true, false); },\n\t\t\t\t\tgetBitrate: function () { return getBitrate(handleId); },\n\t\t\t\t\tsend: function (callbacks) { sendMessage(handleId, callbacks); },\n\t\t\t\t\tdata: function (callbacks) { sendData(handleId, callbacks); },\n\t\t\t\t\tdtmf: function (callbacks) { sendDtmf(handleId, callbacks); },\n\t\t\t\t\tconsentDialog: callbacks.consentDialog,\n\t\t\t\t\ticeState: callbacks.iceState,\n\t\t\t\t\tmediaState: callbacks.mediaState,\n\t\t\t\t\twebrtcState: callbacks.webrtcState,\n\t\t\t\t\tslowLink: callbacks.slowLink,\n\t\t\t\t\tonmessage: callbacks.onmessage,\n\t\t\t\t\tcreateOffer: function (callbacks) { prepareWebrtc(handleId, true, callbacks); },\n\t\t\t\t\tcreateAnswer: function (callbacks) { prepareWebrtc(handleId, false, callbacks); },\n\t\t\t\t\thandleRemoteJsep: function (callbacks) { prepareWebrtcPeer(handleId, callbacks); },\n\t\t\t\t\tonlocalstream: callbacks.onlocalstream,\n\t\t\t\t\tonremotestream: callbacks.onremotestream,\n\t\t\t\t\tondata: callbacks.ondata,\n\t\t\t\t\tondataopen: callbacks.ondataopen,\n\t\t\t\t\toncleanup: callbacks.oncleanup,\n\t\t\t\t\tondetached: callbacks.ondetached,\n\t\t\t\t\thangup: function (sendRequest) { cleanupWebrtc(handleId, sendRequest === true); },\n\t\t\t\t\tdetach: function (callbacks) { destroyHandle(handleId, callbacks); }\n\t\t\t\t}\n\t\t\t\tpluginHandles[handleId] = pluginHandle;\n\t\t\t\tcallbacks.success(pluginHandle);\n\t\t\t},\n\t\t\terror: function (textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tif (errorThrown === \"\")\n\t\t\t\t\tcallbacks.error(textStatus + \": Is the server down?\");\n\t\t\t\telse\n\t\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to send a message\n\tfunction sendMessage(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tif (!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar message = callbacks.message;\n\t\tvar jsep = callbacks.jsep;\n\t\tvar transaction = Janus.randomString(12);\n\t\tvar request = { \"janus\": \"message\", \"body\": message, \"transaction\": transaction };\n\t\tif (pluginHandle.token)\n\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\tif (apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif (jsep) {\n\t\t\trequest.jsep = {\n\t\t\t\ttype: jsep.type,\n\t\t\t\tsdp: jsep.sdp\n\t\t\t};\n\t\t\tif (jsep.e2ee)\n\t\t\t\trequest.jsep.e2ee = true;\n\t\t\tif (jsep.rid_order === \"hml\" || jsep.rid_order === \"lmh\")\n\t\t\t\trequest.jsep.rid_order = jsep.rid_order;\n\t\t}\n\t\tJanus.debug(\"Sending message to plugin (handle=\" + handleId + \"):\");\n\t\tJanus.debug(request);\n\t\tif (websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\ttransactions[transaction] = function (json) {\n\t\t\t\tJanus.debug(\"Message sent!\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif (json[\"janus\"] === \"success\") {\n\t\t\t\t\t// We got a success, must have been a synchronous transaction\n\t\t\t\t\tvar plugindata = json[\"plugindata\"];\n\t\t\t\t\tif (!plugindata) {\n\t\t\t\t\t\tJanus.warn(\"Request succeeded, but missing plugindata...\");\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n\t\t\t\t\tvar data = plugindata[\"data\"];\n\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\tcallbacks.success(data);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (json[\"janus\"] !== \"ack\") {\n\t\t\t\t\t// Not a success and not an ack, must be an error\n\t\t\t\t\tif (json[\"error\"]) {\n\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\tcallbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.error(\"Unknown error\");\t// FIXME\n\t\t\t\t\t\tcallbacks.error(\"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If we got here, the plugin decided to handle the request asynchronously\n\t\t\t\tcallbacks.success();\n\t\t\t};\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function (json) {\n\t\t\t\tJanus.debug(\"Message sent!\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif (json[\"janus\"] === \"success\") {\n\t\t\t\t\t// We got a success, must have been a synchronous transaction\n\t\t\t\t\tvar plugindata = json[\"plugindata\"];\n\t\t\t\t\tif (!plugindata) {\n\t\t\t\t\t\tJanus.warn(\"Request succeeded, but missing plugindata...\");\n\t\t\t\t\t\tcallbacks.success();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n\t\t\t\t\tvar data = plugindata[\"data\"];\n\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\tcallbacks.success(data);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (json[\"janus\"] !== \"ack\") {\n\t\t\t\t\t// Not a success and not an ack, must be an error\n\t\t\t\t\tif (json[\"error\"]) {\n\t\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\t\tcallbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tJanus.error(\"Unknown error\");\t// FIXME\n\t\t\t\t\t\tcallbacks.error(\"Unknown error\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If we got here, the plugin decided to handle the request asynchronously\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function (textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\tcallbacks.error(textStatus + \": \" + errorThrown);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to send a trickle candidate\n\tfunction sendTrickleCandidate(handleId, candidate) {\n\t\tif (!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar request = { \"janus\": \"trickle\", \"candidate\": candidate, \"transaction\": Janus.randomString(12) };\n\t\tif (pluginHandle.token)\n\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\tif (apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tJanus.vdebug(\"Sending trickle candidate (handle=\" + handleId + \"):\");\n\t\tJanus.vdebug(request);\n\t\tif (websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function (json) {\n\t\t\t\tJanus.vdebug(\"Candidate sent!\");\n\t\t\t\tJanus.vdebug(json);\n\t\t\t\tif (json[\"janus\"] !== \"ack\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function (textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t}\n\t\t});\n\t}\n\n\t// Private method to create a data channel\n\tfunction createDataChannel(handleId, dclabel, dcprotocol, incoming, pendingData) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif (!config.pc) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn;\n\t\t}\n\t\tvar onDataChannelMessage = function (event) {\n\t\t\tJanus.log('Received message on data channel:', event);\n\t\t\tvar label = event.target.label;\n\t\t\tpluginHandle.ondata(event.data, label);\n\t\t};\n\t\tvar onDataChannelStateChange = function (event) {\n\t\t\tJanus.log('Received state change on data channel:', event);\n\t\t\tvar label = event.target.label;\n\t\t\tvar protocol = event.target.protocol;\n\t\t\tvar dcState = config.dataChannel[label] ? config.dataChannel[label].readyState : \"null\";\n\t\t\tJanus.log('State change on <' + label + '> data channel: ' + dcState);\n\t\t\tif (dcState === 'open') {\n\t\t\t\t// Any pending messages to send?\n\t\t\t\tif (config.dataChannel[label].pending && config.dataChannel[label].pending.length > 0) {\n\t\t\t\t\tJanus.log(\"Sending pending messages on <\" + label + \">:\", config.dataChannel[label].pending.length);\n\t\t\t\t\tfor (var data of config.dataChannel[label].pending) {\n\t\t\t\t\t\tJanus.log(\"Sending data on data channel <\" + label + \">\");\n\t\t\t\t\t\tJanus.debug(data);\n\t\t\t\t\t\tconfig.dataChannel[label].send(data);\n\t\t\t\t\t}\n\t\t\t\t\tconfig.dataChannel[label].pending = [];\n\t\t\t\t}\n\t\t\t\t// Notify the open data channel\n\t\t\t\tpluginHandle.ondataopen(label, protocol);\n\t\t\t}\n\t\t};\n\t\tvar onDataChannelError = function (error) {\n\t\t\tJanus.error('Got error on data channel:', error);\n\t\t\t// TODO\n\t\t};\n\t\tif (!incoming) {\n\t\t\t// FIXME Add options (ordered, maxRetransmits, etc.)\n\t\t\tvar dcoptions = { ordered: true };\n\t\t\tif (dcprotocol)\n\t\t\t\tdcoptions.protocol = dcprotocol;\n\t\t\tconfig.dataChannel[dclabel] = config.pc.createDataChannel(dclabel, dcoptions);\n\t\t} else {\n\t\t\t// The channel was created by Janus\n\t\t\tconfig.dataChannel[dclabel] = incoming;\n\t\t}\n\t\tconfig.dataChannel[dclabel].onmessage = onDataChannelMessage;\n\t\tconfig.dataChannel[dclabel].onopen = onDataChannelStateChange;\n\t\tconfig.dataChannel[dclabel].onclose = onDataChannelStateChange;\n\t\tconfig.dataChannel[dclabel].onerror = onDataChannelError;\n\t\tconfig.dataChannel[dclabel].pending = [];\n\t\tif (pendingData)\n\t\t\tconfig.dataChannel[dclabel].pending.push(pendingData);\n\t}\n\n\t// Private method to send a data channel message\n\tfunction sendData(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar data = callbacks.text || callbacks.data;\n\t\tif (!data) {\n\t\t\tJanus.warn(\"Invalid data\");\n\t\t\tcallbacks.error(\"Invalid data\");\n\t\t\treturn;\n\t\t}\n\t\tvar label = callbacks.label ? callbacks.label : Janus.dataChanDefaultLabel;\n\t\tif (!config.dataChannel[label]) {\n\t\t\t// Create new data channel and wait for it to open\n\t\t\tcreateDataChannel(handleId, label, callbacks.protocol, false, data, callbacks.protocol);\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif (config.dataChannel[label].readyState !== \"open\") {\n\t\t\tconfig.dataChannel[label].pending.push(data);\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tJanus.log(\"Sending data on data channel <\" + label + \">\");\n\t\tJanus.debug(data);\n\t\tconfig.dataChannel[label].send(data);\n\t\tcallbacks.success();\n\t}\n\n\t// Private method to send a DTMF tone\n\tfunction sendDtmf(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif (!config.dtmfSender) {\n\t\t\t// Create the DTMF sender the proper way, if possible\n\t\t\tif (config.pc) {\n\t\t\t\tvar senders = config.pc.getSenders();\n\t\t\t\tvar audioSender = senders.find(function (sender) {\n\t\t\t\t\treturn sender.track && sender.track.kind === 'audio';\n\t\t\t\t});\n\t\t\t\tif (!audioSender) {\n\t\t\t\t\tJanus.warn(\"Invalid DTMF configuration (no audio track)\");\n\t\t\t\t\tcallbacks.error(\"Invalid DTMF configuration (no audio track)\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconfig.dtmfSender = audioSender.dtmf;\n\t\t\t\tif (config.dtmfSender) {\n\t\t\t\t\tJanus.log(\"Created DTMF Sender\");\n\t\t\t\t\tconfig.dtmfSender.ontonechange = function (tone) { Janus.debug(\"Sent DTMF tone: \" + tone.tone); };\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!config.dtmfSender) {\n\t\t\t\tJanus.warn(\"Invalid DTMF configuration\");\n\t\t\t\tcallbacks.error(\"Invalid DTMF configuration\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tvar dtmf = callbacks.dtmf;\n\t\tif (!dtmf) {\n\t\t\tJanus.warn(\"Invalid DTMF parameters\");\n\t\t\tcallbacks.error(\"Invalid DTMF parameters\");\n\t\t\treturn;\n\t\t}\n\t\tvar tones = dtmf.tones;\n\t\tif (!tones) {\n\t\t\tJanus.warn(\"Invalid DTMF string\");\n\t\t\tcallbacks.error(\"Invalid DTMF string\");\n\t\t\treturn;\n\t\t}\n\t\tvar duration = (typeof dtmf.duration === 'number') ? dtmf.duration : 500; // We choose 500ms as the default duration for a tone\n\t\tvar gap = (typeof dtmf.gap === 'number') ? dtmf.gap : 50; // We choose 50ms as the default gap between tones\n\t\tJanus.debug(\"Sending DTMF string \" + tones + \" (duration \" + duration + \"ms, gap \" + gap + \"ms)\");\n\t\tconfig.dtmfSender.insertDTMF(tones, duration, gap);\n\t\tcallbacks.success();\n\t}\n\n\t// Private method to destroy a plugin handle\n\tfunction destroyHandle(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar noRequest = (callbacks.noRequest === true);\n\t\tJanus.log(\"Destroying handle \" + handleId + \" (only-locally=\" + noRequest + \")\");\n\t\tcleanupWebrtc(handleId);\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || pluginHandle.detached) {\n\t\t\t// Plugin was already detached by Janus, calling detach again will return a handle not found error, so just exit here\n\t\t\tdelete pluginHandles[handleId];\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tpluginHandle.detached = true;\n\t\tif (noRequest) {\n\t\t\t// We're only removing the handle locally\n\t\t\tdelete pluginHandles[handleId];\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tif (!connected) {\n\t\t\tJanus.warn(\"Is the server down? (connected=false)\");\n\t\t\tcallbacks.error(\"Is the server down? (connected=false)\");\n\t\t\treturn;\n\t\t}\n\t\tvar request = { \"janus\": \"detach\", \"transaction\": Janus.randomString(12) };\n\t\tif (pluginHandle.token)\n\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\tif (apisecret)\n\t\t\trequest[\"apisecret\"] = apisecret;\n\t\tif (websockets) {\n\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\tws.send(JSON.stringify(request));\n\t\t\tdelete pluginHandles[handleId];\n\t\t\tcallbacks.success();\n\t\t\treturn;\n\t\t}\n\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\tverb: 'POST',\n\t\t\twithCredentials: withCredentials,\n\t\t\tbody: request,\n\t\t\tsuccess: function (json) {\n\t\t\t\tJanus.log(\"Destroyed handle:\");\n\t\t\t\tJanus.debug(json);\n\t\t\t\tif (json[\"janus\"] !== \"success\") {\n\t\t\t\t\tJanus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\t// FIXME\n\t\t\t\t}\n\t\t\t\tdelete pluginHandles[handleId];\n\t\t\t\tcallbacks.success();\n\t\t\t},\n\t\t\terror: function (textStatus, errorThrown) {\n\t\t\t\tJanus.error(textStatus + \":\", errorThrown);\t// FIXME\n\t\t\t\t// We cleanup anyway\n\t\t\t\tdelete pluginHandles[handleId];\n\t\t\t\tcallbacks.success();\n\t\t\t}\n\t\t});\n\t}\n\n\t// WebRTC stuff\n\tfunction streamsDone(handleId, jsep, media, callbacks, stream) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\t// Close all tracks if the given stream has been created internally\n\t\t\tif (!callbacks.stream) {\n\t\t\t\tJanus.stopAllTracks(stream);\n\t\t\t}\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tJanus.debug(\"streamsDone:\", stream);\n\t\tif (stream) {\n\t\t\tJanus.debug(\"  -- Audio tracks:\", stream.getAudioTracks());\n\t\t\tJanus.debug(\"  -- Video tracks:\", stream.getVideoTracks());\n\t\t}\n\t\t// We're now capturing the new stream: check if we're updating or if it's a new thing\n\t\tvar addTracks = false;\n\t\tif (!config.myStream || !media.update || (config.streamExternal && !media.replaceAudio && !media.replaceVideo)) {\n\t\t\tconfig.myStream = stream;\n\t\t\taddTracks = true;\n\t\t} else {\n\t\t\t// We only need to update the existing stream\n\t\t\tif (((!media.update && isAudioSendEnabled(media)) || (media.update && (media.addAudio || media.replaceAudio))) &&\n\t\t\t\tstream.getAudioTracks() && stream.getAudioTracks().length) {\n\t\t\t\tconfig.myStream.addTrack(stream.getAudioTracks()[0]);\n\t\t\t\tif (Janus.unifiedPlan) {\n\t\t\t\t\t// Use Transceivers\n\t\t\t\t\tJanus.log((media.replaceAudio ? \"Replacing\" : \"Adding\") + \" audio track:\", stream.getAudioTracks()[0]);\n\t\t\t\t\tvar audioTransceiver = null;\n\t\t\t\t\tvar transceivers = config.pc.getTransceivers();\n\t\t\t\t\tif (transceivers && transceivers.length > 0) {\n\t\t\t\t\t\tfor (var t of transceivers) {\n\t\t\t\t\t\t\tif ((t.sender && t.sender.track && t.sender.track.kind === \"audio\") ||\n\t\t\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\")) {\n\t\t\t\t\t\t\t\taudioTransceiver = t;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (audioTransceiver && audioTransceiver.sender) {\n\t\t\t\t\t\taudioTransceiver.sender.replaceTrack(stream.getAudioTracks()[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconfig.pc.addTrack(stream.getAudioTracks()[0], stream);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tJanus.log((media.replaceAudio ? \"Replacing\" : \"Adding\") + \" audio track:\", stream.getAudioTracks()[0]);\n\t\t\t\t\tconfig.pc.addTrack(stream.getAudioTracks()[0], stream);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (((!media.update && isVideoSendEnabled(media)) || (media.update && (media.addVideo || media.replaceVideo))) &&\n\t\t\t\tstream.getVideoTracks() && stream.getVideoTracks().length) {\n\t\t\t\tconfig.myStream.addTrack(stream.getVideoTracks()[0]);\n\t\t\t\tif (Janus.unifiedPlan) {\n\t\t\t\t\t// Use Transceivers\n\t\t\t\t\tJanus.log((media.replaceVideo ? \"Replacing\" : \"Adding\") + \" video track:\", stream.getVideoTracks()[0]);\n\t\t\t\t\tvar videoTransceiver = null;\n\t\t\t\t\tvar transceivers = config.pc.getTransceivers();\n\t\t\t\t\tif (transceivers && transceivers.length > 0) {\n\t\t\t\t\t\tfor (var t of transceivers) {\n\t\t\t\t\t\t\tif ((t.sender && t.sender.track && t.sender.track.kind === \"video\") ||\n\t\t\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"video\")) {\n\t\t\t\t\t\t\t\tvideoTransceiver = t;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (videoTransceiver && videoTransceiver.sender) {\n\t\t\t\t\t\tvideoTransceiver.sender.replaceTrack(stream.getVideoTracks()[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconfig.pc.addTrack(stream.getVideoTracks()[0], stream);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tJanus.log((media.replaceVideo ? \"Replacing\" : \"Adding\") + \" video track:\", stream.getVideoTracks()[0]);\n\t\t\t\t\tconfig.pc.addTrack(stream.getVideoTracks()[0], stream);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If we still need to create a PeerConnection, let's do that\n\t\tif (!config.pc) {\n\t\t\tvar pc_config = { \"iceServers\": iceServers, \"iceTransportPolicy\": iceTransportPolicy, \"bundlePolicy\": bundlePolicy };\n\t\t\tif (Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n\t\t\t\t// For Chrome versions before 72, we force a plan-b semantic, and unified-plan otherwise\n\t\t\t\tpc_config[\"sdpSemantics\"] = (Janus.webRTCAdapter.browserDetails.version < 72) ? \"plan-b\" : \"unified-plan\";\n\t\t\t}\n\t\t\tvar pc_constraints = {\n\t\t\t\t\"optional\": [{ \"DtlsSrtpKeyAgreement\": true }]\n\t\t\t};\n\t\t\tif (ipv6Support) {\n\t\t\t\tpc_constraints.optional.push({ \"googIPv6\": true });\n\t\t\t}\n\t\t\t// Any custom constraint to add?\n\t\t\tif (callbacks.rtcConstraints && typeof callbacks.rtcConstraints === 'object') {\n\t\t\t\tJanus.debug(\"Adding custom PeerConnection constraints:\", callbacks.rtcConstraints);\n\t\t\t\tfor (var i in callbacks.rtcConstraints) {\n\t\t\t\t\tpc_constraints.optional.push(callbacks.rtcConstraints[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n\t\t\t\t// This is Edge, enable BUNDLE explicitly\n\t\t\t\tpc_config.bundlePolicy = \"max-bundle\";\n\t\t\t}\n\t\t\t// Check if a sender or receiver transform has been provided\n\t\t\tif (RTCRtpSender && (RTCRtpSender.prototype.createEncodedStreams ||\n\t\t\t\t(RTCRtpSender.prototype.createEncodedAudioStreams &&\n\t\t\t\t\tRTCRtpSender.prototype.createEncodedVideoStreams)) &&\n\t\t\t\t(callbacks.senderTransforms || callbacks.receiverTransforms)) {\n\t\t\t\tconfig.senderTransforms = callbacks.senderTransforms;\n\t\t\t\tconfig.receiverTransforms = callbacks.receiverTransforms;\n\t\t\t\tpc_config[\"forceEncodedAudioInsertableStreams\"] = true;\n\t\t\t\tpc_config[\"forceEncodedVideoInsertableStreams\"] = true;\n\t\t\t\tpc_config[\"encodedInsertableStreams\"] = true;\n\t\t\t}\n\t\t\tJanus.log(\"Creating PeerConnection\");\n\t\t\tJanus.debug(pc_constraints);\n\t\t\tconfig.pc = new RTCPeerConnection(pc_config, pc_constraints);\n\t\t\tJanus.debug(config.pc);\n\t\t\tif (config.pc.getStats) {\t// FIXME\n\t\t\t\tconfig.volume = {};\n\t\t\t\tconfig.bitrate.value = \"0 kbits/sec\";\n\t\t\t}\n\t\t\tJanus.log(\"Preparing local SDP and gathering candidates (trickle=\" + config.trickle + \")\");\n\t\t\tconfig.pc.oniceconnectionstatechange = function (e) {\n\t\t\t\tif (config.pc)\n\t\t\t\t\tpluginHandle.iceState(config.pc.iceConnectionState);\n\t\t\t};\n\t\t\tconfig.pc.onicecandidate = function (event) {\n\t\t\t\tif (!event.candidate ||\n\t\t\t\t\t(Janus.webRTCAdapter.browserDetails.browser === 'edge' && event.candidate.candidate.indexOf('endOfCandidates') > 0)) {\n\t\t\t\t\tJanus.log(\"End of candidates.\");\n\t\t\t\t\tconfig.iceDone = true;\n\t\t\t\t\tif (config.trickle === true) {\n\t\t\t\t\t\t// Notify end of candidates\n\t\t\t\t\t\tsendTrickleCandidate(handleId, { \"completed\": true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// No trickle, time to send the complete SDP (including all candidates)\n\t\t\t\t\t\tsendSDP(handleId, callbacks);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\t\tvar candidate = {\n\t\t\t\t\t\t\"candidate\": event.candidate.candidate,\n\t\t\t\t\t\t\"sdpMid\": event.candidate.sdpMid,\n\t\t\t\t\t\t\"sdpMLineIndex\": event.candidate.sdpMLineIndex\n\t\t\t\t\t};\n\t\t\t\t\tif (config.trickle === true) {\n\t\t\t\t\t\t// Send candidate\n\t\t\t\t\t\tsendTrickleCandidate(handleId, candidate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tconfig.pc.ontrack = function (event) {\n\t\t\t\tJanus.log(\"Handling Remote Track\");\n\t\t\t\tJanus.debug(event);\n\t\t\t\tif (!event.streams)\n\t\t\t\t\treturn;\n\t\t\t\tconfig.remoteStream = event.streams[0];\n\t\t\t\tpluginHandle.onremotestream(config.remoteStream);\n\t\t\t\tif (event.track.onended)\n\t\t\t\t\treturn;\n\t\t\t\tif (config.receiverTransforms) {\n\t\t\t\t\tvar receiverStreams = null;\n\t\t\t\t\tif (RTCRtpSender.prototype.createEncodedStreams) {\n\t\t\t\t\t\treceiverStreams = event.receiver.createEncodedStreams();\n\t\t\t\t\t} else if (RTCRtpSender.prototype.createAudioEncodedStreams || RTCRtpSender.prototype.createEncodedVideoStreams) {\n\t\t\t\t\t\tif (event.track.kind === \"audio\" && config.receiverTransforms[\"audio\"]) {\n\t\t\t\t\t\t\treceiverStreams = event.receiver.createEncodedAudioStreams();\n\t\t\t\t\t\t} else if (event.track.kind === \"video\" && config.receiverTransforms[\"video\"]) {\n\t\t\t\t\t\t\treceiverStreams = event.receiver.createEncodedVideoStreams();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (receiverStreams) {\n\t\t\t\t\t\tconsole.log(receiverStreams);\n\t\t\t\t\t\tif (receiverStreams.readableStream && receiverStreams.writableStream) {\n\t\t\t\t\t\t\treceiverStreams.readableStream\n\t\t\t\t\t\t\t\t.pipeThrough(config.receiverTransforms[event.track.kind])\n\t\t\t\t\t\t\t\t.pipeTo(receiverStreams.writableStream);\n\t\t\t\t\t\t} else if (receiverStreams.readable && receiverStreams.writable) {\n\t\t\t\t\t\t\treceiverStreams.readable\n\t\t\t\t\t\t\t\t.pipeThrough(config.receiverTransforms[event.track.kind])\n\t\t\t\t\t\t\t\t.pipeTo(receiverStreams.writable);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar trackMutedTimeoutId = null;\n\t\t\t\tJanus.log(\"Adding onended callback to track:\", event.track);\n\t\t\t\tevent.track.onended = function (ev) {\n\t\t\t\t\tJanus.log(\"Remote track removed:\", ev);\n\t\t\t\t\tif (config.remoteStream) {\n\t\t\t\t\t\tclearTimeout(trackMutedTimeoutId);\n\t\t\t\t\t\tconfig.remoteStream.removeTrack(ev.target);\n\t\t\t\t\t\tpluginHandle.onremotestream(config.remoteStream);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tevent.track.onmute = function (ev) {\n\t\t\t\t\tJanus.log(\"Remote track muted:\", ev);\n\t\t\t\t\tif (config.remoteStream && trackMutedTimeoutId == null) {\n\t\t\t\t\t\ttrackMutedTimeoutId = setTimeout(function () {\n\t\t\t\t\t\t\tJanus.log(\"Removing remote track\");\n\t\t\t\t\t\t\tif (config.remoteStream) {\n\t\t\t\t\t\t\t\tconfig.remoteStream.removeTrack(ev.target);\n\t\t\t\t\t\t\t\tpluginHandle.onremotestream(config.remoteStream);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttrackMutedTimeoutId = null;\n\t\t\t\t\t\t\t// Chrome seems to raise mute events only at multiples of 834ms;\n\t\t\t\t\t\t\t// we set the timeout to three times this value (rounded to 840ms)\n\t\t\t\t\t\t}, 3 * 840);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tevent.track.onunmute = function (ev) {\n\t\t\t\t\tJanus.log(\"Remote track flowing again:\", ev);\n\t\t\t\t\tif (trackMutedTimeoutId != null) {\n\t\t\t\t\t\tclearTimeout(trackMutedTimeoutId);\n\t\t\t\t\t\ttrackMutedTimeoutId = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconfig.remoteStream.addTrack(ev.target);\n\t\t\t\t\t\t\tpluginHandle.onremotestream(config.remoteStream);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\t\tif (addTracks && stream) {\n\t\t\tJanus.log('Adding local stream');\n\t\t\tvar simulcast2 = (callbacks.simulcast2 === true);\n\t\t\tstream.getTracks().forEach(function (track) {\n\t\t\t\tJanus.log('Adding local track:', track);\n\t\t\t\tvar sender = null;\n\t\t\t\tif (!simulcast2 || track.kind === 'audio') {\n\t\t\t\t\tsender = config.pc.addTrack(track, stream);\n\t\t\t\t} else {\n\t\t\t\t\tJanus.log('Enabling rid-based simulcasting:', track);\n\t\t\t\t\tvar maxBitrates = getMaxBitrates(callbacks.simulcastMaxBitrates);\n\t\t\t\t\tvar tr = config.pc.addTransceiver(track, {\n\t\t\t\t\t\tdirection: \"sendrecv\",\n\t\t\t\t\t\tstreams: [stream],\n\t\t\t\t\t\tsendEncodings: callbacks.sendEncodings || [\n\t\t\t\t\t\t\t{ rid: \"h\", active: true, maxBitrate: maxBitrates.high },\n\t\t\t\t\t\t\t{ rid: \"m\", active: true, maxBitrate: maxBitrates.medium, scaleResolutionDownBy: 2 },\n\t\t\t\t\t\t\t{ rid: \"l\", active: true, maxBitrate: maxBitrates.low, scaleResolutionDownBy: 4 }\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t\tif (tr)\n\t\t\t\t\t\tsender = tr.sender;\n\t\t\t\t}\n\t\t\t\t// Check if insertable streams are involved\n\t\t\t\tif (sender && config.senderTransforms) {\n\t\t\t\t\tvar senderStreams = null;\n\t\t\t\t\tif (RTCRtpSender.prototype.createEncodedStreams) {\n\t\t\t\t\t\tsenderStreams = sender.createEncodedStreams();\n\t\t\t\t\t} else if (RTCRtpSender.prototype.createAudioEncodedStreams || RTCRtpSender.prototype.createEncodedVideoStreams) {\n\t\t\t\t\t\tif (sender.track.kind === \"audio\" && config.senderTransforms[\"audio\"]) {\n\t\t\t\t\t\t\tsenderStreams = sender.createEncodedAudioStreams();\n\t\t\t\t\t\t} else if (sender.track.kind === \"video\" && config.senderTransforms[\"video\"]) {\n\t\t\t\t\t\t\tsenderStreams = sender.createEncodedVideoStreams();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (senderStreams) {\n\t\t\t\t\t\tconsole.log(senderStreams);\n\t\t\t\t\t\tif (senderStreams.readableStream && senderStreams.writableStream) {\n\t\t\t\t\t\t\tsenderStreams.readableStream\n\t\t\t\t\t\t\t\t.pipeThrough(config.senderTransforms[sender.track.kind])\n\t\t\t\t\t\t\t\t.pipeTo(senderStreams.writableStream);\n\t\t\t\t\t\t} else if (senderStreams.readable && senderStreams.writable) {\n\t\t\t\t\t\t\tsenderStreams.readable\n\t\t\t\t\t\t\t\t.pipeThrough(config.senderTransforms[sender.track.kind])\n\t\t\t\t\t\t\t\t.pipeTo(senderStreams.writable);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// Any data channel to create?\n\t\tif (isDataEnabled(media) && !config.dataChannel[Janus.dataChanDefaultLabel]) {\n\t\t\tJanus.log(\"Creating default data channel\");\n\t\t\tcreateDataChannel(handleId, Janus.dataChanDefaultLabel, null, false);\n\t\t\tconfig.pc.ondatachannel = function (event) {\n\t\t\t\tJanus.log(\"Data channel created by Janus:\", event);\n\t\t\t\tcreateDataChannel(handleId, event.channel.label, event.channel.protocol, event.channel);\n\t\t\t};\n\t\t}\n\t\t// If there's a new local stream, let's notify the application\n\t\tif (config.myStream) {\n\t\t\tpluginHandle.onlocalstream(config.myStream);\n\t\t}\n\t\t// Create offer/answer now\n\t\tif (!jsep) {\n\t\t\tcreateOffer(handleId, media, callbacks);\n\t\t} else {\n\t\t\tconfig.pc.setRemoteDescription(jsep)\n\t\t\t\t.then(function () {\n\t\t\t\t\tJanus.log(\"Remote description accepted!\");\n\t\t\t\t\tconfig.remoteSdp = jsep.sdp;\n\t\t\t\t\t// Any trickle candidate we cached?\n\t\t\t\t\tif (config.candidates && config.candidates.length > 0) {\n\t\t\t\t\t\tfor (var i = 0; i < config.candidates.length; i++) {\n\t\t\t\t\t\t\tvar candidate = config.candidates[i];\n\t\t\t\t\t\t\tJanus.debug(\"Adding remote candidate:\", candidate);\n\t\t\t\t\t\t\tif (!candidate || candidate.completed === true) {\n\t\t\t\t\t\t\t\t// end-of-candidates\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(Janus.endOfCandidates);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// New candidate\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(candidate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconfig.candidates = [];\n\t\t\t\t\t}\n\t\t\t\t\t// Create the answer now\n\t\t\t\t\tcreateAnswer(handleId, media, callbacks);\n\t\t\t\t}, callbacks.error);\n\t\t}\n\t}\n\n\tfunction prepareWebrtc(handleId, offer, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : webrtcError;\n\t\tvar jsep = callbacks.jsep;\n\t\tif (offer && jsep) {\n\t\t\tJanus.error(\"Provided a JSEP to a createOffer\");\n\t\t\tcallbacks.error(\"Provided a JSEP to a createOffer\");\n\t\t\treturn;\n\t\t} else if (!offer && (!jsep || !jsep.type || !jsep.sdp)) {\n\t\t\tJanus.error(\"A valid JSEP is required for createAnswer\");\n\t\t\tcallbacks.error(\"A valid JSEP is required for createAnswer\");\n\t\t\treturn;\n\t\t}\n\t\t/* Check that callbacks.media is a (not null) Object */\n\t\tcallbacks.media = (typeof callbacks.media === 'object' && callbacks.media) ? callbacks.media : { audio: true, video: true };\n\t\tvar media = callbacks.media;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tconfig.trickle = isTrickleEnabled(callbacks.trickle);\n\t\t// Are we updating a session?\n\t\tif (!config.pc) {\n\t\t\t// Nope, new PeerConnection\n\t\t\tmedia.update = false;\n\t\t\tmedia.keepAudio = false;\n\t\t\tmedia.keepVideo = false;\n\t\t} else {\n\t\t\tJanus.log(\"Updating existing media session\");\n\t\t\tmedia.update = true;\n\t\t\t// Check if there's anything to add/remove/replace, or if we\n\t\t\t// can go directly to preparing the new SDP offer or answer\n\t\t\tif (callbacks.stream) {\n\t\t\t\t// External stream: is this the same as the one we were using before?\n\t\t\t\tif (callbacks.stream !== config.myStream) {\n\t\t\t\t\tJanus.log(\"Renegotiation involves a new external stream\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Check if there are changes on audio\n\t\t\t\tif (media.addAudio) {\n\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\tmedia.removeAudio = false;\n\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t\tif (config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n\t\t\t\t\t\tJanus.error(\"Can't add audio stream, there already is one\");\n\t\t\t\t\t\tcallbacks.error(\"Can't add audio stream, there already is one\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (media.removeAudio) {\n\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\tmedia.addAudio = false;\n\t\t\t\t\tmedia.audioSend = false;\n\t\t\t\t} else if (media.replaceAudio) {\n\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\tmedia.addAudio = false;\n\t\t\t\t\tmedia.removeAudio = false;\n\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t}\n\t\t\t\tif (!config.myStream) {\n\t\t\t\t\t// No media stream: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\tif (media.replaceAudio) {\n\t\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (isAudioSendEnabled(media)) {\n\t\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n\t\t\t\t\t\t// No audio track: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\t\tif (media.replaceAudio) {\n\t\t\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\t\t\tmedia.replaceAudio = false;\n\t\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t\t\tmedia.audioSend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isAudioSendEnabled(media)) {\n\t\t\t\t\t\t\tmedia.keepAudio = false;\n\t\t\t\t\t\t\tmedia.addAudio = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We have an audio track: should we keep it as it is?\n\t\t\t\t\t\tif (isAudioSendEnabled(media) &&\n\t\t\t\t\t\t\t!media.removeAudio && !media.replaceAudio) {\n\t\t\t\t\t\t\tmedia.keepAudio = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Check if there are changes on video\n\t\t\t\tif (media.addVideo) {\n\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\tmedia.removeVideo = false;\n\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t\tif (config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n\t\t\t\t\t\tJanus.error(\"Can't add video stream, there already is one\");\n\t\t\t\t\t\tcallbacks.error(\"Can't add video stream, there already is one\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (media.removeVideo) {\n\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\tmedia.addVideo = false;\n\t\t\t\t\tmedia.videoSend = false;\n\t\t\t\t} else if (media.replaceVideo) {\n\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\tmedia.addVideo = false;\n\t\t\t\t\tmedia.removeVideo = false;\n\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t}\n\t\t\t\tif (!config.myStream) {\n\t\t\t\t\t// No media stream: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\tif (media.replaceVideo) {\n\t\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (isVideoSendEnabled(media)) {\n\t\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n\t\t\t\t\t\t// No video track: if we were asked to replace, it's actually an \"add\"\n\t\t\t\t\t\tif (media.replaceVideo) {\n\t\t\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\t\t\tmedia.replaceVideo = false;\n\t\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t\t\tmedia.videoSend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isVideoSendEnabled(media)) {\n\t\t\t\t\t\t\tmedia.keepVideo = false;\n\t\t\t\t\t\t\tmedia.addVideo = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We have a video track: should we keep it as it is?\n\t\t\t\t\t\tif (isVideoSendEnabled(media) && !media.removeVideo && !media.replaceVideo) {\n\t\t\t\t\t\t\tmedia.keepVideo = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Data channels can only be added\n\t\t\t\tif (media.addData) {\n\t\t\t\t\tmedia.data = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If we're updating and keeping all tracks, let's skip the getUserMedia part\n\t\t\tif ((isAudioSendEnabled(media) && media.keepAudio) &&\n\t\t\t\t(isVideoSendEnabled(media) && media.keepVideo)) {\n\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, config.myStream);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// If we're updating, check if we need to remove/replace one of the tracks\n\t\tif (media.update && (!config.streamExternal || (config.streamExternal && (media.replaceAudio || media.replaceVideo)))) {\n\t\t\tif (media.removeAudio || media.replaceAudio) {\n\t\t\t\tif (config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n\t\t\t\t\tvar at = config.myStream.getAudioTracks()[0];\n\t\t\t\t\tJanus.log(\"Removing audio track:\", at);\n\t\t\t\t\tconfig.myStream.removeTrack(at);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tat.stop();\n\t\t\t\t\t} catch (e) { }\n\t\t\t\t}\n\t\t\t\tif (config.pc.getSenders() && config.pc.getSenders().length) {\n\t\t\t\t\tvar ra = true;\n\t\t\t\t\tif (media.replaceAudio && Janus.unifiedPlan) {\n\t\t\t\t\t\t// We can use replaceTrack\n\t\t\t\t\t\tra = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (ra) {\n\t\t\t\t\t\tfor (var asnd of config.pc.getSenders()) {\n\t\t\t\t\t\t\tif (asnd && asnd.track && asnd.track.kind === \"audio\") {\n\t\t\t\t\t\t\t\tJanus.log(\"Removing audio sender:\", asnd);\n\t\t\t\t\t\t\t\tconfig.pc.removeTrack(asnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (media.removeVideo || media.replaceVideo) {\n\t\t\t\tif (config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n\t\t\t\t\tvar vt = config.myStream.getVideoTracks()[0];\n\t\t\t\t\tJanus.log(\"Removing video track:\", vt);\n\t\t\t\t\tconfig.myStream.removeTrack(vt);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvt.stop();\n\t\t\t\t\t} catch (e) { }\n\t\t\t\t}\n\t\t\t\tif (config.pc.getSenders() && config.pc.getSenders().length) {\n\t\t\t\t\tvar rv = true;\n\t\t\t\t\tif (media.replaceVideo && Janus.unifiedPlan) {\n\t\t\t\t\t\t// We can use replaceTrack\n\t\t\t\t\t\trv = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (rv) {\n\t\t\t\t\t\tfor (var vsnd of config.pc.getSenders()) {\n\t\t\t\t\t\t\tif (vsnd && vsnd.track && vsnd.track.kind === \"video\") {\n\t\t\t\t\t\t\t\tJanus.log(\"Removing video sender:\", vsnd);\n\t\t\t\t\t\t\t\tconfig.pc.removeTrack(vsnd);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Was a MediaStream object passed, or do we need to take care of that?\n\t\tif (callbacks.stream) {\n\t\t\tvar stream = callbacks.stream;\n\t\t\tJanus.log(\"MediaStream provided by the application\");\n\t\t\tJanus.debug(stream);\n\t\t\t// If this is an update, let's check if we need to release the previous stream\n\t\t\tif (media.update && config.myStream && config.myStream !== callbacks.stream && !config.streamExternal && !media.replaceAudio && !media.replaceVideo) {\n\t\t\t\t// We're replacing a stream we captured ourselves with an external one\n\t\t\t\tJanus.stopAllTracks(config.myStream);\n\t\t\t\tconfig.myStream = null;\n\t\t\t}\n\t\t\t// Skip the getUserMedia part\n\t\t\tconfig.streamExternal = true;\n\t\t\tpluginHandle.consentDialog(false);\n\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\treturn;\n\t\t}\n\t\tif (isAudioSendEnabled(media) || isVideoSendEnabled(media)) {\n\t\t\tif (!Janus.isGetUserMediaAvailable()) {\n\t\t\t\tcallbacks.error(\"getUserMedia not available\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar constraints = { mandatory: {}, optional: [] };\n\t\t\tpluginHandle.consentDialog(true);\n\t\t\tvar audioSupport = isAudioSendEnabled(media);\n\t\t\tif (audioSupport && media && typeof media.audio === 'object')\n\t\t\t\taudioSupport = media.audio;\n\t\t\tvar videoSupport = isVideoSendEnabled(media);\n\t\t\tif (videoSupport && media) {\n\t\t\t\tvar simulcast = (callbacks.simulcast === true);\n\t\t\t\tvar simulcast2 = (callbacks.simulcast2 === true);\n\t\t\t\tif ((simulcast || simulcast2) && !jsep && !media.video)\n\t\t\t\t\tmedia.video = \"hires\";\n\t\t\t\tif (media.video && media.video != 'screen' && media.video != 'window') {\n\t\t\t\t\tif (typeof media.video === 'object') {\n\t\t\t\t\t\tvideoSupport = media.video;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar width = 0;\n\t\t\t\t\t\tvar height = 0, maxHeight = 0;\n\t\t\t\t\t\tif (media.video === 'lowres') {\n\t\t\t\t\t\t\t// Small resolution, 4:3\n\t\t\t\t\t\t\theight = 240;\n\t\t\t\t\t\t\tmaxHeight = 240;\n\t\t\t\t\t\t\twidth = 320;\n\t\t\t\t\t\t} else if (media.video === 'lowres-16:9') {\n\t\t\t\t\t\t\t// Small resolution, 16:9\n\t\t\t\t\t\t\theight = 180;\n\t\t\t\t\t\t\tmaxHeight = 180;\n\t\t\t\t\t\t\twidth = 320;\n\t\t\t\t\t\t} else if (media.video === 'hires' || media.video === 'hires-16:9' || media.video === 'hdres') {\n\t\t\t\t\t\t\t// High(HD) resolution is only 16:9\n\t\t\t\t\t\t\theight = 720;\n\t\t\t\t\t\t\tmaxHeight = 720;\n\t\t\t\t\t\t\twidth = 1280;\n\t\t\t\t\t\t} else if (media.video === 'fhdres') {\n\t\t\t\t\t\t\t// Full HD resolution is only 16:9\n\t\t\t\t\t\t\theight = 1080;\n\t\t\t\t\t\t\tmaxHeight = 1080;\n\t\t\t\t\t\t\twidth = 1920;\n\t\t\t\t\t\t} else if (media.video === '4kres') {\n\t\t\t\t\t\t\t// 4K resolution is only 16:9\n\t\t\t\t\t\t\theight = 2160;\n\t\t\t\t\t\t\tmaxHeight = 2160;\n\t\t\t\t\t\t\twidth = 3840;\n\t\t\t\t\t\t} else if (media.video === 'stdres') {\n\t\t\t\t\t\t\t// Normal resolution, 4:3\n\t\t\t\t\t\t\theight = 480;\n\t\t\t\t\t\t\tmaxHeight = 480;\n\t\t\t\t\t\t\twidth = 640;\n\t\t\t\t\t\t} else if (media.video === 'stdres-16:9') {\n\t\t\t\t\t\t\t// Normal resolution, 16:9\n\t\t\t\t\t\t\theight = 360;\n\t\t\t\t\t\t\tmaxHeight = 360;\n\t\t\t\t\t\t\twidth = 640;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tJanus.log(\"Default video setting is stdres 4:3\");\n\t\t\t\t\t\t\theight = 480;\n\t\t\t\t\t\t\tmaxHeight = 480;\n\t\t\t\t\t\t\twidth = 640;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Adding media constraint:\", media.video);\n\t\t\t\t\t\tvideoSupport = {\n\t\t\t\t\t\t\t'height': { 'ideal': height },\n\t\t\t\t\t\t\t'width': { 'ideal': width }\n\t\t\t\t\t\t};\n\t\t\t\t\t\tJanus.log(\"Adding video constraint:\", videoSupport);\n\t\t\t\t\t}\n\t\t\t\t} else if (media.video === 'screen' || media.video === 'window') {\n\t\t\t\t\tif (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n\t\t\t\t\t\t// The new experimental getDisplayMedia API is available, let's use that\n\t\t\t\t\t\t// https://groups.google.com/forum/#!topic/discuss-webrtc/Uf0SrR4uxzk\n\t\t\t\t\t\t// https://webrtchacks.com/chrome-screensharing-getdisplaymedia/\n\t\t\t\t\t\tconstraints.video = {};\n\t\t\t\t\t\tif (media.screenshareFrameRate) {\n\t\t\t\t\t\t\tconstraints.video.frameRate = media.screenshareFrameRate;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (media.screenshareHeight) {\n\t\t\t\t\t\t\tconstraints.video.height = media.screenshareHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (media.screenshareWidth) {\n\t\t\t\t\t\t\tconstraints.video.width = media.screenshareWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconstraints.audio = media.captureDesktopAudio;\n\t\t\t\t\t\tnavigator.mediaDevices.getDisplayMedia(constraints)\n\t\t\t\t\t\t\t.then(function (stream) {\n\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\tif (isAudioSendEnabled(media) && !media.keepAudio) {\n\t\t\t\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia({ audio: true, video: false })\n\t\t\t\t\t\t\t\t\t\t.then(function (audioStream) {\n\t\t\t\t\t\t\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\t\t\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\tcallbacks.error(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// We're going to try and use the extension for Chrome 34+, the old approach\n\t\t\t\t\t// for older versions of Chrome, or the experimental support in Firefox 33+\n\t\t\t\t\tfunction callbackUserMedia(error, stream) {\n\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tcallbacks.error(error);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfunction getScreenMedia(constraints, gsmCallback, useAudio) {\n\t\t\t\t\t\tJanus.log(\"Adding media constraint (screen capture)\");\n\t\t\t\t\t\tJanus.debug(constraints);\n\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia(constraints)\n\t\t\t\t\t\t\t.then(function (stream) {\n\t\t\t\t\t\t\t\tif (useAudio) {\n\t\t\t\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia({ audio: true, video: false })\n\t\t\t\t\t\t\t\t\t\t.then(function (audioStream) {\n\t\t\t\t\t\t\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0]);\n\t\t\t\t\t\t\t\t\t\t\tgsmCallback(null, stream);\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tgsmCallback(null, stream);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(function (error) { pluginHandle.consentDialog(false); gsmCallback(error); });\n\t\t\t\t\t}\n\t\t\t\t\tif (Janus.webRTCAdapter.browserDetails.browser === 'chrome') {\n\t\t\t\t\t\tvar chromever = Janus.webRTCAdapter.browserDetails.version;\n\t\t\t\t\t\tvar maxver = 33;\n\t\t\t\t\t\tif (window.navigator.userAgent.match('Linux'))\n\t\t\t\t\t\t\tmaxver = 35;\t// \"known\" crash in chrome 34 and 35 on linux\n\t\t\t\t\t\tif (chromever >= 26 && chromever <= maxver) {\n\t\t\t\t\t\t\t// Chrome 26->33 requires some awkward chrome://flags manipulation\n\t\t\t\t\t\t\tconstraints = {\n\t\t\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\t\t\tmandatory: {\n\t\t\t\t\t\t\t\t\t\tgoogLeakyBucket: true,\n\t\t\t\t\t\t\t\t\t\tmaxWidth: window.screen.width,\n\t\t\t\t\t\t\t\t\t\tmaxHeight: window.screen.height,\n\t\t\t\t\t\t\t\t\t\tminFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\tmaxFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\tchromeMediaSource: 'screen'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\taudio: isAudioSendEnabled(media) && !media.keepAudio\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tgetScreenMedia(constraints, callbackUserMedia);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Chrome 34+ requires an extension\n\t\t\t\t\t\t\tJanus.extension.getScreen(function (error, sourceId) {\n\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\t\treturn callbacks.error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconstraints = {\n\t\t\t\t\t\t\t\t\taudio: false,\n\t\t\t\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\t\t\t\tmandatory: {\n\t\t\t\t\t\t\t\t\t\t\tchromeMediaSource: 'desktop',\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth: window.screen.width,\n\t\t\t\t\t\t\t\t\t\t\tmaxHeight: window.screen.height,\n\t\t\t\t\t\t\t\t\t\t\tminFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\t\tmaxFrameRate: media.screenshareFrameRate,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\toptional: [\n\t\t\t\t\t\t\t\t\t\t\t{ googLeakyBucket: true },\n\t\t\t\t\t\t\t\t\t\t\t{ googTemporalLayeredScreencast: true }\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tconstraints.video.mandatory.chromeMediaSourceId = sourceId;\n\t\t\t\t\t\t\t\tgetScreenMedia(constraints, callbackUserMedia,\n\t\t\t\t\t\t\t\t\tisAudioSendEnabled(media) && !media.keepAudio);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Janus.webRTCAdapter.browserDetails.browser === 'firefox') {\n\t\t\t\t\t\tif (Janus.webRTCAdapter.browserDetails.version >= 33) {\n\t\t\t\t\t\t\t// Firefox 33+ has experimental support for screen sharing\n\t\t\t\t\t\t\tconstraints = {\n\t\t\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\t\t\tmozMediaSource: media.video,\n\t\t\t\t\t\t\t\t\tmediaSource: media.video\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\taudio: isAudioSendEnabled(media) && !media.keepAudio\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tgetScreenMedia(constraints, function (err, stream) {\n\t\t\t\t\t\t\t\tcallbackUserMedia(err, stream);\n\t\t\t\t\t\t\t\t// Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=1045810\n\t\t\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\t\t\tvar lastTime = stream.currentTime;\n\t\t\t\t\t\t\t\t\tvar polly = window.setInterval(function () {\n\t\t\t\t\t\t\t\t\t\tif (!stream)\n\t\t\t\t\t\t\t\t\t\t\twindow.clearInterval(polly);\n\t\t\t\t\t\t\t\t\t\tif (stream.currentTime == lastTime) {\n\t\t\t\t\t\t\t\t\t\t\twindow.clearInterval(polly);\n\t\t\t\t\t\t\t\t\t\t\tif (stream.onended) {\n\t\t\t\t\t\t\t\t\t\t\t\tstream.onended();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tlastTime = stream.currentTime;\n\t\t\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar error = new Error('NavigatorUserMediaError');\n\t\t\t\t\t\t\terror.name = 'Your version of Firefox does not support screen sharing, please install Firefox 33 (or more recent versions)';\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error(error);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If we got here, we're not screensharing\n\t\t\tif (!media || media.video !== 'screen') {\n\t\t\t\t// Check whether all media sources are actually available or not\n\t\t\t\tnavigator.mediaDevices.enumerateDevices().then(function (devices) {\n\t\t\t\t\tvar audioExist = devices.some(function (device) {\n\t\t\t\t\t\treturn device.kind === 'audioinput';\n\t\t\t\t\t}),\n\t\t\t\t\t\tvideoExist = isScreenSendEnabled(media) || devices.some(function (device) {\n\t\t\t\t\t\t\treturn device.kind === 'videoinput';\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// Check whether a missing device is really a problem\n\t\t\t\t\tvar audioSend = isAudioSendEnabled(media);\n\t\t\t\t\tvar videoSend = isVideoSendEnabled(media);\n\t\t\t\t\tvar needAudioDevice = isAudioSendRequired(media);\n\t\t\t\t\tvar needVideoDevice = isVideoSendRequired(media);\n\t\t\t\t\tif (audioSend || videoSend || needAudioDevice || needVideoDevice) {\n\t\t\t\t\t\t// We need to send either audio or video\n\t\t\t\t\t\tvar haveAudioDevice = audioSend ? audioExist : false;\n\t\t\t\t\t\tvar haveVideoDevice = videoSend ? videoExist : false;\n\t\t\t\t\t\tif (!haveAudioDevice && !haveVideoDevice) {\n\t\t\t\t\t\t\t// FIXME Should we really give up, or just assume recvonly for both?\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error('No capture device found');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else if (!haveAudioDevice && needAudioDevice) {\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error('Audio capture is required, but no capture device found');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else if (!haveVideoDevice && needVideoDevice) {\n\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\tcallbacks.error('Video capture is required, but no capture device found');\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar gumConstraints = {\n\t\t\t\t\t\taudio: (audioExist && !media.keepAudio) ? audioSupport : false,\n\t\t\t\t\t\tvideo: (videoExist && !media.keepVideo) ? videoSupport : false\n\t\t\t\t\t};\n\t\t\t\t\tJanus.debug(\"getUserMedia constraints\", gumConstraints);\n\t\t\t\t\tif (!gumConstraints.audio && !gumConstraints.video) {\n\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia(gumConstraints)\n\t\t\t\t\t\t\t.then(function (stream) {\n\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\tstreamsDone(handleId, jsep, media, callbacks, stream);\n\t\t\t\t\t\t\t}).catch(function (error) {\n\t\t\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\t\t\tcallbacks.error({ code: error.code, name: error.name, message: error.message });\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\tpluginHandle.consentDialog(false);\n\t\t\t\t\t\tcallbacks.error(error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t// No need to do a getUserMedia, create offer/answer right away\n\t\t\tstreamsDone(handleId, jsep, media, callbacks);\n\t\t}\n\t}\n\n\tfunction prepareWebrtcPeer(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : webrtcError;\n\t\tcallbacks.customizeSdp = (typeof callbacks.customizeSdp == \"function\") ? callbacks.customizeSdp : Janus.noop;\n\t\tvar jsep = callbacks.jsep;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif (jsep) {\n\t\t\tif (!config.pc) {\n\t\t\t\tJanus.warn(\"Wait, no PeerConnection?? if this is an answer, use createAnswer and not handleRemoteJsep\");\n\t\t\t\tcallbacks.error(\"No PeerConnection: if this is an answer, use createAnswer and not handleRemoteJsep\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcallbacks.customizeSdp(jsep);\n\t\t\tconfig.pc.setRemoteDescription(jsep)\n\t\t\t\t.then(function () {\n\t\t\t\t\tJanus.log(\"Remote description accepted!\");\n\t\t\t\t\tconfig.remoteSdp = jsep.sdp;\n\t\t\t\t\t// Any trickle candidate we cached?\n\t\t\t\t\tif (config.candidates && config.candidates.length > 0) {\n\t\t\t\t\t\tfor (var i = 0; i < config.candidates.length; i++) {\n\t\t\t\t\t\t\tvar candidate = config.candidates[i];\n\t\t\t\t\t\t\tJanus.debug(\"Adding remote candidate:\", candidate);\n\t\t\t\t\t\t\tif (!candidate || candidate.completed === true) {\n\t\t\t\t\t\t\t\t// end-of-candidates\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(Janus.endOfCandidates);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// New candidate\n\t\t\t\t\t\t\t\tconfig.pc.addIceCandidate(candidate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconfig.candidates = [];\n\t\t\t\t\t}\n\t\t\t\t\t// Done\n\t\t\t\t\tcallbacks.success();\n\t\t\t\t}, callbacks.error);\n\t\t} else {\n\t\t\tcallbacks.error(\"Invalid JSEP\");\n\t\t}\n\t}\n\n\tfunction createOffer(handleId, media, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks.customizeSdp = (typeof callbacks.customizeSdp == \"function\") ? callbacks.customizeSdp : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar simulcast = (callbacks.simulcast === true);\n\t\tif (!simulcast) {\n\t\t\tJanus.log(\"Creating offer (iceDone=\" + config.iceDone + \")\");\n\t\t} else {\n\t\t\tJanus.log(\"Creating offer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n\t\t}\n\t\t// https://code.google.com/p/webrtc/issues/detail?id=3508\n\t\tvar mediaConstraints = {};\n\t\tif (Janus.unifiedPlan) {\n\t\t\t// We can use Transceivers\n\t\t\tvar audioTransceiver = null, videoTransceiver = null;\n\t\t\tvar transceivers = config.pc.getTransceivers();\n\t\t\tif (transceivers && transceivers.length > 0) {\n\t\t\t\tfor (var t of transceivers) {\n\t\t\t\t\tif ((t.sender && t.sender.track && t.sender.track.kind === \"audio\") ||\n\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\")) {\n\t\t\t\t\t\tif (!audioTransceiver) {\n\t\t\t\t\t\t\taudioTransceiver = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif ((t.sender && t.sender.track && t.sender.track.kind === \"video\") ||\n\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"video\")) {\n\t\t\t\t\t\tif (!videoTransceiver) {\n\t\t\t\t\t\t\tvideoTransceiver = t;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle audio (and related changes, if any)\n\t\t\tvar audioSend = isAudioSendEnabled(media);\n\t\t\tvar audioRecv = isAudioRecvEnabled(media);\n\t\t\tif (!audioSend && !audioRecv) {\n\t\t\t\t// Audio disabled: have we removed it?\n\t\t\t\tif (media.removeAudio && audioTransceiver) {\n\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\taudioTransceiver.setDirection(\"inactive\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\taudioTransceiver.direction = \"inactive\";\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Setting audio transceiver to inactive:\", audioTransceiver);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Take care of audio m-line\n\t\t\t\tif (audioSend && audioRecv) {\n\t\t\t\t\tif (audioTransceiver) {\n\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\taudioTransceiver.setDirection(\"sendrecv\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taudioTransceiver.direction = \"sendrecv\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to sendrecv:\", audioTransceiver);\n\t\t\t\t\t}\n\t\t\t\t} else if (audioSend && !audioRecv) {\n\t\t\t\t\tif (audioTransceiver) {\n\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\taudioTransceiver.setDirection(\"sendonly\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taudioTransceiver.direction = \"sendonly\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to sendonly:\", audioTransceiver);\n\t\t\t\t\t}\n\t\t\t\t} else if (!audioSend && audioRecv) {\n\t\t\t\t\tif (audioTransceiver) {\n\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\taudioTransceiver.setDirection(\"recvonly\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taudioTransceiver.direction = \"recvonly\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to recvonly:\", audioTransceiver);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// In theory, this is the only case where we might not have a transceiver yet\n\t\t\t\t\t\taudioTransceiver = config.pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n\t\t\t\t\t\tJanus.log(\"Adding recvonly audio transceiver:\", audioTransceiver);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle video (and related changes, if any)\n\t\t\tvar videoSend = isVideoSendEnabled(media);\n\t\t\tvar videoRecv = isVideoRecvEnabled(media);\n\t\t\tif (!videoSend && !videoRecv) {\n\t\t\t\t// Video disabled: have we removed it?\n\t\t\t\tif (media.removeVideo && videoTransceiver) {\n\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\tvideoTransceiver.setDirection(\"inactive\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvideoTransceiver.direction = \"inactive\";\n\t\t\t\t\t}\n\t\t\t\t\tJanus.log(\"Setting video transceiver to inactive:\", videoTransceiver);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Take care of video m-line\n\t\t\t\tif (videoSend && videoRecv) {\n\t\t\t\t\tif (videoTransceiver) {\n\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"sendrecv\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvideoTransceiver.direction = \"sendrecv\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting video transceiver to sendrecv:\", videoTransceiver);\n\t\t\t\t\t}\n\t\t\t\t} else if (videoSend && !videoRecv) {\n\t\t\t\t\tif (videoTransceiver) {\n\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"sendonly\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvideoTransceiver.direction = \"sendonly\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting video transceiver to sendonly:\", videoTransceiver);\n\t\t\t\t\t}\n\t\t\t\t} else if (!videoSend && videoRecv) {\n\t\t\t\t\tif (videoTransceiver) {\n\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"recvonly\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvideoTransceiver.direction = \"recvonly\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting video transceiver to recvonly:\", videoTransceiver);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// In theory, this is the only case where we might not have a transceiver yet\n\t\t\t\t\t\tvideoTransceiver = config.pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n\t\t\t\t\t\tJanus.log(\"Adding recvonly video transceiver:\", videoTransceiver);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmediaConstraints[\"offerToReceiveAudio\"] = isAudioRecvEnabled(media);\n\t\t\tmediaConstraints[\"offerToReceiveVideo\"] = isVideoRecvEnabled(media);\n\t\t}\n\t\tvar iceRestart = (callbacks.iceRestart === true);\n\t\tif (iceRestart) {\n\t\t\tmediaConstraints[\"iceRestart\"] = true;\n\t\t}\n\t\tJanus.debug(mediaConstraints);\n\t\t// Check if this is Firefox and we've been asked to do simulcasting\n\t\tvar sendVideo = isVideoSendEnabled(media);\n\t\tif (sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n\t\t\t// FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n\t\t\tJanus.log(\"Enabling Simulcasting for Firefox (RID)\");\n\t\t\tvar sender = config.pc.getSenders().find(function (s) { return s.track && s.track.kind === \"video\" });\n\t\t\tif (sender) {\n\t\t\t\tvar parameters = sender.getParameters();\n\t\t\t\tif (!parameters) {\n\t\t\t\t\tparameters = {};\n\t\t\t\t}\n\t\t\t\tvar maxBitrates = getMaxBitrates(callbacks.simulcastMaxBitrates);\n\t\t\t\tparameters.encodings = callbacks.sendEncodings || [\n\t\t\t\t\t{ rid: \"h\", active: true, maxBitrate: maxBitrates.high },\n\t\t\t\t\t{ rid: \"m\", active: true, maxBitrate: maxBitrates.medium, scaleResolutionDownBy: 2 },\n\t\t\t\t\t{ rid: \"l\", active: true, maxBitrate: maxBitrates.low, scaleResolutionDownBy: 4 }\n\t\t\t\t];\n\t\t\t\tsender.setParameters(parameters);\n\t\t\t}\n\t\t}\n\t\tconfig.pc.createOffer(mediaConstraints)\n\t\t\t.then(function (offer) {\n\t\t\t\tJanus.debug(offer);\n\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\tvar jsep = {\n\t\t\t\t\t\"type\": offer.type,\n\t\t\t\t\t\"sdp\": offer.sdp\n\t\t\t\t};\n\t\t\t\tcallbacks.customizeSdp(jsep);\n\t\t\t\toffer.sdp = jsep.sdp;\n\t\t\t\tJanus.log(\"Setting local description\");\n\t\t\t\tif (sendVideo && simulcast) {\n\t\t\t\t\t// This SDP munging only works with Chrome (Safari STP may support it too)\n\t\t\t\t\tif (Janus.webRTCAdapter.browserDetails.browser === \"chrome\" ||\n\t\t\t\t\t\tJanus.webRTCAdapter.browserDetails.browser === \"safari\") {\n\t\t\t\t\t\tJanus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n\t\t\t\t\t\toffer.sdp = mungeSdpForSimulcasting(offer.sdp);\n\t\t\t\t\t} else if (Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n\t\t\t\t\t\tJanus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconfig.mySdp = {\n\t\t\t\t\ttype: \"offer\",\n\t\t\t\t\tsdp: offer.sdp\n\t\t\t\t};\n\t\t\t\tconfig.pc.setLocalDescription(offer)\n\t\t\t\t\t.catch(callbacks.error);\n\t\t\t\tconfig.mediaConstraints = mediaConstraints;\n\t\t\t\tif (!config.iceDone && !config.trickle) {\n\t\t\t\t\t// Don't do anything until we have all candidates\n\t\t\t\t\tJanus.log(\"Waiting for all candidates...\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If transforms are present, notify Janus that the media is end-to-end encrypted\n\t\t\t\tif (config.senderTransforms || config.receiverTransforms) {\n\t\t\t\t\toffer[\"e2ee\"] = true;\n\t\t\t\t}\n\t\t\t\tcallbacks.success(offer);\n\t\t\t}, callbacks.error);\n\t}\n\n\tfunction createAnswer(handleId, media, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tcallbacks.customizeSdp = (typeof callbacks.customizeSdp == \"function\") ? callbacks.customizeSdp : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\tcallbacks.error(\"Invalid handle\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tvar simulcast = (callbacks.simulcast === true);\n\t\tif (!simulcast) {\n\t\t\tJanus.log(\"Creating answer (iceDone=\" + config.iceDone + \")\");\n\t\t} else {\n\t\t\tJanus.log(\"Creating answer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n\t\t}\n\t\tvar mediaConstraints = null;\n\t\tif (Janus.unifiedPlan) {\n\t\t\t// We can use Transceivers\n\t\t\tmediaConstraints = {};\n\t\t\tvar audioTransceiver = null, videoTransceiver = null;\n\t\t\tvar transceivers = config.pc.getTransceivers();\n\t\t\tif (transceivers && transceivers.length > 0) {\n\t\t\t\tfor (var t of transceivers) {\n\t\t\t\t\tif ((t.sender && t.sender.track && t.sender.track.kind === \"audio\") ||\n\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\")) {\n\t\t\t\t\t\tif (!audioTransceiver)\n\t\t\t\t\t\t\taudioTransceiver = t;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif ((t.sender && t.sender.track && t.sender.track.kind === \"video\") ||\n\t\t\t\t\t\t(t.receiver && t.receiver.track && t.receiver.track.kind === \"video\")) {\n\t\t\t\t\t\tif (!videoTransceiver)\n\t\t\t\t\t\t\tvideoTransceiver = t;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle audio (and related changes, if any)\n\t\t\tvar audioSend = isAudioSendEnabled(media);\n\t\t\tvar audioRecv = isAudioRecvEnabled(media);\n\t\t\tif (!audioSend && !audioRecv) {\n\t\t\t\t// Audio disabled: have we removed it?\n\t\t\t\tif (media.removeAudio && audioTransceiver) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\taudioTransceiver.setDirection(\"inactive\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taudioTransceiver.direction = \"inactive\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to inactive:\", audioTransceiver);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Take care of audio m-line\n\t\t\t\tif (audioSend && audioRecv) {\n\t\t\t\t\tif (audioTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\t\taudioTransceiver.setDirection(\"sendrecv\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taudioTransceiver.direction = \"sendrecv\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to sendrecv:\", audioTransceiver);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (audioSend && !audioRecv) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (audioTransceiver) {\n\t\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\t\taudioTransceiver.setDirection(\"sendonly\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taudioTransceiver.direction = \"sendonly\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to sendonly:\", audioTransceiver);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t}\n\t\t\t\t} else if (!audioSend && audioRecv) {\n\t\t\t\t\tif (audioTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (audioTransceiver.setDirection) {\n\t\t\t\t\t\t\t\taudioTransceiver.setDirection(\"recvonly\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taudioTransceiver.direction = \"recvonly\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting audio transceiver to recvonly:\", audioTransceiver);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// In theory, this is the only case where we might not have a transceiver yet\n\t\t\t\t\t\taudioTransceiver = config.pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n\t\t\t\t\t\tJanus.log(\"Adding recvonly audio transceiver:\", audioTransceiver);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Handle video (and related changes, if any)\n\t\t\tvar videoSend = isVideoSendEnabled(media);\n\t\t\tvar videoRecv = isVideoRecvEnabled(media);\n\t\t\tif (!videoSend && !videoRecv) {\n\t\t\t\t// Video disabled: have we removed it?\n\t\t\t\tif (media.removeVideo && videoTransceiver) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"inactive\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvideoTransceiver.direction = \"inactive\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tJanus.log(\"Setting video transceiver to inactive:\", videoTransceiver);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Take care of video m-line\n\t\t\t\tif (videoSend && videoRecv) {\n\t\t\t\t\tif (videoTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"sendrecv\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvideoTransceiver.direction = \"sendrecv\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting video transceiver to sendrecv:\", videoTransceiver);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (videoSend && !videoRecv) {\n\t\t\t\t\tif (videoTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"sendonly\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvideoTransceiver.direction = \"sendonly\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting video transceiver to sendonly:\", videoTransceiver);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (!videoSend && videoRecv) {\n\t\t\t\t\tif (videoTransceiver) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (videoTransceiver.setDirection) {\n\t\t\t\t\t\t\t\tvideoTransceiver.setDirection(\"recvonly\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvideoTransceiver.direction = \"recvonly\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJanus.log(\"Setting video transceiver to recvonly:\", videoTransceiver);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tJanus.error(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// In theory, this is the only case where we might not have a transceiver yet\n\t\t\t\t\t\tvideoTransceiver = config.pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n\t\t\t\t\t\tJanus.log(\"Adding recvonly video transceiver:\", videoTransceiver);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (Janus.webRTCAdapter.browserDetails.browser === \"firefox\" || Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n\t\t\t\tmediaConstraints = {\n\t\t\t\t\tofferToReceiveAudio: isAudioRecvEnabled(media),\n\t\t\t\t\tofferToReceiveVideo: isVideoRecvEnabled(media)\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tmediaConstraints = {\n\t\t\t\t\tmandatory: {\n\t\t\t\t\t\tOfferToReceiveAudio: isAudioRecvEnabled(media),\n\t\t\t\t\t\tOfferToReceiveVideo: isVideoRecvEnabled(media)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tJanus.debug(mediaConstraints);\n\t\t// Check if this is Firefox and we've been asked to do simulcasting\n\t\tvar sendVideo = isVideoSendEnabled(media);\n\t\tif (sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n\t\t\t// FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n\t\t\tJanus.log(\"Enabling Simulcasting for Firefox (RID)\");\n\t\t\tvar sender = config.pc.getSenders()[1];\n\t\t\tJanus.log(sender);\n\t\t\tvar parameters = sender.getParameters();\n\t\t\tJanus.log(parameters);\n\n\t\t\tvar maxBitrates = getMaxBitrates(callbacks.simulcastMaxBitrates);\n\t\t\tsender.setParameters({\n\t\t\t\tencodings: callbacks.sendEncodings || [\n\t\t\t\t\t{ rid: \"h\", active: true, maxBitrate: maxBitrates.high },\n\t\t\t\t\t{ rid: \"m\", active: true, maxBitrate: maxBitrates.medium, scaleResolutionDownBy: 2 },\n\t\t\t\t\t{ rid: \"l\", active: true, maxBitrate: maxBitrates.low, scaleResolutionDownBy: 4 }\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t\tconfig.pc.createAnswer(mediaConstraints)\n\t\t\t.then(function (answer) {\n\t\t\t\tJanus.debug(answer);\n\t\t\t\t// JSON.stringify doesn't work on some WebRTC objects anymore\n\t\t\t\t// See https://code.google.com/p/chromium/issues/detail?id=467366\n\t\t\t\tvar jsep = {\n\t\t\t\t\t\"type\": answer.type,\n\t\t\t\t\t\"sdp\": answer.sdp\n\t\t\t\t};\n\t\t\t\tcallbacks.customizeSdp(jsep);\n\t\t\t\tanswer.sdp = jsep.sdp;\n\t\t\t\tJanus.log(\"Setting local description\");\n\t\t\t\tif (sendVideo && simulcast) {\n\t\t\t\t\t// This SDP munging only works with Chrome\n\t\t\t\t\tif (Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n\t\t\t\t\t\t// FIXME Apparently trying to simulcast when answering breaks video in Chrome...\n\t\t\t\t\t\t//~ Janus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n\t\t\t\t\t\t//~ answer.sdp = mungeSdpForSimulcasting(answer.sdp);\n\t\t\t\t\t\tJanus.warn(\"simulcast=true, but this is an answer, and video breaks in Chrome if we enable it\");\n\t\t\t\t\t} else if (Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n\t\t\t\t\t\tJanus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconfig.mySdp = {\n\t\t\t\t\ttype: \"answer\",\n\t\t\t\t\tsdp: answer.sdp\n\t\t\t\t};\n\t\t\t\tconfig.pc.setLocalDescription(answer)\n\t\t\t\t\t.catch(callbacks.error);\n\t\t\t\tconfig.mediaConstraints = mediaConstraints;\n\t\t\t\tif (!config.iceDone && !config.trickle) {\n\t\t\t\t\t// Don't do anything until we have all candidates\n\t\t\t\t\tJanus.log(\"Waiting for all candidates...\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If transforms are present, notify Janus that the media is end-to-end encrypted\n\t\t\t\tif (config.senderTransforms || config.receiverTransforms) {\n\t\t\t\t\tanswer[\"e2ee\"] = true;\n\t\t\t\t}\n\t\t\t\tcallbacks.success(answer);\n\t\t\t}, callbacks.error);\n\t}\n\n\tfunction sendSDP(handleId, callbacks) {\n\t\tcallbacks = callbacks || {};\n\t\tcallbacks.success = (typeof callbacks.success == \"function\") ? callbacks.success : Janus.noop;\n\t\tcallbacks.error = (typeof callbacks.error == \"function\") ? callbacks.error : Janus.noop;\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle, not sending anything\");\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tJanus.log(\"Sending offer/answer SDP...\");\n\t\tif (!config.mySdp) {\n\t\t\tJanus.warn(\"Local SDP instance is invalid, not sending anything...\");\n\t\t\treturn;\n\t\t}\n\t\tconfig.mySdp = {\n\t\t\t\"type\": config.pc.localDescription.type,\n\t\t\t\"sdp\": config.pc.localDescription.sdp\n\t\t};\n\t\tif (config.trickle === false)\n\t\t\tconfig.mySdp[\"trickle\"] = false;\n\t\tJanus.debug(callbacks);\n\t\tconfig.sdpSent = true;\n\t\tcallbacks.success(config.mySdp);\n\t}\n\n\tfunction getVolume(handleId, remote) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn 0;\n\t\t}\n\t\tvar stream = remote ? \"remote\" : \"local\";\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif (!config.volume[stream])\n\t\t\tconfig.volume[stream] = { value: 0 };\n\t\t// Start getting the volume, if audioLevel in getStats is supported (apparently\n\t\t// they're only available in Chrome/Safari right now: https://webrtc-stats.callstats.io/)\n\t\tif (config.pc.getStats && (Janus.webRTCAdapter.browserDetails.browser === \"chrome\" ||\n\t\t\tJanus.webRTCAdapter.browserDetails.browser === \"safari\")) {\n\t\t\tif (remote && !config.remoteStream) {\n\t\t\t\tJanus.warn(\"Remote stream unavailable\");\n\t\t\t\treturn 0;\n\t\t\t} else if (!remote && !config.myStream) {\n\t\t\t\tJanus.warn(\"Local stream unavailable\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!config.volume[stream].timer) {\n\t\t\t\tJanus.log(\"Starting \" + stream + \" volume monitor\");\n\t\t\t\tconfig.volume[stream].timer = setInterval(function () {\n\t\t\t\t\tconfig.pc.getStats()\n\t\t\t\t\t\t.then(function (stats) {\n\t\t\t\t\t\t\tstats.forEach(function (res) {\n\t\t\t\t\t\t\t\tif (!res || res.kind !== \"audio\")\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\tif ((remote && !res.remoteSource) || (!remote && res.type !== \"media-source\"))\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\tconfig.volume[stream].value = (res.audioLevel ? res.audioLevel : 0);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}, 200);\n\t\t\t\treturn 0;\t// We don't have a volume to return yet\n\t\t\t}\n\t\t\treturn config.volume[stream].value;\n\t\t} else {\n\t\t\t// audioInputLevel and audioOutputLevel seem only available in Chrome? audioLevel\n\t\t\t// seems to be available on Chrome and Firefox, but they don't seem to work\n\t\t\tJanus.warn(\"Getting the \" + stream + \" volume unsupported by browser\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tfunction isMuted(handleId, video) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn true;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif (!config.pc) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn true;\n\t\t}\n\t\tif (!config.myStream) {\n\t\t\tJanus.warn(\"Invalid local MediaStream\");\n\t\t\treturn true;\n\t\t}\n\t\tif (video) {\n\t\t\t// Check video track\n\t\t\tif (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No video track\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !config.myStream.getVideoTracks()[0].enabled;\n\t\t} else {\n\t\t\t// Check audio track\n\t\t\tif (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No audio track\");\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn !config.myStream.getAudioTracks()[0].enabled;\n\t\t}\n\t}\n\n\tfunction mute(handleId, video, mute) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn false;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif (!config.pc) {\n\t\t\tJanus.warn(\"Invalid PeerConnection\");\n\t\t\treturn false;\n\t\t}\n\t\tif (!config.myStream) {\n\t\t\tJanus.warn(\"Invalid local MediaStream\");\n\t\t\treturn false;\n\t\t}\n\t\tif (video) {\n\t\t\t// Mute/unmute video track\n\t\t\tif (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No video track\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconfig.myStream.getVideoTracks()[0].enabled = !mute;\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// Mute/unmute audio track\n\t\t\tif (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n\t\t\t\tJanus.warn(\"No audio track\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconfig.myStream.getAudioTracks()[0].enabled = !mute;\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tfunction getBitrate(handleId) {\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle || !pluginHandle.webrtcStuff) {\n\t\t\tJanus.warn(\"Invalid handle\");\n\t\t\treturn \"Invalid handle\";\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif (!config.pc)\n\t\t\treturn \"Invalid PeerConnection\";\n\t\t// Start getting the bitrate, if getStats is supported\n\t\tif (config.pc.getStats) {\n\t\t\tif (!config.bitrate.timer) {\n\t\t\t\tJanus.log(\"Starting bitrate timer (via getStats)\");\n\t\t\t\tconfig.bitrate.timer = setInterval(function () {\n\t\t\t\t\tconfig.pc.getStats()\n\t\t\t\t\t\t.then(function (stats) {\n\t\t\t\t\t\t\tstats.forEach(function (res) {\n\t\t\t\t\t\t\t\tif (!res)\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\tvar inStats = false;\n\t\t\t\t\t\t\t\t// Check if these are statistics on incoming media\n\t\t\t\t\t\t\t\tif ((res.mediaType === \"video\" || res.id.toLowerCase().indexOf(\"video\") > -1) &&\n\t\t\t\t\t\t\t\t\tres.type === \"inbound-rtp\" && res.id.indexOf(\"rtcp\") < 0) {\n\t\t\t\t\t\t\t\t\t// New stats\n\t\t\t\t\t\t\t\t\tinStats = true;\n\t\t\t\t\t\t\t\t} else if (res.type == 'ssrc' && res.bytesReceived &&\n\t\t\t\t\t\t\t\t\t(res.googCodecName === \"VP8\" || res.googCodecName === \"\")) {\n\t\t\t\t\t\t\t\t\t// Older Chromer versions\n\t\t\t\t\t\t\t\t\tinStats = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Parse stats now\n\t\t\t\t\t\t\t\tif (inStats) {\n\t\t\t\t\t\t\t\t\tconfig.bitrate.bsnow = res.bytesReceived;\n\t\t\t\t\t\t\t\t\tconfig.bitrate.tsnow = res.timestamp;\n\t\t\t\t\t\t\t\t\tif (config.bitrate.bsbefore === null || config.bitrate.tsbefore === null) {\n\t\t\t\t\t\t\t\t\t\t// Skip this round\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.bsbefore = config.bitrate.bsnow;\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.tsbefore = config.bitrate.tsnow;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// Calculate bitrate\n\t\t\t\t\t\t\t\t\t\tvar timePassed = config.bitrate.tsnow - config.bitrate.tsbefore;\n\t\t\t\t\t\t\t\t\t\tif (Janus.webRTCAdapter.browserDetails.browser === \"safari\")\n\t\t\t\t\t\t\t\t\t\t\ttimePassed = timePassed / 1000;\t// Apparently the timestamp is in microseconds, in Safari\n\t\t\t\t\t\t\t\t\t\tvar bitRate = Math.round((config.bitrate.bsnow - config.bitrate.bsbefore) * 8 / timePassed);\n\t\t\t\t\t\t\t\t\t\tif (Janus.webRTCAdapter.browserDetails.browser === \"safari\")\n\t\t\t\t\t\t\t\t\t\t\tbitRate = parseInt(bitRate / 1000);\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.value = bitRate + ' kbits/sec';\n\t\t\t\t\t\t\t\t\t\t//~ Janus.log(\"Estimated bitrate is \" + config.bitrate.value);\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.bsbefore = config.bitrate.bsnow;\n\t\t\t\t\t\t\t\t\t\tconfig.bitrate.tsbefore = config.bitrate.tsnow;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}, 1000);\n\t\t\t\treturn \"0 kbits/sec\";\t// We don't have a bitrate value yet\n\t\t\t}\n\t\t\treturn config.bitrate.value;\n\t\t} else {\n\t\t\tJanus.warn(\"Getting the video bitrate unsupported by browser\");\n\t\t\treturn \"Feature unsupported by browser\";\n\t\t}\n\t}\n\n\tfunction webrtcError(error) {\n\t\tJanus.error(\"WebRTC error:\", error);\n\t}\n\n\tfunction cleanupWebrtc(handleId, hangupRequest) {\n\t\tJanus.log(\"Cleaning WebRTC stuff\");\n\t\tvar pluginHandle = pluginHandles[handleId];\n\t\tif (!pluginHandle) {\n\t\t\t// Nothing to clean\n\t\t\treturn;\n\t\t}\n\t\tvar config = pluginHandle.webrtcStuff;\n\t\tif (config) {\n\t\t\tif (hangupRequest === true) {\n\t\t\t\t// Send a hangup request (we don't really care about the response)\n\t\t\t\tvar request = { \"janus\": \"hangup\", \"transaction\": Janus.randomString(12) };\n\t\t\t\tif (pluginHandle.token)\n\t\t\t\t\trequest[\"token\"] = pluginHandle.token;\n\t\t\t\tif (apisecret)\n\t\t\t\t\trequest[\"apisecret\"] = apisecret;\n\t\t\t\tJanus.debug(\"Sending hangup request (handle=\" + handleId + \"):\");\n\t\t\t\tJanus.debug(request);\n\t\t\t\tif (websockets) {\n\t\t\t\t\trequest[\"session_id\"] = sessionId;\n\t\t\t\t\trequest[\"handle_id\"] = handleId;\n\t\t\t\t\tws.send(JSON.stringify(request));\n\t\t\t\t} else {\n\t\t\t\t\tJanus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n\t\t\t\t\t\tverb: 'POST',\n\t\t\t\t\t\twithCredentials: withCredentials,\n\t\t\t\t\t\tbody: request\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Cleanup stack\n\t\t\tconfig.remoteStream = null;\n\t\t\tif (config.volume) {\n\t\t\t\tif (config.volume[\"local\"] && config.volume[\"local\"].timer)\n\t\t\t\t\tclearInterval(config.volume[\"local\"].timer);\n\t\t\t\tif (config.volume[\"remote\"] && config.volume[\"remote\"].timer)\n\t\t\t\t\tclearInterval(config.volume[\"remote\"].timer);\n\t\t\t}\n\t\t\tconfig.volume = {};\n\t\t\tif (config.bitrate.timer)\n\t\t\t\tclearInterval(config.bitrate.timer);\n\t\t\tconfig.bitrate.timer = null;\n\t\t\tconfig.bitrate.bsnow = null;\n\t\t\tconfig.bitrate.bsbefore = null;\n\t\t\tconfig.bitrate.tsnow = null;\n\t\t\tconfig.bitrate.tsbefore = null;\n\t\t\tconfig.bitrate.value = null;\n\t\t\tif (!config.streamExternal && config.myStream) {\n\t\t\t\tJanus.log(\"Stopping local stream tracks\");\n\t\t\t\tJanus.stopAllTracks(config.myStream);\n\t\t\t}\n\t\t\tconfig.streamExternal = false;\n\t\t\tconfig.myStream = null;\n\t\t\t// Close PeerConnection\n\t\t\ttry {\n\t\t\t\tconfig.pc.close();\n\t\t\t} catch (e) {\n\t\t\t\t// Do nothing\n\t\t\t}\n\t\t\tconfig.pc = null;\n\t\t\tconfig.candidates = null;\n\t\t\tconfig.mySdp = null;\n\t\t\tconfig.remoteSdp = null;\n\t\t\tconfig.iceDone = false;\n\t\t\tconfig.dataChannel = {};\n\t\t\tconfig.dtmfSender = null;\n\t\t\tconfig.senderTransforms = null;\n\t\t\tconfig.receiverTransforms = null;\n\t\t}\n\t\tpluginHandle.oncleanup();\n\t}\n\n\t// Helper method to munge an SDP to enable simulcasting (Chrome only)\n\tfunction mungeSdpForSimulcasting(sdp) {\n\t\t// Let's munge the SDP to add the attributes for enabling simulcasting\n\t\t// (based on https://gist.github.com/ggarber/a19b4c33510028b9c657)\n\t\tvar lines = sdp.split(\"\\r\\n\");\n\t\tvar video = false;\n\t\tvar ssrc = [-1], ssrc_fid = [-1];\n\t\tvar cname = null, msid = null, mslabel = null, label = null;\n\t\tvar insertAt = -1;\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tvar mline = lines[i].match(/m=(\\w+) */);\n\t\t\tif (mline) {\n\t\t\t\tvar medium = mline[1];\n\t\t\t\tif (medium === \"video\") {\n\t\t\t\t\t// New video m-line: make sure it's the first one\n\t\t\t\t\tif (ssrc[0] < 0) {\n\t\t\t\t\t\tvideo = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// New non-video m-line: do we have what we were looking for?\n\t\t\t\t\tif (ssrc[0] > -1) {\n\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!video)\n\t\t\t\tcontinue;\n\t\t\tvar sim = lines[i].match(/a=ssrc-group:SIM (\\d+) (\\d+) (\\d+)/);\n\t\t\tif (sim) {\n\t\t\t\tJanus.warn(\"The SDP already contains a SIM attribute, munging will be skipped\");\n\t\t\t\treturn sdp;\n\t\t\t}\n\t\t\tvar fid = lines[i].match(/a=ssrc-group:FID (\\d+) (\\d+)/);\n\t\t\tif (fid) {\n\t\t\t\tssrc[0] = fid[1];\n\t\t\t\tssrc_fid[0] = fid[2];\n\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ssrc[0]) {\n\t\t\t\tvar match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)')\n\t\t\t\tif (match) {\n\t\t\t\t\tcname = match[1];\n\t\t\t\t}\n\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)')\n\t\t\t\tif (match) {\n\t\t\t\t\tmsid = match[1];\n\t\t\t\t}\n\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)')\n\t\t\t\tif (match) {\n\t\t\t\t\tmslabel = match[1];\n\t\t\t\t}\n\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' label:(.+)')\n\t\t\t\tif (match) {\n\t\t\t\t\tlabel = match[1];\n\t\t\t\t}\n\t\t\t\tif (lines[i].indexOf('a=ssrc:' + ssrc_fid[0]) === 0) {\n\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lines[i].length == 0) {\n\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tif (ssrc[0] < 0) {\n\t\t\t// Couldn't find a FID attribute, let's just take the first video SSRC we find\n\t\t\tinsertAt = -1;\n\t\t\tvideo = false;\n\t\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\t\tvar mline = lines[i].match(/m=(\\w+) */);\n\t\t\t\tif (mline) {\n\t\t\t\t\tvar medium = mline[1];\n\t\t\t\t\tif (medium === \"video\") {\n\t\t\t\t\t\t// New video m-line: make sure it's the first one\n\t\t\t\t\t\tif (ssrc[0] < 0) {\n\t\t\t\t\t\t\tvideo = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// New non-video m-line: do we have what we were looking for?\n\t\t\t\t\t\tif (ssrc[0] > -1) {\n\t\t\t\t\t\t\t// We're done, let's add the new attributes here\n\t\t\t\t\t\t\tinsertAt = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!video)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (ssrc[0] < 0) {\n\t\t\t\t\tvar value = lines[i].match(/a=ssrc:(\\d+)/);\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tssrc[0] = value[1];\n\t\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)')\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\tcname = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)')\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\tmsid = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)')\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\tmslabel = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tmatch = lines[i].match('a=ssrc:' + ssrc[0] + ' label:(.+)')\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\tlabel = match[1];\n\t\t\t\t\t}\n\t\t\t\t\tif (lines[i].indexOf('a=ssrc:' + ssrc_fid[0]) === 0) {\n\t\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n\t\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (lines[i].length === 0) {\n\t\t\t\t\tlines.splice(i, 1); i--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ssrc[0] < 0) {\n\t\t\t// Still nothing, let's just return the SDP we were asked to munge\n\t\t\tJanus.warn(\"Couldn't find the video SSRC, simulcasting NOT enabled\");\n\t\t\treturn sdp;\n\t\t}\n\t\tif (insertAt < 0) {\n\t\t\t// Append at the end\n\t\t\tinsertAt = lines.length;\n\t\t}\n\t\t// Generate a couple of SSRCs (for retransmissions too)\n\t\t// Note: should we check if there are conflicts, here?\n\t\tssrc[1] = Math.floor(Math.random() * 0xFFFFFFFF);\n\t\tssrc[2] = Math.floor(Math.random() * 0xFFFFFFFF);\n\t\tssrc_fid[1] = Math.floor(Math.random() * 0xFFFFFFFF);\n\t\tssrc_fid[2] = Math.floor(Math.random() * 0xFFFFFFFF);\n\t\t// Add attributes to the SDP\n\t\tfor (var i = 0; i < ssrc.length; i++) {\n\t\t\tif (cname) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' cname:' + cname);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif (msid) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' msid:' + msid);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif (mslabel) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' mslabel:' + mslabel);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif (label) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' label:' + label);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\t// Add the same info for the retransmission SSRC\n\t\t\tif (cname) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' cname:' + cname);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif (msid) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' msid:' + msid);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif (mslabel) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' mslabel:' + mslabel);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t\tif (label) {\n\t\t\t\tlines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' label:' + label);\n\t\t\t\tinsertAt++;\n\t\t\t}\n\t\t}\n\t\tlines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[2] + ' ' + ssrc_fid[2]);\n\t\tlines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[1] + ' ' + ssrc_fid[1]);\n\t\tlines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[0] + ' ' + ssrc_fid[0]);\n\t\tlines.splice(insertAt, 0, 'a=ssrc-group:SIM ' + ssrc[0] + ' ' + ssrc[1] + ' ' + ssrc[2]);\n\t\tsdp = lines.join(\"\\r\\n\");\n\t\tif (!sdp.endsWith(\"\\r\\n\"))\n\t\t\tsdp += \"\\r\\n\";\n\t\treturn sdp;\n\t}\n\n\t// Helper methods to parse a media object\n\tfunction isAudioSendEnabled(media) {\n\t\tJanus.debug(\"isAudioSendEnabled:\", media);\n\t\tif (!media)\n\t\t\treturn true;\t// Default\n\t\tif (media.audio === false)\n\t\t\treturn false;\t// Generic audio has precedence\n\t\tif (media.audioSend === undefined || media.audioSend === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.audioSend === true);\n\t}\n\n\tfunction isAudioSendRequired(media) {\n\t\tJanus.debug(\"isAudioSendRequired:\", media);\n\t\tif (!media)\n\t\t\treturn false;\t// Default\n\t\tif (media.audio === false || media.audioSend === false)\n\t\t\treturn false;\t// If we're not asking to capture audio, it's not required\n\t\tif (media.failIfNoAudio === undefined || media.failIfNoAudio === null)\n\t\t\treturn false;\t// Default\n\t\treturn (media.failIfNoAudio === true);\n\t}\n\n\tfunction isAudioRecvEnabled(media) {\n\t\tJanus.debug(\"isAudioRecvEnabled:\", media);\n\t\tif (!media)\n\t\t\treturn true;\t// Default\n\t\tif (media.audio === false)\n\t\t\treturn false;\t// Generic audio has precedence\n\t\tif (media.audioRecv === undefined || media.audioRecv === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.audioRecv === true);\n\t}\n\n\tfunction isVideoSendEnabled(media) {\n\t\tJanus.debug(\"isVideoSendEnabled:\", media);\n\t\tif (!media)\n\t\t\treturn true;\t// Default\n\t\tif (media.video === false)\n\t\t\treturn false;\t// Generic video has precedence\n\t\tif (media.videoSend === undefined || media.videoSend === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.videoSend === true);\n\t}\n\n\tfunction isVideoSendRequired(media) {\n\t\tJanus.debug(\"isVideoSendRequired:\", media);\n\t\tif (!media)\n\t\t\treturn false;\t// Default\n\t\tif (media.video === false || media.videoSend === false)\n\t\t\treturn false;\t// If we're not asking to capture video, it's not required\n\t\tif (media.failIfNoVideo === undefined || media.failIfNoVideo === null)\n\t\t\treturn false;\t// Default\n\t\treturn (media.failIfNoVideo === true);\n\t}\n\n\tfunction isVideoRecvEnabled(media) {\n\t\tJanus.debug(\"isVideoRecvEnabled:\", media);\n\t\tif (!media)\n\t\t\treturn true;\t// Default\n\t\tif (media.video === false)\n\t\t\treturn false;\t// Generic video has precedence\n\t\tif (media.videoRecv === undefined || media.videoRecv === null)\n\t\t\treturn true;\t// Default\n\t\treturn (media.videoRecv === true);\n\t}\n\n\tfunction isScreenSendEnabled(media) {\n\t\tJanus.debug(\"isScreenSendEnabled:\", media);\n\t\tif (!media)\n\t\t\treturn false;\n\t\tif (typeof media.video !== 'object' || typeof media.video.mandatory !== 'object')\n\t\t\treturn false;\n\t\tvar constraints = media.video.mandatory;\n\t\tif (constraints.chromeMediaSource)\n\t\t\treturn constraints.chromeMediaSource === 'desktop' || constraints.chromeMediaSource === 'screen';\n\t\telse if (constraints.mozMediaSource)\n\t\t\treturn constraints.mozMediaSource === 'window' || constraints.mozMediaSource === 'screen';\n\t\telse if (constraints.mediaSource)\n\t\t\treturn constraints.mediaSource === 'window' || constraints.mediaSource === 'screen';\n\t\treturn false;\n\t}\n\n\tfunction isDataEnabled(media) {\n\t\tJanus.debug(\"isDataEnabled:\", media);\n\t\tif (Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n\t\t\tJanus.warn(\"Edge doesn't support data channels yet\");\n\t\t\treturn false;\n\t\t}\n\t\tif (media === undefined || media === null)\n\t\t\treturn false;\t// Default\n\t\treturn (media.data === true);\n\t}\n\n\tfunction isTrickleEnabled(trickle) {\n\t\tJanus.debug(\"isTrickleEnabled:\", trickle);\n\t\treturn (trickle === false) ? false : true;\n\t}\n}\n\n\nexport default Janus;"]},"metadata":{},"sourceType":"module"}