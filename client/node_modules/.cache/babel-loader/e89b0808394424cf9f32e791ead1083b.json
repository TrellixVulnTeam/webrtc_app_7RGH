{"ast":null,"code":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils'; // Browser shims.\n\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp'; // Shimming starts here.\n\nexport function adapterFactory({\n  window\n} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp\n  }; // Shim browser if found.\n\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection || !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming chrome.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = chromeShim; // Must be called before shimPeerConnection.\n\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection || !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming firefox.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = firefoxShim; // Must be called before shimPeerConnection.\n\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n\n      logging('adapter.js shimming safari.'); // Export to the adapter global object visible in the browser.\n\n      adapter.browserShim = safariShim; // Must be called before shimCallbackAPI.\n\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}","map":{"version":3,"sources":["/home/abu/Documents/dev/JS/experiments/Web_App/client/node_modules/webrtc-adapter/src/js/adapter_factory.js"],"names":["utils","chromeShim","firefoxShim","safariShim","commonShim","sdp","adapterFactory","window","options","shimChrome","shimFirefox","shimSafari","logging","log","browserDetails","detectBrowser","adapter","extractVersion","disableLog","disableWarnings","browser","shimPeerConnection","version","browserShim","shimAddIceCandidateNullOrEmpty","shimGetUserMedia","shimMediaStream","shimOnTrack","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimGetStats","shimSenderReceiverGetStats","fixNegotiationNeeded","shimRTCIceCandidate","shimConnectionState","shimMaxMessageSize","shimSendThrowTypeError","removeExtmapAllowMixed","shimRemoveStream","shimSenderGetStats","shimReceiverGetStats","shimRTCDataChannel","shimAddTransceiver","shimGetParameters","shimCreateOffer","shimCreateAnswer","shimRTCIceServerUrls","shimCreateOfferLegacy","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","shimAudioContext"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n"]},"metadata":{},"sourceType":"module"}